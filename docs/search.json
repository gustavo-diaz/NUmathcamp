[
  {
    "objectID": "slides/02_matrices.html#getting-ready",
    "href": "slides/02_matrices.html#getting-ready",
    "title": "Matrices",
    "section": "",
    "text": "Set up eduroam\nGo back and make sure you have the MOST RECENT version of R and RStudio"
  },
  {
    "objectID": "slides/02_matrices.html#agenda",
    "href": "slides/02_matrices.html#agenda",
    "title": "Matrices",
    "section": "Agenda",
    "text": "Agenda\n\nMorning: Matrices and matrix algebra\nLunch: Senior faculty\nAfternoon: Tidyverse I"
  },
  {
    "objectID": "slides/02_matrices.html#scalars",
    "href": "slides/02_matrices.html#scalars",
    "title": "Matrices",
    "section": "Scalars",
    "text": "Scalars\nA single number is a scalar\n\na = 12\na\n\n[1] 12\n\n\n\\[a = 12\\]"
  },
  {
    "objectID": "slides/02_matrices.html#vectors",
    "href": "slides/02_matrices.html#vectors",
    "title": "Matrices",
    "section": "Vectors",
    "text": "Vectors\nWe already talked about vectors in R.\n\nb = c(12,14,15)\n\nHow would you define them?\n. . .\nA collection of concatenated elements"
  },
  {
    "objectID": "slides/02_matrices.html#vectors-1",
    "href": "slides/02_matrices.html#vectors-1",
    "title": "Matrices",
    "section": "Vectors",
    "text": "Vectors\nColumn vector\n\\[\n\\overrightarrow b =\n\\begin{bmatrix}\n  12 \\\\\n  14 \\\\\n  15\n\\end{bmatrix}\n\\]\n. . .\nRow vector\n\\[\n\\overrightarrow c = \\begin{bmatrix}\n  12 & 14 & 15\n\\end{bmatrix}\n\\]"
  },
  {
    "objectID": "slides/02_matrices.html#vectors-in-r",
    "href": "slides/02_matrices.html#vectors-in-r",
    "title": "Matrices",
    "section": "Vectors in R",
    "text": "Vectors in R\n\nc(5, 25, -2, 1)\n\n[1]  5 25 -2  1\n\n\n \n. . .\n\n10:20"
  },
  {
    "objectID": "slides/02_matrices.html#vectors-in-r-1",
    "href": "slides/02_matrices.html#vectors-in-r-1",
    "title": "Matrices",
    "section": "Vectors in R",
    "text": "Vectors in R\n\nc(5, 25, -2, 1)\n\n[1]  5 25 -2  1\n\n\n \n\n10:20\n\n [1] 10 11 12 13 14 15 16 17 18 19 20\n\n\n \n. . .\n\nseq(from = 3, to = 27, by = 3)"
  },
  {
    "objectID": "slides/02_matrices.html#vectors-in-r-2",
    "href": "slides/02_matrices.html#vectors-in-r-2",
    "title": "Matrices",
    "section": "Vectors in R",
    "text": "Vectors in R\n\nc(5, 25, -2, 1)\n\n[1]  5 25 -2  1\n\n\n \n\n10:20\n\n [1] 10 11 12 13 14 15 16 17 18 19 20\n\n\n \n\nseq(from = 3, to = 27, by = 3)\n\n[1]  3  6  9 12 15 18 21 24 27"
  },
  {
    "objectID": "slides/02_matrices.html#summation",
    "href": "slides/02_matrices.html#summation",
    "title": "Matrices",
    "section": "Summation",
    "text": "Summation\n\\[\\overrightarrow d = \\begin{bmatrix}\n12 & 7 & -2 & 3 & -1\n\\end{bmatrix}\\]\n. . .\n\nd = c(12, 7, -2, 3, -1)\n\n. . .\n\\[\\sum_{i=1}^3 d_i\\]"
  },
  {
    "objectID": "slides/02_matrices.html#summation-1",
    "href": "slides/02_matrices.html#summation-1",
    "title": "Matrices",
    "section": "Summation",
    "text": "Summation\n\\[\\overrightarrow d = \\begin{bmatrix}\n12 & 7 & -2 & 3 & -1\n\\end{bmatrix}\\]\n\nd = c(12, 7, -2, 3, -1)\n\n\\[\\sum_{i=1}^3 d_i = 12+7+(-2)\\]\n. . .\n\nsum(d[1:3])\n\n[1] 17"
  },
  {
    "objectID": "slides/02_matrices.html#summation-2",
    "href": "slides/02_matrices.html#summation-2",
    "title": "Matrices",
    "section": "Summation",
    "text": "Summation\n\\[\\overrightarrow d = \\begin{bmatrix}\n12 & 7 & -2 & 3 & -1\n\\end{bmatrix}\\]\n\nd = c(12, 7, -2, 3, -1)\n\n. . .\n\\[\n\\sum_{i=1}^n d_i\n\\]"
  },
  {
    "objectID": "slides/02_matrices.html#summation-3",
    "href": "slides/02_matrices.html#summation-3",
    "title": "Matrices",
    "section": "Summation",
    "text": "Summation\n\\[\\overrightarrow d = \\begin{bmatrix}\n12 & 7 & -2 & 3 & -1\n\\end{bmatrix}\\]\n\nd = c(12, 7, -2, 3, -1)\n\n\\[\n\\sum_{i=1}^n d_i = 12 + 7 + (-2) + 3 + (-1)\n\\]\n. . .\n\nsum(d)\n\n[1] 19"
  },
  {
    "objectID": "slides/02_matrices.html#product",
    "href": "slides/02_matrices.html#product",
    "title": "Matrices",
    "section": "Product",
    "text": "Product\n\\[\\overrightarrow d = \\begin{bmatrix}\n12 & 7 & -2 & 3 & 1\n\\end{bmatrix}\\]\n. . .\n\\[\\prod_{i=1}^n d_i\\]"
  },
  {
    "objectID": "slides/02_matrices.html#product-1",
    "href": "slides/02_matrices.html#product-1",
    "title": "Matrices",
    "section": "Product",
    "text": "Product\n\\[\\overrightarrow d = \\begin{bmatrix}\n12 & 7 & -2 & 3 & 1\n\\end{bmatrix}\\]\n\\[\\prod_{i=1}^n d_i = 12 \\cdot 7 \\cdot (-2) \\cdot 3 \\cdot (-1)\\]\n. . .\n\nprod(d)\n\n[1] 504"
  },
  {
    "objectID": "slides/02_matrices.html#product-2",
    "href": "slides/02_matrices.html#product-2",
    "title": "Matrices",
    "section": "Product",
    "text": "Product\n\\[\\overrightarrow d = \\begin{bmatrix}\n12 & 7 & -2 & 3 & 1\n\\end{bmatrix}\\]\nPractice: Write and calculate the product of the first three elements of \\(\\overrightarrow{d}\\)\n. . .\n\nprod(d[1:3])\n\n[1] -168"
  },
  {
    "objectID": "slides/02_matrices.html#matrices",
    "href": "slides/02_matrices.html#matrices",
    "title": "Matrices",
    "section": "Matrices",
    "text": "Matrices\n. . .\n\\[A = \\begin{bmatrix}\n12 & 14 & 15 \\\\\n115 & 22 & 127 \\\\\n193 & 29 & 219\n\\end{bmatrix}\\]\n\n\nDimensions: rows by columns (\\(r\\times c\\))\nNotation: \\(A_{3 \\times 3}\\)\nDemarcate with [ ]\n\n\n. . .\nWhy are they important?"
  },
  {
    "objectID": "slides/02_matrices.html#create-matrices-in-r",
    "href": "slides/02_matrices.html#create-matrices-in-r",
    "title": "Matrices",
    "section": "Create matrices in R",
    "text": "Create matrices in R\n\n# Create some vectors\nvector1 = 1:4\nvector2 = 5:8\nvector3 = 9:12\nvector4 = 13:16\n\n. . .\n\n# Using rbind(), each vector will be a row \nrbind_mat = rbind(vector1, vector2, vector3, vector4)\nrbind_mat"
  },
  {
    "objectID": "slides/02_matrices.html#create-matrices-in-r-1",
    "href": "slides/02_matrices.html#create-matrices-in-r-1",
    "title": "Matrices",
    "section": "Create matrices in R",
    "text": "Create matrices in R\n\n# Create some vectors\nvector1 = 1:4\nvector2 = 5:8\nvector3 = 9:12\nvector4 = 13:16\n\n\n# Using rbind(), each vector will be a row \nrbind_mat = rbind(vector1, vector2, vector3, vector4)\nrbind_mat\n\n        [,1] [,2] [,3] [,4]\nvector1    1    2    3    4\nvector2    5    6    7    8\nvector3    9   10   11   12\nvector4   13   14   15   16"
  },
  {
    "objectID": "slides/02_matrices.html#create-matrices-in-r-2",
    "href": "slides/02_matrices.html#create-matrices-in-r-2",
    "title": "Matrices",
    "section": "Create matrices in R",
    "text": "Create matrices in R\n\n# Create some vectors\nvector1 = 1:4\nvector2 = 5:8\nvector3 = 9:12\nvector4 = 13:16\n\n. . .\n\n# Using cbind(), each vector will be a column\ncbind_mat = cbind(vector1, vector2, vector3, vector4)\ncbind_mat"
  },
  {
    "objectID": "slides/02_matrices.html#create-matrices-in-r-3",
    "href": "slides/02_matrices.html#create-matrices-in-r-3",
    "title": "Matrices",
    "section": "Create matrices in R",
    "text": "Create matrices in R\n\n# Create some vectors\nvector1 = 1:4\nvector2 = 5:8\nvector3 = 9:12\nvector4 = 13:16\n\n\n# Using cbind(), each vector will be a column\ncbind_mat = cbind(vector1, vector2, vector3, vector4)\ncbind_mat\n\n     vector1 vector2 vector3 vector4\n[1,]       1       5       9      13\n[2,]       2       6      10      14\n[3,]       3       7      11      15\n[4,]       4       8      12      16"
  },
  {
    "objectID": "slides/02_matrices.html#create-matrices-in-r-4",
    "href": "slides/02_matrices.html#create-matrices-in-r-4",
    "title": "Matrices",
    "section": "Create matrices in R",
    "text": "Create matrices in R\n\n# Create some vectors\nvector1 = 1:4\nvector2 = 5:8\nvector3 = 9:12\nvector4 = 13:16\n\n\n\n\n# Using rbind(), \n# each vector will be a row \nrbind_mat = rbind(vector1, vector2,\n                  vector3, vector4)\nrbind_mat\n\n        [,1] [,2] [,3] [,4]\nvector1    1    2    3    4\nvector2    5    6    7    8\nvector3    9   10   11   12\nvector4   13   14   15   16\n\n\n\n\n# Using cbind(), \n# each vector will be a column\ncbind_mat = cbind(vector1, vector2, \n                  vector3, vector4)\ncbind_mat\n\n     vector1 vector2 vector3 vector4\n[1,]       1       5       9      13\n[2,]       2       6      10      14\n[3,]       3       7      11      15\n[4,]       4       8      12      16"
  },
  {
    "objectID": "slides/02_matrices.html#alternative",
    "href": "slides/02_matrices.html#alternative",
    "title": "Matrices",
    "section": "Alternative",
    "text": "Alternative\n\n\nTry ?matrix for more information.\n\nmatrix(data = c(1:12), nrow = 4, byrow = TRUE)"
  },
  {
    "objectID": "slides/02_matrices.html#alternative-1",
    "href": "slides/02_matrices.html#alternative-1",
    "title": "Matrices",
    "section": "Alternative",
    "text": "Alternative\n\n\nTry ?matrix for more information.\n\nmatrix(data = c(1:12), nrow = 4, byrow = TRUE)\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n[3,]    7    8    9\n[4,]   10   11   12\n\n\n \n. . .\n\nmatrix(data = c(1:12), nrow = 4, byrow = FALSE)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12"
  },
  {
    "objectID": "slides/02_matrices.html#structure",
    "href": "slides/02_matrices.html#structure",
    "title": "Matrices",
    "section": "Structure",
    "text": "Structure\n. . .\n\\[\nB=\n\\begin{bmatrix}\nb_{11} & b_{12} & b_{13} & \\ldots & b_{1n} \\\\\nb_{21} & b_{22} & b_{23} & \\ldots & b_{2n} \\\\\n\\vdots & \\vdots & \\vdots & \\ldots & \\vdots \\\\\nb_{m1} & b_{m2} & b_{m3} & \\ldots & b_{mn}\n\\end{bmatrix}\n\\]\n\n\n\\(B\\) is an \\(m \\times n\\) matrix\n\\(b_{23}\\) is the second cell down and third across\n\\(b_{ij}\\) is the \\(i\\text{th}\\) cell down and \\(j\\text{th}\\) across\n\\(i\\): rows, \\(j\\): columns"
  },
  {
    "objectID": "slides/02_matrices.html#indexing-in-r",
    "href": "slides/02_matrices.html#indexing-in-r",
    "title": "Matrices",
    "section": "Indexing in R",
    "text": "Indexing in R\n\n# byrow = FALSE is the default\nN = matrix(c(1:12), nrow = 4)\nN\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n\n. . .\n\nN[1,3]"
  },
  {
    "objectID": "slides/02_matrices.html#indexing-in-r-1",
    "href": "slides/02_matrices.html#indexing-in-r-1",
    "title": "Matrices",
    "section": "Indexing in R",
    "text": "Indexing in R\n\n# byrow = FALSE is the default\nN = matrix(c(1:12), nrow = 4)\nN\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n\n\nN[1,3]\n\n[1] 9"
  },
  {
    "objectID": "slides/02_matrices.html#indexing-in-r-2",
    "href": "slides/02_matrices.html#indexing-in-r-2",
    "title": "Matrices",
    "section": "Indexing in R",
    "text": "Indexing in R\n\n# byrow = FALSE is the default\nN = matrix(c(1:12), nrow = 4)\nN\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n\n\nN[1,3]\n\n[1] 9\n\n\n. . .\nPractice: Write code to find the index corresponding to number 12\n. . .\n\nN[4,3]\n\n[1] 12"
  },
  {
    "objectID": "slides/02_matrices.html#addition-and-subtraction",
    "href": "slides/02_matrices.html#addition-and-subtraction",
    "title": "Matrices",
    "section": "Addition and subtraction",
    "text": "Addition and subtraction\n. . .\n\\[A \\pm B=C\\]\n. . .\n\\[c_{ij}=a_{ij} \\pm b_{ij} \\text{ }\\forall i,j\\]\n. . .\n\nAdd or subtract each corresponding element\nNeed \\(A\\) and \\(B\\) to have exactly the same dimensions"
  },
  {
    "objectID": "slides/02_matrices.html#addition-and-subtraction-1",
    "href": "slides/02_matrices.html#addition-and-subtraction-1",
    "title": "Matrices",
    "section": "Addition and subtraction",
    "text": "Addition and subtraction\n\\[\\begin{bmatrix}\na_{11} & a_{12} & a_{13}\\\\\na_{21} & a_{22} & a_{23}\\\\\na_{31} & a_{32} & a_{33}\n\\end{bmatrix}\n\\pm\n\\begin{bmatrix}\nb_{11} & b_{12} & b_{13}\\\\\nb_{21} & b_{22} & b_{23}\\\\\nb_{31} & b_{32} & b_{33}\n\\end{bmatrix}\\] \\[=\\] \\[\\begin{bmatrix}\na_{11}\\pm b_{11} & a_{12}\\pm b_{12} & a_{13}\\pm b_{13}\\\\\na_{21}\\pm b_{21} & a_{22}\\pm b_{22} & a_{23}\\pm b_{23}\\\\\na_{31}\\pm b_{31} & a_{32}\\pm b_{32} & a_{33}\\pm b_{33}\n\\end{bmatrix}\\]"
  },
  {
    "objectID": "slides/02_matrices.html#in-r",
    "href": "slides/02_matrices.html#in-r",
    "title": "Matrices",
    "section": "In R",
    "text": "In R\n. . .\n\n\n\\[A= \\begin{bmatrix}\n3 & -1 & 2  \\\\\n9 & 4 & 6\n\\end{bmatrix}\\]\n\n\\[B= \\begin{bmatrix}\n5 & 2 & 0  \\\\\n9 & 3 & 4\n\\end{bmatrix}\\]"
  },
  {
    "objectID": "slides/02_matrices.html#in-r-1",
    "href": "slides/02_matrices.html#in-r-1",
    "title": "Matrices",
    "section": "In R",
    "text": "In R\n\n\n\\[A= \\begin{bmatrix}\n3 & -1 & 2  \\\\\n9 & 4 & 6\n\\end{bmatrix}\\]\n\nmatrix1 = matrix(c(3, 9, -1, 4, 2, 6), nrow = 2)\nmatrix1\n\n     [,1] [,2] [,3]\n[1,]    3   -1    2\n[2,]    9    4    6\n\n\n\n\\[B= \\begin{bmatrix}\n5 & 2 & 0  \\\\\n9 & 3 & 4\n\\end{bmatrix}\\]\n\nmatrix2 = matrix(c(5, 2, 0, 9, 3, 4), nrow = 2)\nmatrix2\n\n     [,1] [,2] [,3]\n[1,]    5    0    3\n[2,]    2    9    4\n\n\n\n\n. . .\n\nmatrix1 + matrix2"
  },
  {
    "objectID": "slides/02_matrices.html#in-r-2",
    "href": "slides/02_matrices.html#in-r-2",
    "title": "Matrices",
    "section": "In R",
    "text": "In R\n\n\n\\[A= \\begin{bmatrix}\n3 & -1 & 2  \\\\\n9 & 4 & 6\n\\end{bmatrix}\\]\n\nmatrix1 = matrix(c(3, 9, -1, 4, 2, 6), nrow = 2)\nmatrix1\n\n     [,1] [,2] [,3]\n[1,]    3   -1    2\n[2,]    9    4    6\n\n\n\n\\[B= \\begin{bmatrix}\n5 & 2 & 0  \\\\\n9 & 3 & 4\n\\end{bmatrix}\\]\n\nmatrix2 = matrix(c(5, 2, 0, 9, 3, 4), nrow = 2)\nmatrix2\n\n     [,1] [,2] [,3]\n[1,]    5    0    3\n[2,]    2    9    4\n\n\n\n\n\nmatrix1 + matrix2\n\n     [,1] [,2] [,3]\n[1,]    8   -1    5\n[2,]   11   13   10\n\n\n. . .\n\nmatrix1 - matrix2\n\n     [,1] [,2] [,3]\n[1,]   -2   -1   -1\n[2,]    7   -5    2"
  },
  {
    "objectID": "slides/02_matrices.html#exercise",
    "href": "slides/02_matrices.html#exercise",
    "title": "Matrices",
    "section": "Exercise",
    "text": "Exercise\nDo one with code and the other by hand.\n\n\n1) Calculate \\(A + B\\)\n\\[A= \\begin{bmatrix}\n1 & 0 \\\\\n-2 & -1\n\\end{bmatrix}\\]\n\\[B = \\begin{bmatrix}\n5 & 1 \\\\\n2 & -1\n\\end{bmatrix}\\]\n\n\n2) Calculate \\(A - B\\)\n\\[A= \\begin{bmatrix}\n6 & -2 & 8 & 12 \\\\\n4 & 42 & 8 & -6\n\\end{bmatrix}\\]\n\\[B = \\begin{bmatrix}\n18 & 42 & 3 & 7 \\\\\n0 & -42 & 15 & 4\n\\end{bmatrix}\\]"
  },
  {
    "objectID": "slides/02_matrices.html#answers-in-r",
    "href": "slides/02_matrices.html#answers-in-r",
    "title": "Matrices",
    "section": "Answers in R",
    "text": "Answers in R\n\n## 1) A + B\nA = matrix(c(1, 0, -2, -1), nrow = 2, byrow = TRUE)\nB = matrix(c(5, 1, 2, -1), nrow = 2, byrow = TRUE)\n\nA + B\n\n     [,1] [,2]\n[1,]    6    1\n[2,]    0   -2\n\n\n. . .\n\n## 2) A - B\nA = matrix(c(6, -2, 8, 12, 4, 42, 8, -6), \n           nrow = 2, byrow = TRUE)\nB = matrix(c(18, 42, 3, 7, 0, -42, 15, 4), \n           nrow = 2, byrow = TRUE)\n\nA - B\n\n     [,1] [,2] [,3] [,4]\n[1,]  -12  -44    5    5\n[2,]    4   84   -7  -10\n\n\n\n\nCareful with vector recycling in R!"
  },
  {
    "objectID": "slides/02_matrices.html#scalar-multiplication",
    "href": "slides/02_matrices.html#scalar-multiplication",
    "title": "Matrices",
    "section": "Scalar multiplication",
    "text": "Scalar multiplication\n. . .\n\\[A =\n\\begin{bmatrix}\na_{11} & a_{12} & a_{13}\\\\\na_{21} & a_{22} & a_{23}\\\\\na_{31} & a_{32} & a_{33}\n\\end{bmatrix}\\] \\[cA =\n\\begin{bmatrix}\nca_{11} & ca_{12} & ca_{13}\\\\\nca_{21} & ca_{22} & ca_{23}\\\\\nca_{31} & ca_{32} & ca_{33}\n\\end{bmatrix}\\]\n. . .\n\n3 * matrix1\n\n     [,1] [,2] [,3]\n[1,]    9   -3    6\n[2,]   27   12   18"
  },
  {
    "objectID": "slides/02_matrices.html#exercise-1",
    "href": "slides/02_matrices.html#exercise-1",
    "title": "Matrices",
    "section": "Exercise",
    "text": "Exercise\nCalculate \\(2\\times A\\) and \\(-3 \\times B\\).\n\\[A= \\begin{bmatrix}\n    1 & 4 & 8 \\\\\n    0 & -1 & 3\n    \\end{bmatrix}\\] \\[ B = \\begin{bmatrix}\n    -15 & 1 & 5 \\\\\n    2 & -42 & 0 \\\\\n    7 & 1 & 6\n    \\end{bmatrix}\\]\nDo one by hand, one in code"
  },
  {
    "objectID": "slides/02_matrices.html#answers",
    "href": "slides/02_matrices.html#answers",
    "title": "Matrices",
    "section": "Answers",
    "text": "Answers\n\nA = matrix(c(1, 4, 8,\n             0, -1, 3),\n           nrow = 2, byrow = TRUE)\n2*A\n\n     [,1] [,2] [,3]\n[1,]    2    8   16\n[2,]    0   -2    6\n\n\n. . .\n\nB = matrix(c(-15, 1, 5,\n             2, -42, 0,\n             7, 1, 6),\n           nrow = 3, byrow = TRUE)\n\n-3*B\n\n     [,1] [,2] [,3]\n[1,]   45   -3  -15\n[2,]   -6  126    0\n[3,]  -21   -3  -18"
  },
  {
    "objectID": "slides/02_matrices.html#matrix-multiplication",
    "href": "slides/02_matrices.html#matrix-multiplication",
    "title": "Matrices",
    "section": "Matrix multiplication ",
    "text": "Matrix multiplication \n\n\nMatrices must be conformable\nFor \\(A \\times B\\) we need \\(A_{i \\times k}\\) and \\(B_{k \\times j}\\)\nThe result will have \\(i \\times j\\) dimensions\nOrder matters! \\(A \\times B \\neq B \\times A\\) even if both operations are conformable"
  },
  {
    "objectID": "slides/02_matrices.html#multiplication-steps",
    "href": "slides/02_matrices.html#multiplication-steps",
    "title": "Matrices",
    "section": "Multiplication steps",
    "text": "Multiplication steps\n\n\nMultiply each row by each column, summing up each pair of multiplied terms (dot product)\nThe element in position \\(ij\\) is the sum of the products of elements in the \\(i\\)th row of the first matrix (\\(A\\)) and the corresponding elements in the \\(j\\)th column of the second matrix (\\(B\\)). \\[c_{ij}=\\sum_{k=1}^n a_{ik}b_{kj}\\]"
  },
  {
    "objectID": "slides/02_matrices.html#example",
    "href": "slides/02_matrices.html#example",
    "title": "Matrices",
    "section": "Example",
    "text": "Example\nFurniture company construction costs ($)\n\n\n\n\nChair\nSofa\n\n\n\n\nWood\n100\n150\n\n\nCloth\n270\n420\n\n\nFeathers\n130\n195\n\n\n\n. . .\n\\[C = \\begin{bmatrix}\n100 & 150\\\\\n270 & 420\\\\\n130 & 195\n\\end{bmatrix}\\]"
  },
  {
    "objectID": "slides/02_matrices.html#example-1",
    "href": "slides/02_matrices.html#example-1",
    "title": "Matrices",
    "section": "Example",
    "text": "Example\nMonthly production\n\n\n\nProduct\nQuantity\n\n\n\n\nChair\n45\n\n\nSofa\n30\n\n\n\n. . .\n\\[Q = \\begin{bmatrix}\n45 \\\\\n30\n\\end{bmatrix}\\]"
  },
  {
    "objectID": "slides/02_matrices.html#example-2",
    "href": "slides/02_matrices.html#example-2",
    "title": "Matrices",
    "section": "Example",
    "text": "Example\nTotal expenditure\n\\[ E = CQ = \\begin{bmatrix}\n100 & 150\\\\\n270 & 420\\\\\n130 & 195\n\\end{bmatrix}\n\\begin{bmatrix}\n45 \\\\\n30\n\\end{bmatrix}\\]\n. . .\n\n\n\n\n\n\nChair\nSofa\n\n\n\n\nWood\n100\n150\n\n\nCloth\n270\n420\n\n\nFeathers\n130\n195\n\n\n\n\n\n\n\nProduct\nQuantity\n\n\n\n\nChair\n45\n\n\nSofa\n30"
  },
  {
    "objectID": "slides/02_matrices.html#example-3",
    "href": "slides/02_matrices.html#example-3",
    "title": "Matrices",
    "section": "Example",
    "text": "Example\nTotal expenditure\n\\[ E = CQ = \\begin{bmatrix}\n100 & 150\\\\\n270 & 420\\\\\n130 & 195\n\\end{bmatrix}\n\\begin{bmatrix}\n45 \\\\\n30\n\\end{bmatrix}\\]\n. . .\n\\[\n= \\begin{bmatrix}\n(100)(45) + (150)(30) \\\\\n(270)(45) + (420)(30) \\\\\n(130)(45) + (195)(30)\n\\end{bmatrix} =\n\\begin{bmatrix}\n9,000 \\\\\n24,750 \\\\\n11,700\n\\end{bmatrix}\n\\]"
  },
  {
    "objectID": "slides/02_matrices.html#matrix-multiplication-in-r",
    "href": "slides/02_matrices.html#matrix-multiplication-in-r",
    "title": "Matrices",
    "section": "Matrix multiplication in R",
    "text": "Matrix multiplication in R\n\n\n\nC = matrix(c(100, 270, 130, \n             150, 420, 195), \n           nrow = 3)\nC\n\n     [,1] [,2]\n[1,]  100  150\n[2,]  270  420\n[3,]  130  195\n\n\n\n\nQ = matrix(c(45, 30), \n           nrow = 2)\nQ\n\n     [,1]\n[1,]   45\n[2,]   30\n\n\n\n\n. . .\n\nC %*% Q # Matrix multiplication operator\n\n      [,1]\n[1,]  9000\n[2,] 24750\n[3,] 11700"
  },
  {
    "objectID": "slides/02_matrices.html#practice",
    "href": "slides/02_matrices.html#practice",
    "title": "Matrices",
    "section": "Practice",
    "text": "Practice\nCheck in R with the %*% operator to see if these are conformable\n\\[\n\\begin{aligned}\nB_{4 \\times 1}=\n\\begin{bmatrix}\n2 \\\\\n3\\\\\n4\\\\\n1\n\\end{bmatrix}\nM_{3 \\times 3} =\n\\begin{bmatrix}\n1 & 0 & 2\\\\\n1 & 2 & 4\\\\\n2 & 3 & 2\n\\end{bmatrix}\nL_{2 \\times 3} =\n\\begin{bmatrix}\n6 & 5 & -1\\\\\n1 & 4 & 3\n\\end{bmatrix}\n\\end{aligned}\n\\]"
  },
  {
    "objectID": "slides/02_matrices.html#partial-answer",
    "href": "slides/02_matrices.html#partial-answer",
    "title": "Matrices",
    "section": "Partial answer",
    "text": "Partial answer\n\nB = matrix(c(2,3,4,1), ncol = 1)\n\nM = matrix(c(1, 1, 2, 0, 2, 3, 2, 4, 2), ncol = 3)\n\nL = matrix(c(6, 1, 5, 4, -1, 3), ncol = 3)\n\n. . .\n\nB %*% M\n\nError in B %*% M: non-conformable arguments\n\n\n. . .\n\nL %*% M\n\n     [,1] [,2] [,3]\n[1,]    9    7   30\n[2,]   11   17   24\n\n\n. . .\n\nM %*% L\n\nError in M %*% L: non-conformable arguments"
  },
  {
    "objectID": "slides/02_matrices.html#properties-of-operations",
    "href": "slides/02_matrices.html#properties-of-operations",
    "title": "Matrices",
    "section": "Properties of operations",
    "text": "Properties of operations\n. . .\nAddition and subtraction:\n\n\nAssociative: \\((A \\pm B) \\pm C = A \\pm (B \\pm C)\\)\nCommutative: \\(A \\pm B = B \\pm A\\)\n\n\n. . .\nMultiplication:\n\n\n\\(AB \\neq BA\\)\nIf \\(AB = BA\\) we say they commute\n\\(A(BC) = (AB)C\\)\n\\(A(B+C) = AB + AC\\)"
  },
  {
    "objectID": "slides/02_matrices.html#square-matrix",
    "href": "slides/02_matrices.html#square-matrix",
    "title": "Matrices",
    "section": "Square matrix",
    "text": "Square matrix\n\\[\nA = \\begin{bmatrix}\n1 & 2 & 3 \\\\\n4 & 5 & 6 \\\\\n7 & 8 & 9\n\\end{bmatrix}\n\\]\n. . .\n\n\n\\(m=n\\)\nDiagonal \\(d(A)=\\{1,5,9\\}\\)\nTrace \\(tr(A) = 1+5+9 = 15\\)"
  },
  {
    "objectID": "slides/02_matrices.html#diagonal-matrix",
    "href": "slides/02_matrices.html#diagonal-matrix",
    "title": "Matrices",
    "section": "Diagonal matrix",
    "text": "Diagonal matrix\n\\[\nD = \\begin{bmatrix}\n4 & 0 & 0 \\\\\n0 & 5 & 0 \\\\\n0 & 0 & 6\n\\end{bmatrix}\n\\]"
  },
  {
    "objectID": "slides/02_matrices.html#scalar-matrix",
    "href": "slides/02_matrices.html#scalar-matrix",
    "title": "Matrices",
    "section": "Scalar matrix",
    "text": "Scalar matrix\n\\[\nS = \\begin{bmatrix}\n7 & 0 & 0 \\\\\n0 & 7 & 0 \\\\\n0 & 0 & 7\n\\end{bmatrix}\n\\]"
  },
  {
    "objectID": "slides/02_matrices.html#identity-matrix",
    "href": "slides/02_matrices.html#identity-matrix",
    "title": "Matrices",
    "section": "Identity matrix",
    "text": "Identity matrix\n\\[\nI = \\begin{bmatrix}\n1 & 0 & 0 \\\\\n0 & 1 & 0 \\\\\n0 & 0 & 1\n\\end{bmatrix}\n\\]\n\nCan use \\(I_3\\) as a shorthand"
  },
  {
    "objectID": "slides/02_matrices.html#transpose",
    "href": "slides/02_matrices.html#transpose",
    "title": "Matrices",
    "section": "Transpose",
    "text": "Transpose\n\\[J =\n\\begin{bmatrix}\n4 & 5\\\\\n3 & 0\\\\\n7 & -2\n\\end{bmatrix} \\quad J' = J^T =\n\\begin{bmatrix}\n4 & 3 & 7 \\\\\n5 & 0 & -2\n\\end{bmatrix}\\]\n. . .\n\nJ = matrix(c(4, 3, 7, 5, 0, -2), ncol = 2)\nJ\n\n     [,1] [,2]\n[1,]    4    5\n[2,]    3    0\n[3,]    7   -2\n\n\n\nt(J)\n\n     [,1] [,2] [,3]\n[1,]    4    3    7\n[2,]    5    0   -2"
  },
  {
    "objectID": "slides/02_matrices.html#inverse",
    "href": "slides/02_matrices.html#inverse",
    "title": "Matrices",
    "section": "Inverse",
    "text": "Inverse\n\\[A × A^{-1} = I\\]\n. . .\nThe inverse of \\(A\\) is \\(A^{-1}\\) iff\n\\[AA^{-1} = A^{-1}A = I\\]\n\n\nSometimes there is no inverse"
  },
  {
    "objectID": "slides/02_matrices.html#finding-inverse-in-r",
    "href": "slides/02_matrices.html#finding-inverse-in-r",
    "title": "Matrices",
    "section": "Finding inverse in R",
    "text": "Finding inverse in R\n\nA = matrix(c(3, 2, 5, 2, 3, 2, 5, 2, 4), ncol = 3)\nA\n\n     [,1] [,2] [,3]\n[1,]    3    2    5\n[2,]    2    3    2\n[3,]    5    2    4\n\n\n\nsolve(A)\n\n            [,1]        [,2]       [,3]\n[1,] -0.29629630 -0.07407407  0.4074074\n[2,] -0.07407407  0.48148148 -0.1481481\n[3,]  0.40740741 -0.14814815 -0.1851852\n\n\n. . ."
  },
  {
    "objectID": "slides/02_matrices.html#transpose-and-inverse-are-very-important",
    "href": "slides/02_matrices.html#transpose-and-inverse-are-very-important",
    "title": "Matrices",
    "section": "Transpose and inverse are very important!",
    "text": "Transpose and inverse are very important!\n\\[\\widehat{\\beta} = \\underbrace{(X'X)^{-1}X'Y}_\\text{\"X prime X inverse, X prime Y\"}\\]"
  },
  {
    "objectID": "r/04_sampling.html",
    "href": "r/04_sampling.html",
    "title": "Sampling and simulation",
    "section": "",
    "text": "What is %&gt;%?\nA clear environment = a clear mind!\nHow to create a chunk?\nHow to run a line of code?\n\n\nDownload script",
    "crumbs": [
      "Programming",
      "4. Sampling and simulation"
    ]
  },
  {
    "objectID": "r/02_tidy1.html",
    "href": "r/02_tidy1.html",
    "title": "Tidyverse I",
    "section": "",
    "text": "There are two ways of viewing Quarto documents: source mode and visual mode. Unlike a Word document, what you see while editing a document is not exactly what you’ll see in the final version of the document. Converting a Quarto document into a clean HTML, Word, or PDF file is called rendering, and you can render your document at any time by clicking the render button at the top of the RStudio window. When your document renders, your code will run from top to bottom, in order. This means that if you create an object lower down on your script and then refer to that object above it, you will get an error when you render your file. This is true even if your code ran perfectly as you wrote it.\nThere are essentially two types of commands you can enter in R. The first is to store information. This involves creating or modifying an object (and objects can be anything from single values to dataframes to regression models to plots). The second type of command is to retrieve information, or equivalently, to print the value of an object. As we’ve seen, value is not necessarily numeric–it could be a table, a plot, a list of strings, or a Boolean value (whether a statement is true or false). We store information using an assignment operator (&lt;- or =) and retrieve information by simply typing the expression we want R to evaluate.\nAlmost all of our work in R will use functions. Functions are effectively shortcuts for common tasks in programming/data analysis. They can take any number of arguments, or inputs (including zero!) and return an object as an output. In general, the order of the arguments matters. Some arguments have defaults–that is, if you don’t specify what values you want them to take, R will use its default. This is the basic structure of code using a function:\n\n\nfunction(arg1, arg2, arg3, ...)\n\nDownload the script here\n\n\n\nR is powerful in part because it is very flexible. Most data analysis tasks can be done several different ways in R, depending on your preferences and the characteristics of your data set. This flexibility comes from the ability to load packages with additional functions. Today, we’ll be talking about “tidyverse,” a suite of packages used for data wrangling and visualization. We can think of tidyverse as a “mega-package” that contains several smaller packages, including “dplyr” and “ggplot2.” Usually, it makes sense to load the entire tidyverse at once so that we don’t have to worry about which functions belong to each specific package within tidyverse.\nIf you don’t have tidyverse installed, we’ll have to do that first.\n\n# install.packages(\"tidyverse\") # to run this code, remove the # at the beginning\n\nThis line of code only needs to be run once on your device. After you’ve installed tidyverse, it lives on your machine forever.\nOnce a package is installed, we have to tell R that we want to use it in this specific R script/Quarto document. This is called loading the package, and we usually do it with the “library” function. Some packages come preloaded in every R session–these are called “base R.”\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nNote that we don’t need quotation marks around the name of the package in the library function, even though we do need them in install.packages. Minor formatting choices like this matter a lot in R.\nWhen we load tidyverse, we get the above output. This tells us the names of all of the packages within tidyverse that we’ve loaded. It also warns us that two functions in dplyr have the same names as functions in stats, which is part of base R. This is not a problem for us. By default, if two functions in different packages have the same name, the one that was loaded most recently will be used.\nNow that we’ve loaded tidyverse, let’s work with some data.\n\n\n\n\ndata(USJudgeRatings) # load built-in data set\n\nhead(USJudgeRatings) # view the first 6 rows of data\n\n               CONT INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nAARONSON,L.H.   5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1  7.0  8.3  7.8\nALEXANDER,J.M.  6.8  8.9  8.8  8.5  7.8  8.1  8.0  8.0  7.8  7.9  8.5  8.7\nARMENTANO,A.J.  7.2  8.1  7.8  7.8  7.5  7.6  7.5  7.5  7.3  7.4  7.9  7.8\nBERDON,R.I.     6.8  8.8  8.5  8.8  8.3  8.5  8.7  8.7  8.4  8.5  8.8  8.7\nBRACKEN,J.J.    7.3  6.4  4.3  6.5  6.0  6.2  5.7  5.7  5.1  5.3  5.5  4.8\nBURNS,E.B.      6.2  8.8  8.7  8.5  7.9  8.0  8.1  8.0  8.0  8.0  8.6  8.6\n\nview(USJudgeRatings) # view the full dataframe in a new window\n\n?USJudgeRatings # view the documentation for this data set\n\nEach row corresponds to one of 43 state judges in Connecticut in 1977. The columns indicate the average rating of each judge by a group of lawyers. Note that the column names are short and are not particularly intuitive. Later, we’ll rename the columns to be clearer.\nThis data set is an example of tidy data, a format that makes data easier to work with. In tidy data, each row corresponds to an observation (a country, a survey respondent, a year, or any other unit of observation). Each column corresponds to a variable that was measured, and each cell is one measurement. Tidy data sets can have all kinds of different variables–strings, Boolean values (TRUE/FALSE), integers, and even missing values. In this case, all of our variables happen to have the type “double,” which refers to a rational number.\nWhile tidy data are convenient to work with, other ways of organizing data exist. If you find a data set with another organization structure, you will have to do some work to get it into a more usable format.\n\n\n\nThe full name of the data set is a bit clunky. Let’s create a copy with a simpler name. While we’re at it, we can work on renaming the variables.\n\njudges &lt;- USJudgeRatings # create a copy of USJudgeRatings with the name judges\n\njudges_renamed &lt;- judges %&gt;% # load the dataframe judges\n  rename(contacts = CONT) # rename the variable currently called \"CONT\" to \"contacts\"\n\nThe “rename” function is an example of a dplyr “verb.” Verbs are actions we apply to dataframes.\nNotice the symbol %&gt;% after the name of the dataframe. This is called a “pipe,” and you may also seen it written |&gt;. Pipes take some time to get used to, but they make R code a lot more readable. Essentially, the object before the pipe (usually a dataframe) is treated as the first argument of the function that comes after it. The following line of code is equivalent to the one shown above:\n\njudges_renamed &lt;- rename(judges, contacts = CONT)\n\n\n\n\n\n\n\nExercise\n\n\n\nRename the rest of the variables to more sensible names. In general, good variable names are in lowercase and do not have spaces or special characters. If you need to use two or more words, separate them with an underscore rather than a space. A variable name should succinctly communicate what the variable measures.\n\n\nOther dplyr verbs include the following:\n\narrange: sort dataframe by the values of one or more variables\nfilter: keep only the rows for which a particular statement is true (e.g., contacts &gt; 7)\nselect: keep only the listed columns\nmutate: add a variable which is a function of other variables in the dataframe\nsummarise (or summarize–both spellings are equivalent): create a simple summary table\n\nIt’s possible to do several verbs at once using pipes. For example, the following code filters out some rows of data and then computes the mean integrity and diligence scores for just those rows.\n\njudges_renamed %&gt;%\n  filter(contacts &gt; 7) %&gt;% # keep the rows for which contacts &gt; 7 and remove the rest\n  summarise(integrity = mean(INTG), # compute the mean of the integrity score\n            diligence = mean(DILG)) # compute the mean of the diligence score\n\n  integrity diligence\n1  8.011111  7.766667\n\n\nIf we want a summary of all of the variables in the data set, we can use “summarise_all.”\n\njudges_renamed %&gt;%\n  summarise_all(mean)\n\n  contacts    INTG     DMNR     DILG    CFMG     DECI     PREP     FAMI\n1 7.437209 8.02093 7.516279 7.693023 7.47907 7.565116 7.467442 7.488372\n      ORAL     WRIT     PHYS     RTEN\n1 7.293023 7.383721 7.934884 7.602326\n\n\n\n\n\n\n\n\nExercise\n\n\n\nLast time, we learned several functions that can be used to summarize data, including mean, median, min, and max. Try summarizing using a function other than mean.\n\n\nLet’s practice using a few more dplyr verbs:\n\njudges_revised &lt;- judges_renamed %&gt;%\n  select(contacts, INTG, DMNR, DILG, RTEN) %&gt;% # select five columns\n  mutate(high_integrity = if_else(INTG &gt; 8, 1, 0)) # create a variable called\n  # \"high_integrity\" and give it the value 1 if integrity is above 8 and 0 otherwise\n\njudges_revised %&gt;%\n  group_by(high_integrity) %&gt;% # separate the following summary into two rows based\n  # on whether the integrity score is higher than 8.\n  summarise_all(mean)\n\n# A tibble: 2 × 6\n  high_integrity contacts  INTG  DMNR  DILG  RTEN\n           &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1              0     7.58  7.36  6.55  7.03  6.73\n2              1     7.32  8.55  8.28  8.22  8.30\n\n\nThe most straightforward way to use “select” is to simply list the names of the columns we want to keep. However, for data sets with many variables, this could be cumbersome. Here are some alternatives:\n\nSelect all but PHYS\n\n\njudges_nophys &lt;- judges_renamed %&gt;%\n  select(-PHYS) # the minus sign tells R to exclude PHYS and keep everything else\n\n\nSelect a range of columns\n\n\njudges_firsthalf &lt;- judges_renamed %&gt;%\n  select(contacts:DECI) # keep columns in the specified range\n\n\nMake a list of column names and keep all the columns in the list\n\n\nkeep &lt;- c(\"contacts\", \"INTG\", \"CFMG\", \"WRIT\")\n\njudges_list &lt;- judges_renamed %&gt;%\n  select(all_of(keep))\n\n\n\n\n\n\n\nExercise\n\n\n\nAdd another variable to the data frame using mutate. You might consider adding two existing variables together or making another variable with if_else. For an extra challenge, think about how you might compute a weighted average of one of the variables, with the weights determined by the “contacts” variable.\n\n\nFinally, let’s learn about the arrange function together using the documentation. Our goal is to sort by retention score.\n\n?arrange # pull up documentation\n\njudges_renamed %&gt;%\n  arrange(RTEN) # default is ascending\n\n                contacts INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nBRACKEN,J.J.         7.3  6.4  4.3  6.5  6.0  6.2  5.7  5.7  5.1  5.3  5.5  4.8\nCOHEN,S.S.           7.0  5.9  4.9  5.1  5.4  5.9  4.8  5.1  4.7  4.9  6.8  5.0\nMIGNONE,A.F.         6.6  7.4  6.2  6.2  5.4  5.7  5.8  5.9  5.2  5.8  4.7  5.2\nSIDOR,W.J.           7.7  6.2  5.1  5.6  5.6  5.9  5.6  5.6  5.3  5.5  6.3  5.3\nLEVISTER,R.L.        9.6  6.9  5.7  6.6  6.9  6.6  6.2  6.0  5.8  5.8  7.2  6.0\nGRILLO,A.E.          7.0  7.5  6.4  6.8  6.5  7.0  6.6  6.8  6.3  6.6  6.2  6.5\nMCGRATH,J.F.         7.6  7.3  6.9  6.8  6.7  6.8  6.4  6.3  6.3  6.3  7.4  6.6\nWALL,R.A.            9.0  7.0  5.9  7.0  7.0  7.2  6.9  6.9  6.5  6.6  7.6  6.6\nHEALEY.A.H.          8.0  7.6  6.6  7.2  6.5  6.5  6.8  6.7  6.4  6.5  6.9  6.7\nTESTO,R.J.           8.3  7.3  7.0  6.8  7.0  7.1  6.7  6.7  6.7  6.7  8.0  7.0\nZARRILLI,K.J.        8.6  7.4  7.0  7.5  7.5  7.7  7.4  7.2  6.9  7.0  7.8  7.1\nDEVITA,H.J.          6.5  8.0  7.6  7.2  7.0  7.1  6.9  7.0  7.0  7.1  6.9  7.2\nMARTIN,L.F.          7.1  8.2  7.7  7.1  6.6  6.6  6.7  6.7  6.8  6.8  7.5  7.3\nHULL,T.C.            7.7  7.7  6.7  7.5  7.4  7.5  7.1  7.3  7.1  7.3  8.1  7.4\nSADEN.G.A.           6.6  7.4  6.9  8.4  8.0  7.9  8.2  8.4  7.7  7.9  8.4  7.5\nHAMILL,E.C.          7.3  8.0  7.4  7.7  7.3  7.3  7.3  7.2  7.1  7.2  8.0  7.6\nMISSAL,H.M.          6.2  8.3  8.1  7.7  7.4  7.3  7.3  7.3  7.2  7.3  7.8  7.6\nDEAN,H.H.            7.0  8.0  7.6  7.4  7.3  7.5  7.1  7.2  7.1  7.2  8.4  7.7\nDRISCOLL,P.J.        6.7  8.6  8.2  6.8  6.9  6.6  7.1  7.3  7.2  7.2  8.1  7.7\nSTAPLETON,J.F.       6.5  8.2  7.7  7.8  7.6  7.7  7.7  7.7  7.5  7.6  8.5  7.7\nAARONSON,L.H.        5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1  7.0  8.3  7.8\nARMENTANO,A.J.       7.2  8.1  7.8  7.8  7.5  7.6  7.5  7.5  7.3  7.4  7.9  7.8\nDANNEHY,J.F.         8.2  7.9  6.7  8.1  7.9  8.0  7.9  8.1  7.7  7.8  8.5  7.9\nSATANIELLO,A.G.      8.4  8.0  7.9  7.9  7.8  7.8  7.6  7.4  7.4  7.4  8.1  7.9\nTIERNEY,W.L.JR.      8.3  8.2  7.8  8.3  8.4  8.3  7.7  7.6  7.5  7.7  8.1  7.9\nHADDEN,W.L.JR.       6.5  8.1  8.0  8.0  7.9  8.0  7.9  7.8  7.8  7.8  8.4  8.0\nLEVINE,I.            8.3  8.2  7.4  7.8  7.7  7.7  7.7  7.8  7.5  7.6  8.0  8.0\nSPONZO,M.J.          6.9  8.3  8.0  8.1  7.9  7.9  7.9  7.7  7.6  7.7  8.1  8.0\nPASKEY,L.            7.5  8.1  7.7  8.2  8.0  8.1  8.2  8.4  8.0  8.1  8.4  8.1\nWRIGHT,D.B.          7.1  8.4  8.4  7.7  7.5  7.7  7.8  8.2  8.0  8.1  8.3  8.1\nO'BRIEN,F.J.         7.1  8.5  8.3  8.0  7.9  7.9  7.8  7.8  7.8  7.7  8.3  8.2\nSPEZIALE,J.A.        8.5  8.3  8.1  8.3  8.4  8.2  8.2  8.1  7.9  8.0  8.0  8.2\nSHEA,D.M.            6.9  8.5  7.8  8.5  8.1  8.2  8.4  8.5  8.1  8.3  8.7  8.3\nBURNS,E.B.           6.2  8.8  8.7  8.5  7.9  8.0  8.1  8.0  8.0  8.0  8.6  8.6\nALEXANDER,J.M.       6.8  8.9  8.8  8.5  7.8  8.1  8.0  8.0  7.8  7.9  8.5  8.7\nBERDON,R.I.          6.8  8.8  8.5  8.8  8.3  8.5  8.7  8.7  8.4  8.5  8.8  8.7\nMULVEY,H.M.          7.5  8.7  8.5  8.6  8.5  8.4  8.5  8.5  8.4  8.4  8.7  8.7\nO'SULLIVAN,T.J.      7.5  9.0  8.9  8.7  8.4  8.5  8.4  8.3  8.3  8.3  8.8  8.7\nDALY,J.J.            7.3  8.9  8.9  8.7  8.6  8.5  8.4  8.4  8.4  8.5  8.8  8.8\nSHEA,J.F.JR.         7.3  8.9  8.8  8.7  8.4  8.5  8.5  8.5  8.4  8.4  8.8  8.8\nCALLAHAN,R.J.       10.6  9.0  8.9  8.7  8.5  8.5  8.5  8.5  8.6  8.4  9.1  9.0\nNARUK,H.J.           7.8  8.9  8.7  8.9  8.7  8.8  8.9  9.0  8.8  8.9  9.0  9.0\nRUBINOW,J.E.         7.1  9.2  9.0  9.0  8.4  8.6  9.1  9.1  8.9  9.0  8.9  9.2\n\njudges_renamed %&gt;%\n  arrange(desc(RTEN)) # specify that we want a descending sort\n\n                contacts INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nRUBINOW,J.E.         7.1  9.2  9.0  9.0  8.4  8.6  9.1  9.1  8.9  9.0  8.9  9.2\nCALLAHAN,R.J.       10.6  9.0  8.9  8.7  8.5  8.5  8.5  8.5  8.6  8.4  9.1  9.0\nNARUK,H.J.           7.8  8.9  8.7  8.9  8.7  8.8  8.9  9.0  8.8  8.9  9.0  9.0\nDALY,J.J.            7.3  8.9  8.9  8.7  8.6  8.5  8.4  8.4  8.4  8.5  8.8  8.8\nSHEA,J.F.JR.         7.3  8.9  8.8  8.7  8.4  8.5  8.5  8.5  8.4  8.4  8.8  8.8\nALEXANDER,J.M.       6.8  8.9  8.8  8.5  7.8  8.1  8.0  8.0  7.8  7.9  8.5  8.7\nBERDON,R.I.          6.8  8.8  8.5  8.8  8.3  8.5  8.7  8.7  8.4  8.5  8.8  8.7\nMULVEY,H.M.          7.5  8.7  8.5  8.6  8.5  8.4  8.5  8.5  8.4  8.4  8.7  8.7\nO'SULLIVAN,T.J.      7.5  9.0  8.9  8.7  8.4  8.5  8.4  8.3  8.3  8.3  8.8  8.7\nBURNS,E.B.           6.2  8.8  8.7  8.5  7.9  8.0  8.1  8.0  8.0  8.0  8.6  8.6\nSHEA,D.M.            6.9  8.5  7.8  8.5  8.1  8.2  8.4  8.5  8.1  8.3  8.7  8.3\nO'BRIEN,F.J.         7.1  8.5  8.3  8.0  7.9  7.9  7.8  7.8  7.8  7.7  8.3  8.2\nSPEZIALE,J.A.        8.5  8.3  8.1  8.3  8.4  8.2  8.2  8.1  7.9  8.0  8.0  8.2\nPASKEY,L.            7.5  8.1  7.7  8.2  8.0  8.1  8.2  8.4  8.0  8.1  8.4  8.1\nWRIGHT,D.B.          7.1  8.4  8.4  7.7  7.5  7.7  7.8  8.2  8.0  8.1  8.3  8.1\nHADDEN,W.L.JR.       6.5  8.1  8.0  8.0  7.9  8.0  7.9  7.8  7.8  7.8  8.4  8.0\nLEVINE,I.            8.3  8.2  7.4  7.8  7.7  7.7  7.7  7.8  7.5  7.6  8.0  8.0\nSPONZO,M.J.          6.9  8.3  8.0  8.1  7.9  7.9  7.9  7.7  7.6  7.7  8.1  8.0\nDANNEHY,J.F.         8.2  7.9  6.7  8.1  7.9  8.0  7.9  8.1  7.7  7.8  8.5  7.9\nSATANIELLO,A.G.      8.4  8.0  7.9  7.9  7.8  7.8  7.6  7.4  7.4  7.4  8.1  7.9\nTIERNEY,W.L.JR.      8.3  8.2  7.8  8.3  8.4  8.3  7.7  7.6  7.5  7.7  8.1  7.9\nAARONSON,L.H.        5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1  7.0  8.3  7.8\nARMENTANO,A.J.       7.2  8.1  7.8  7.8  7.5  7.6  7.5  7.5  7.3  7.4  7.9  7.8\nDEAN,H.H.            7.0  8.0  7.6  7.4  7.3  7.5  7.1  7.2  7.1  7.2  8.4  7.7\nDRISCOLL,P.J.        6.7  8.6  8.2  6.8  6.9  6.6  7.1  7.3  7.2  7.2  8.1  7.7\nSTAPLETON,J.F.       6.5  8.2  7.7  7.8  7.6  7.7  7.7  7.7  7.5  7.6  8.5  7.7\nHAMILL,E.C.          7.3  8.0  7.4  7.7  7.3  7.3  7.3  7.2  7.1  7.2  8.0  7.6\nMISSAL,H.M.          6.2  8.3  8.1  7.7  7.4  7.3  7.3  7.3  7.2  7.3  7.8  7.6\nSADEN.G.A.           6.6  7.4  6.9  8.4  8.0  7.9  8.2  8.4  7.7  7.9  8.4  7.5\nHULL,T.C.            7.7  7.7  6.7  7.5  7.4  7.5  7.1  7.3  7.1  7.3  8.1  7.4\nMARTIN,L.F.          7.1  8.2  7.7  7.1  6.6  6.6  6.7  6.7  6.8  6.8  7.5  7.3\nDEVITA,H.J.          6.5  8.0  7.6  7.2  7.0  7.1  6.9  7.0  7.0  7.1  6.9  7.2\nZARRILLI,K.J.        8.6  7.4  7.0  7.5  7.5  7.7  7.4  7.2  6.9  7.0  7.8  7.1\nTESTO,R.J.           8.3  7.3  7.0  6.8  7.0  7.1  6.7  6.7  6.7  6.7  8.0  7.0\nHEALEY.A.H.          8.0  7.6  6.6  7.2  6.5  6.5  6.8  6.7  6.4  6.5  6.9  6.7\nMCGRATH,J.F.         7.6  7.3  6.9  6.8  6.7  6.8  6.4  6.3  6.3  6.3  7.4  6.6\nWALL,R.A.            9.0  7.0  5.9  7.0  7.0  7.2  6.9  6.9  6.5  6.6  7.6  6.6\nGRILLO,A.E.          7.0  7.5  6.4  6.8  6.5  7.0  6.6  6.8  6.3  6.6  6.2  6.5\nLEVISTER,R.L.        9.6  6.9  5.7  6.6  6.9  6.6  6.2  6.0  5.8  5.8  7.2  6.0\nSIDOR,W.J.           7.7  6.2  5.1  5.6  5.6  5.9  5.6  5.6  5.3  5.5  6.3  5.3\nMIGNONE,A.F.         6.6  7.4  6.2  6.2  5.4  5.7  5.8  5.9  5.2  5.8  4.7  5.2\nCOHEN,S.S.           7.0  5.9  4.9  5.1  5.4  5.9  4.8  5.1  4.7  4.9  6.8  5.0\nBRACKEN,J.J.         7.3  6.4  4.3  6.5  6.0  6.2  5.7  5.7  5.1  5.3  5.5  4.8\n\njudges_renamed %&gt;%\n  arrange(desc(RTEN), # sort by retention score, then by number of contacts\n          desc(contacts))\n\n                contacts INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nRUBINOW,J.E.         7.1  9.2  9.0  9.0  8.4  8.6  9.1  9.1  8.9  9.0  8.9  9.2\nCALLAHAN,R.J.       10.6  9.0  8.9  8.7  8.5  8.5  8.5  8.5  8.6  8.4  9.1  9.0\nNARUK,H.J.           7.8  8.9  8.7  8.9  8.7  8.8  8.9  9.0  8.8  8.9  9.0  9.0\nDALY,J.J.            7.3  8.9  8.9  8.7  8.6  8.5  8.4  8.4  8.4  8.5  8.8  8.8\nSHEA,J.F.JR.         7.3  8.9  8.8  8.7  8.4  8.5  8.5  8.5  8.4  8.4  8.8  8.8\nMULVEY,H.M.          7.5  8.7  8.5  8.6  8.5  8.4  8.5  8.5  8.4  8.4  8.7  8.7\nO'SULLIVAN,T.J.      7.5  9.0  8.9  8.7  8.4  8.5  8.4  8.3  8.3  8.3  8.8  8.7\nALEXANDER,J.M.       6.8  8.9  8.8  8.5  7.8  8.1  8.0  8.0  7.8  7.9  8.5  8.7\nBERDON,R.I.          6.8  8.8  8.5  8.8  8.3  8.5  8.7  8.7  8.4  8.5  8.8  8.7\nBURNS,E.B.           6.2  8.8  8.7  8.5  7.9  8.0  8.1  8.0  8.0  8.0  8.6  8.6\nSHEA,D.M.            6.9  8.5  7.8  8.5  8.1  8.2  8.4  8.5  8.1  8.3  8.7  8.3\nSPEZIALE,J.A.        8.5  8.3  8.1  8.3  8.4  8.2  8.2  8.1  7.9  8.0  8.0  8.2\nO'BRIEN,F.J.         7.1  8.5  8.3  8.0  7.9  7.9  7.8  7.8  7.8  7.7  8.3  8.2\nPASKEY,L.            7.5  8.1  7.7  8.2  8.0  8.1  8.2  8.4  8.0  8.1  8.4  8.1\nWRIGHT,D.B.          7.1  8.4  8.4  7.7  7.5  7.7  7.8  8.2  8.0  8.1  8.3  8.1\nLEVINE,I.            8.3  8.2  7.4  7.8  7.7  7.7  7.7  7.8  7.5  7.6  8.0  8.0\nSPONZO,M.J.          6.9  8.3  8.0  8.1  7.9  7.9  7.9  7.7  7.6  7.7  8.1  8.0\nHADDEN,W.L.JR.       6.5  8.1  8.0  8.0  7.9  8.0  7.9  7.8  7.8  7.8  8.4  8.0\nSATANIELLO,A.G.      8.4  8.0  7.9  7.9  7.8  7.8  7.6  7.4  7.4  7.4  8.1  7.9\nTIERNEY,W.L.JR.      8.3  8.2  7.8  8.3  8.4  8.3  7.7  7.6  7.5  7.7  8.1  7.9\nDANNEHY,J.F.         8.2  7.9  6.7  8.1  7.9  8.0  7.9  8.1  7.7  7.8  8.5  7.9\nARMENTANO,A.J.       7.2  8.1  7.8  7.8  7.5  7.6  7.5  7.5  7.3  7.4  7.9  7.8\nAARONSON,L.H.        5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1  7.0  8.3  7.8\nDEAN,H.H.            7.0  8.0  7.6  7.4  7.3  7.5  7.1  7.2  7.1  7.2  8.4  7.7\nDRISCOLL,P.J.        6.7  8.6  8.2  6.8  6.9  6.6  7.1  7.3  7.2  7.2  8.1  7.7\nSTAPLETON,J.F.       6.5  8.2  7.7  7.8  7.6  7.7  7.7  7.7  7.5  7.6  8.5  7.7\nHAMILL,E.C.          7.3  8.0  7.4  7.7  7.3  7.3  7.3  7.2  7.1  7.2  8.0  7.6\nMISSAL,H.M.          6.2  8.3  8.1  7.7  7.4  7.3  7.3  7.3  7.2  7.3  7.8  7.6\nSADEN.G.A.           6.6  7.4  6.9  8.4  8.0  7.9  8.2  8.4  7.7  7.9  8.4  7.5\nHULL,T.C.            7.7  7.7  6.7  7.5  7.4  7.5  7.1  7.3  7.1  7.3  8.1  7.4\nMARTIN,L.F.          7.1  8.2  7.7  7.1  6.6  6.6  6.7  6.7  6.8  6.8  7.5  7.3\nDEVITA,H.J.          6.5  8.0  7.6  7.2  7.0  7.1  6.9  7.0  7.0  7.1  6.9  7.2\nZARRILLI,K.J.        8.6  7.4  7.0  7.5  7.5  7.7  7.4  7.2  6.9  7.0  7.8  7.1\nTESTO,R.J.           8.3  7.3  7.0  6.8  7.0  7.1  6.7  6.7  6.7  6.7  8.0  7.0\nHEALEY.A.H.          8.0  7.6  6.6  7.2  6.5  6.5  6.8  6.7  6.4  6.5  6.9  6.7\nWALL,R.A.            9.0  7.0  5.9  7.0  7.0  7.2  6.9  6.9  6.5  6.6  7.6  6.6\nMCGRATH,J.F.         7.6  7.3  6.9  6.8  6.7  6.8  6.4  6.3  6.3  6.3  7.4  6.6\nGRILLO,A.E.          7.0  7.5  6.4  6.8  6.5  7.0  6.6  6.8  6.3  6.6  6.2  6.5\nLEVISTER,R.L.        9.6  6.9  5.7  6.6  6.9  6.6  6.2  6.0  5.8  5.8  7.2  6.0\nSIDOR,W.J.           7.7  6.2  5.1  5.6  5.6  5.9  5.6  5.6  5.3  5.5  6.3  5.3\nMIGNONE,A.F.         6.6  7.4  6.2  6.2  5.4  5.7  5.8  5.9  5.2  5.8  4.7  5.2\nCOHEN,S.S.           7.0  5.9  4.9  5.1  5.4  5.9  4.8  5.1  4.7  4.9  6.8  5.0\nBRACKEN,J.J.         7.3  6.4  4.3  6.5  6.0  6.2  5.7  5.7  5.1  5.3  5.5  4.8\n\n\nWhile there are many other dplyr verbs, these will get you pretty far. For a more advanced reference, see this dplyr cheatsheet. Now let’s pivot to some basic data visualization."
  },
  {
    "objectID": "r/02_tidy1.html#tidyverse-i-data-wrangling",
    "href": "r/02_tidy1.html#tidyverse-i-data-wrangling",
    "title": "Tidyverse I",
    "section": "",
    "text": "There are two ways of viewing Quarto documents: source mode and visual mode. Unlike a Word document, what you see while editing a document is not exactly what you’ll see in the final version of the document. Converting a Quarto document into a clean HTML, Word, or PDF file is called rendering, and you can render your document at any time by clicking the render button at the top of the RStudio window. When your document renders, your code will run from top to bottom, in order. This means that if you create an object lower down on your script and then refer to that object above it, you will get an error when you render your file. This is true even if your code ran perfectly as you wrote it.\nThere are essentially two types of commands you can enter in R. The first is to store information. This involves creating or modifying an object (and objects can be anything from single values to dataframes to regression models to plots). The second type of command is to retrieve information, or equivalently, to print the value of an object. As we’ve seen, value is not necessarily numeric–it could be a table, a plot, a list of strings, or a Boolean value (whether a statement is true or false). We store information using an assignment operator (&lt;- or =) and retrieve information by simply typing the expression we want R to evaluate.\nAlmost all of our work in R will use functions. Functions are effectively shortcuts for common tasks in programming/data analysis. They can take any number of arguments, or inputs (including zero!) and return an object as an output. In general, the order of the arguments matters. Some arguments have defaults–that is, if you don’t specify what values you want them to take, R will use its default. This is the basic structure of code using a function:\n\n\nfunction(arg1, arg2, arg3, ...)\n\nDownload the script here\n\n\n\nR is powerful in part because it is very flexible. Most data analysis tasks can be done several different ways in R, depending on your preferences and the characteristics of your data set. This flexibility comes from the ability to load packages with additional functions. Today, we’ll be talking about “tidyverse,” a suite of packages used for data wrangling and visualization. We can think of tidyverse as a “mega-package” that contains several smaller packages, including “dplyr” and “ggplot2.” Usually, it makes sense to load the entire tidyverse at once so that we don’t have to worry about which functions belong to each specific package within tidyverse.\nIf you don’t have tidyverse installed, we’ll have to do that first.\n\n# install.packages(\"tidyverse\") # to run this code, remove the # at the beginning\n\nThis line of code only needs to be run once on your device. After you’ve installed tidyverse, it lives on your machine forever.\nOnce a package is installed, we have to tell R that we want to use it in this specific R script/Quarto document. This is called loading the package, and we usually do it with the “library” function. Some packages come preloaded in every R session–these are called “base R.”\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nNote that we don’t need quotation marks around the name of the package in the library function, even though we do need them in install.packages. Minor formatting choices like this matter a lot in R.\nWhen we load tidyverse, we get the above output. This tells us the names of all of the packages within tidyverse that we’ve loaded. It also warns us that two functions in dplyr have the same names as functions in stats, which is part of base R. This is not a problem for us. By default, if two functions in different packages have the same name, the one that was loaded most recently will be used.\nNow that we’ve loaded tidyverse, let’s work with some data.\n\n\n\n\ndata(USJudgeRatings) # load built-in data set\n\nhead(USJudgeRatings) # view the first 6 rows of data\n\n               CONT INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nAARONSON,L.H.   5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1  7.0  8.3  7.8\nALEXANDER,J.M.  6.8  8.9  8.8  8.5  7.8  8.1  8.0  8.0  7.8  7.9  8.5  8.7\nARMENTANO,A.J.  7.2  8.1  7.8  7.8  7.5  7.6  7.5  7.5  7.3  7.4  7.9  7.8\nBERDON,R.I.     6.8  8.8  8.5  8.8  8.3  8.5  8.7  8.7  8.4  8.5  8.8  8.7\nBRACKEN,J.J.    7.3  6.4  4.3  6.5  6.0  6.2  5.7  5.7  5.1  5.3  5.5  4.8\nBURNS,E.B.      6.2  8.8  8.7  8.5  7.9  8.0  8.1  8.0  8.0  8.0  8.6  8.6\n\nview(USJudgeRatings) # view the full dataframe in a new window\n\n?USJudgeRatings # view the documentation for this data set\n\nEach row corresponds to one of 43 state judges in Connecticut in 1977. The columns indicate the average rating of each judge by a group of lawyers. Note that the column names are short and are not particularly intuitive. Later, we’ll rename the columns to be clearer.\nThis data set is an example of tidy data, a format that makes data easier to work with. In tidy data, each row corresponds to an observation (a country, a survey respondent, a year, or any other unit of observation). Each column corresponds to a variable that was measured, and each cell is one measurement. Tidy data sets can have all kinds of different variables–strings, Boolean values (TRUE/FALSE), integers, and even missing values. In this case, all of our variables happen to have the type “double,” which refers to a rational number.\nWhile tidy data are convenient to work with, other ways of organizing data exist. If you find a data set with another organization structure, you will have to do some work to get it into a more usable format.\n\n\n\nThe full name of the data set is a bit clunky. Let’s create a copy with a simpler name. While we’re at it, we can work on renaming the variables.\n\njudges &lt;- USJudgeRatings # create a copy of USJudgeRatings with the name judges\n\njudges_renamed &lt;- judges %&gt;% # load the dataframe judges\n  rename(contacts = CONT) # rename the variable currently called \"CONT\" to \"contacts\"\n\nThe “rename” function is an example of a dplyr “verb.” Verbs are actions we apply to dataframes.\nNotice the symbol %&gt;% after the name of the dataframe. This is called a “pipe,” and you may also seen it written |&gt;. Pipes take some time to get used to, but they make R code a lot more readable. Essentially, the object before the pipe (usually a dataframe) is treated as the first argument of the function that comes after it. The following line of code is equivalent to the one shown above:\n\njudges_renamed &lt;- rename(judges, contacts = CONT)\n\n\n\n\n\n\n\nExercise\n\n\n\nRename the rest of the variables to more sensible names. In general, good variable names are in lowercase and do not have spaces or special characters. If you need to use two or more words, separate them with an underscore rather than a space. A variable name should succinctly communicate what the variable measures.\n\n\nOther dplyr verbs include the following:\n\narrange: sort dataframe by the values of one or more variables\nfilter: keep only the rows for which a particular statement is true (e.g., contacts &gt; 7)\nselect: keep only the listed columns\nmutate: add a variable which is a function of other variables in the dataframe\nsummarise (or summarize–both spellings are equivalent): create a simple summary table\n\nIt’s possible to do several verbs at once using pipes. For example, the following code filters out some rows of data and then computes the mean integrity and diligence scores for just those rows.\n\njudges_renamed %&gt;%\n  filter(contacts &gt; 7) %&gt;% # keep the rows for which contacts &gt; 7 and remove the rest\n  summarise(integrity = mean(INTG), # compute the mean of the integrity score\n            diligence = mean(DILG)) # compute the mean of the diligence score\n\n  integrity diligence\n1  8.011111  7.766667\n\n\nIf we want a summary of all of the variables in the data set, we can use “summarise_all.”\n\njudges_renamed %&gt;%\n  summarise_all(mean)\n\n  contacts    INTG     DMNR     DILG    CFMG     DECI     PREP     FAMI\n1 7.437209 8.02093 7.516279 7.693023 7.47907 7.565116 7.467442 7.488372\n      ORAL     WRIT     PHYS     RTEN\n1 7.293023 7.383721 7.934884 7.602326\n\n\n\n\n\n\n\n\nExercise\n\n\n\nLast time, we learned several functions that can be used to summarize data, including mean, median, min, and max. Try summarizing using a function other than mean.\n\n\nLet’s practice using a few more dplyr verbs:\n\njudges_revised &lt;- judges_renamed %&gt;%\n  select(contacts, INTG, DMNR, DILG, RTEN) %&gt;% # select five columns\n  mutate(high_integrity = if_else(INTG &gt; 8, 1, 0)) # create a variable called\n  # \"high_integrity\" and give it the value 1 if integrity is above 8 and 0 otherwise\n\njudges_revised %&gt;%\n  group_by(high_integrity) %&gt;% # separate the following summary into two rows based\n  # on whether the integrity score is higher than 8.\n  summarise_all(mean)\n\n# A tibble: 2 × 6\n  high_integrity contacts  INTG  DMNR  DILG  RTEN\n           &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1              0     7.58  7.36  6.55  7.03  6.73\n2              1     7.32  8.55  8.28  8.22  8.30\n\n\nThe most straightforward way to use “select” is to simply list the names of the columns we want to keep. However, for data sets with many variables, this could be cumbersome. Here are some alternatives:\n\nSelect all but PHYS\n\n\njudges_nophys &lt;- judges_renamed %&gt;%\n  select(-PHYS) # the minus sign tells R to exclude PHYS and keep everything else\n\n\nSelect a range of columns\n\n\njudges_firsthalf &lt;- judges_renamed %&gt;%\n  select(contacts:DECI) # keep columns in the specified range\n\n\nMake a list of column names and keep all the columns in the list\n\n\nkeep &lt;- c(\"contacts\", \"INTG\", \"CFMG\", \"WRIT\")\n\njudges_list &lt;- judges_renamed %&gt;%\n  select(all_of(keep))\n\n\n\n\n\n\n\nExercise\n\n\n\nAdd another variable to the data frame using mutate. You might consider adding two existing variables together or making another variable with if_else. For an extra challenge, think about how you might compute a weighted average of one of the variables, with the weights determined by the “contacts” variable.\n\n\nFinally, let’s learn about the arrange function together using the documentation. Our goal is to sort by retention score.\n\n?arrange # pull up documentation\n\njudges_renamed %&gt;%\n  arrange(RTEN) # default is ascending\n\n                contacts INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nBRACKEN,J.J.         7.3  6.4  4.3  6.5  6.0  6.2  5.7  5.7  5.1  5.3  5.5  4.8\nCOHEN,S.S.           7.0  5.9  4.9  5.1  5.4  5.9  4.8  5.1  4.7  4.9  6.8  5.0\nMIGNONE,A.F.         6.6  7.4  6.2  6.2  5.4  5.7  5.8  5.9  5.2  5.8  4.7  5.2\nSIDOR,W.J.           7.7  6.2  5.1  5.6  5.6  5.9  5.6  5.6  5.3  5.5  6.3  5.3\nLEVISTER,R.L.        9.6  6.9  5.7  6.6  6.9  6.6  6.2  6.0  5.8  5.8  7.2  6.0\nGRILLO,A.E.          7.0  7.5  6.4  6.8  6.5  7.0  6.6  6.8  6.3  6.6  6.2  6.5\nMCGRATH,J.F.         7.6  7.3  6.9  6.8  6.7  6.8  6.4  6.3  6.3  6.3  7.4  6.6\nWALL,R.A.            9.0  7.0  5.9  7.0  7.0  7.2  6.9  6.9  6.5  6.6  7.6  6.6\nHEALEY.A.H.          8.0  7.6  6.6  7.2  6.5  6.5  6.8  6.7  6.4  6.5  6.9  6.7\nTESTO,R.J.           8.3  7.3  7.0  6.8  7.0  7.1  6.7  6.7  6.7  6.7  8.0  7.0\nZARRILLI,K.J.        8.6  7.4  7.0  7.5  7.5  7.7  7.4  7.2  6.9  7.0  7.8  7.1\nDEVITA,H.J.          6.5  8.0  7.6  7.2  7.0  7.1  6.9  7.0  7.0  7.1  6.9  7.2\nMARTIN,L.F.          7.1  8.2  7.7  7.1  6.6  6.6  6.7  6.7  6.8  6.8  7.5  7.3\nHULL,T.C.            7.7  7.7  6.7  7.5  7.4  7.5  7.1  7.3  7.1  7.3  8.1  7.4\nSADEN.G.A.           6.6  7.4  6.9  8.4  8.0  7.9  8.2  8.4  7.7  7.9  8.4  7.5\nHAMILL,E.C.          7.3  8.0  7.4  7.7  7.3  7.3  7.3  7.2  7.1  7.2  8.0  7.6\nMISSAL,H.M.          6.2  8.3  8.1  7.7  7.4  7.3  7.3  7.3  7.2  7.3  7.8  7.6\nDEAN,H.H.            7.0  8.0  7.6  7.4  7.3  7.5  7.1  7.2  7.1  7.2  8.4  7.7\nDRISCOLL,P.J.        6.7  8.6  8.2  6.8  6.9  6.6  7.1  7.3  7.2  7.2  8.1  7.7\nSTAPLETON,J.F.       6.5  8.2  7.7  7.8  7.6  7.7  7.7  7.7  7.5  7.6  8.5  7.7\nAARONSON,L.H.        5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1  7.0  8.3  7.8\nARMENTANO,A.J.       7.2  8.1  7.8  7.8  7.5  7.6  7.5  7.5  7.3  7.4  7.9  7.8\nDANNEHY,J.F.         8.2  7.9  6.7  8.1  7.9  8.0  7.9  8.1  7.7  7.8  8.5  7.9\nSATANIELLO,A.G.      8.4  8.0  7.9  7.9  7.8  7.8  7.6  7.4  7.4  7.4  8.1  7.9\nTIERNEY,W.L.JR.      8.3  8.2  7.8  8.3  8.4  8.3  7.7  7.6  7.5  7.7  8.1  7.9\nHADDEN,W.L.JR.       6.5  8.1  8.0  8.0  7.9  8.0  7.9  7.8  7.8  7.8  8.4  8.0\nLEVINE,I.            8.3  8.2  7.4  7.8  7.7  7.7  7.7  7.8  7.5  7.6  8.0  8.0\nSPONZO,M.J.          6.9  8.3  8.0  8.1  7.9  7.9  7.9  7.7  7.6  7.7  8.1  8.0\nPASKEY,L.            7.5  8.1  7.7  8.2  8.0  8.1  8.2  8.4  8.0  8.1  8.4  8.1\nWRIGHT,D.B.          7.1  8.4  8.4  7.7  7.5  7.7  7.8  8.2  8.0  8.1  8.3  8.1\nO'BRIEN,F.J.         7.1  8.5  8.3  8.0  7.9  7.9  7.8  7.8  7.8  7.7  8.3  8.2\nSPEZIALE,J.A.        8.5  8.3  8.1  8.3  8.4  8.2  8.2  8.1  7.9  8.0  8.0  8.2\nSHEA,D.M.            6.9  8.5  7.8  8.5  8.1  8.2  8.4  8.5  8.1  8.3  8.7  8.3\nBURNS,E.B.           6.2  8.8  8.7  8.5  7.9  8.0  8.1  8.0  8.0  8.0  8.6  8.6\nALEXANDER,J.M.       6.8  8.9  8.8  8.5  7.8  8.1  8.0  8.0  7.8  7.9  8.5  8.7\nBERDON,R.I.          6.8  8.8  8.5  8.8  8.3  8.5  8.7  8.7  8.4  8.5  8.8  8.7\nMULVEY,H.M.          7.5  8.7  8.5  8.6  8.5  8.4  8.5  8.5  8.4  8.4  8.7  8.7\nO'SULLIVAN,T.J.      7.5  9.0  8.9  8.7  8.4  8.5  8.4  8.3  8.3  8.3  8.8  8.7\nDALY,J.J.            7.3  8.9  8.9  8.7  8.6  8.5  8.4  8.4  8.4  8.5  8.8  8.8\nSHEA,J.F.JR.         7.3  8.9  8.8  8.7  8.4  8.5  8.5  8.5  8.4  8.4  8.8  8.8\nCALLAHAN,R.J.       10.6  9.0  8.9  8.7  8.5  8.5  8.5  8.5  8.6  8.4  9.1  9.0\nNARUK,H.J.           7.8  8.9  8.7  8.9  8.7  8.8  8.9  9.0  8.8  8.9  9.0  9.0\nRUBINOW,J.E.         7.1  9.2  9.0  9.0  8.4  8.6  9.1  9.1  8.9  9.0  8.9  9.2\n\njudges_renamed %&gt;%\n  arrange(desc(RTEN)) # specify that we want a descending sort\n\n                contacts INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nRUBINOW,J.E.         7.1  9.2  9.0  9.0  8.4  8.6  9.1  9.1  8.9  9.0  8.9  9.2\nCALLAHAN,R.J.       10.6  9.0  8.9  8.7  8.5  8.5  8.5  8.5  8.6  8.4  9.1  9.0\nNARUK,H.J.           7.8  8.9  8.7  8.9  8.7  8.8  8.9  9.0  8.8  8.9  9.0  9.0\nDALY,J.J.            7.3  8.9  8.9  8.7  8.6  8.5  8.4  8.4  8.4  8.5  8.8  8.8\nSHEA,J.F.JR.         7.3  8.9  8.8  8.7  8.4  8.5  8.5  8.5  8.4  8.4  8.8  8.8\nALEXANDER,J.M.       6.8  8.9  8.8  8.5  7.8  8.1  8.0  8.0  7.8  7.9  8.5  8.7\nBERDON,R.I.          6.8  8.8  8.5  8.8  8.3  8.5  8.7  8.7  8.4  8.5  8.8  8.7\nMULVEY,H.M.          7.5  8.7  8.5  8.6  8.5  8.4  8.5  8.5  8.4  8.4  8.7  8.7\nO'SULLIVAN,T.J.      7.5  9.0  8.9  8.7  8.4  8.5  8.4  8.3  8.3  8.3  8.8  8.7\nBURNS,E.B.           6.2  8.8  8.7  8.5  7.9  8.0  8.1  8.0  8.0  8.0  8.6  8.6\nSHEA,D.M.            6.9  8.5  7.8  8.5  8.1  8.2  8.4  8.5  8.1  8.3  8.7  8.3\nO'BRIEN,F.J.         7.1  8.5  8.3  8.0  7.9  7.9  7.8  7.8  7.8  7.7  8.3  8.2\nSPEZIALE,J.A.        8.5  8.3  8.1  8.3  8.4  8.2  8.2  8.1  7.9  8.0  8.0  8.2\nPASKEY,L.            7.5  8.1  7.7  8.2  8.0  8.1  8.2  8.4  8.0  8.1  8.4  8.1\nWRIGHT,D.B.          7.1  8.4  8.4  7.7  7.5  7.7  7.8  8.2  8.0  8.1  8.3  8.1\nHADDEN,W.L.JR.       6.5  8.1  8.0  8.0  7.9  8.0  7.9  7.8  7.8  7.8  8.4  8.0\nLEVINE,I.            8.3  8.2  7.4  7.8  7.7  7.7  7.7  7.8  7.5  7.6  8.0  8.0\nSPONZO,M.J.          6.9  8.3  8.0  8.1  7.9  7.9  7.9  7.7  7.6  7.7  8.1  8.0\nDANNEHY,J.F.         8.2  7.9  6.7  8.1  7.9  8.0  7.9  8.1  7.7  7.8  8.5  7.9\nSATANIELLO,A.G.      8.4  8.0  7.9  7.9  7.8  7.8  7.6  7.4  7.4  7.4  8.1  7.9\nTIERNEY,W.L.JR.      8.3  8.2  7.8  8.3  8.4  8.3  7.7  7.6  7.5  7.7  8.1  7.9\nAARONSON,L.H.        5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1  7.0  8.3  7.8\nARMENTANO,A.J.       7.2  8.1  7.8  7.8  7.5  7.6  7.5  7.5  7.3  7.4  7.9  7.8\nDEAN,H.H.            7.0  8.0  7.6  7.4  7.3  7.5  7.1  7.2  7.1  7.2  8.4  7.7\nDRISCOLL,P.J.        6.7  8.6  8.2  6.8  6.9  6.6  7.1  7.3  7.2  7.2  8.1  7.7\nSTAPLETON,J.F.       6.5  8.2  7.7  7.8  7.6  7.7  7.7  7.7  7.5  7.6  8.5  7.7\nHAMILL,E.C.          7.3  8.0  7.4  7.7  7.3  7.3  7.3  7.2  7.1  7.2  8.0  7.6\nMISSAL,H.M.          6.2  8.3  8.1  7.7  7.4  7.3  7.3  7.3  7.2  7.3  7.8  7.6\nSADEN.G.A.           6.6  7.4  6.9  8.4  8.0  7.9  8.2  8.4  7.7  7.9  8.4  7.5\nHULL,T.C.            7.7  7.7  6.7  7.5  7.4  7.5  7.1  7.3  7.1  7.3  8.1  7.4\nMARTIN,L.F.          7.1  8.2  7.7  7.1  6.6  6.6  6.7  6.7  6.8  6.8  7.5  7.3\nDEVITA,H.J.          6.5  8.0  7.6  7.2  7.0  7.1  6.9  7.0  7.0  7.1  6.9  7.2\nZARRILLI,K.J.        8.6  7.4  7.0  7.5  7.5  7.7  7.4  7.2  6.9  7.0  7.8  7.1\nTESTO,R.J.           8.3  7.3  7.0  6.8  7.0  7.1  6.7  6.7  6.7  6.7  8.0  7.0\nHEALEY.A.H.          8.0  7.6  6.6  7.2  6.5  6.5  6.8  6.7  6.4  6.5  6.9  6.7\nMCGRATH,J.F.         7.6  7.3  6.9  6.8  6.7  6.8  6.4  6.3  6.3  6.3  7.4  6.6\nWALL,R.A.            9.0  7.0  5.9  7.0  7.0  7.2  6.9  6.9  6.5  6.6  7.6  6.6\nGRILLO,A.E.          7.0  7.5  6.4  6.8  6.5  7.0  6.6  6.8  6.3  6.6  6.2  6.5\nLEVISTER,R.L.        9.6  6.9  5.7  6.6  6.9  6.6  6.2  6.0  5.8  5.8  7.2  6.0\nSIDOR,W.J.           7.7  6.2  5.1  5.6  5.6  5.9  5.6  5.6  5.3  5.5  6.3  5.3\nMIGNONE,A.F.         6.6  7.4  6.2  6.2  5.4  5.7  5.8  5.9  5.2  5.8  4.7  5.2\nCOHEN,S.S.           7.0  5.9  4.9  5.1  5.4  5.9  4.8  5.1  4.7  4.9  6.8  5.0\nBRACKEN,J.J.         7.3  6.4  4.3  6.5  6.0  6.2  5.7  5.7  5.1  5.3  5.5  4.8\n\njudges_renamed %&gt;%\n  arrange(desc(RTEN), # sort by retention score, then by number of contacts\n          desc(contacts))\n\n                contacts INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nRUBINOW,J.E.         7.1  9.2  9.0  9.0  8.4  8.6  9.1  9.1  8.9  9.0  8.9  9.2\nCALLAHAN,R.J.       10.6  9.0  8.9  8.7  8.5  8.5  8.5  8.5  8.6  8.4  9.1  9.0\nNARUK,H.J.           7.8  8.9  8.7  8.9  8.7  8.8  8.9  9.0  8.8  8.9  9.0  9.0\nDALY,J.J.            7.3  8.9  8.9  8.7  8.6  8.5  8.4  8.4  8.4  8.5  8.8  8.8\nSHEA,J.F.JR.         7.3  8.9  8.8  8.7  8.4  8.5  8.5  8.5  8.4  8.4  8.8  8.8\nMULVEY,H.M.          7.5  8.7  8.5  8.6  8.5  8.4  8.5  8.5  8.4  8.4  8.7  8.7\nO'SULLIVAN,T.J.      7.5  9.0  8.9  8.7  8.4  8.5  8.4  8.3  8.3  8.3  8.8  8.7\nALEXANDER,J.M.       6.8  8.9  8.8  8.5  7.8  8.1  8.0  8.0  7.8  7.9  8.5  8.7\nBERDON,R.I.          6.8  8.8  8.5  8.8  8.3  8.5  8.7  8.7  8.4  8.5  8.8  8.7\nBURNS,E.B.           6.2  8.8  8.7  8.5  7.9  8.0  8.1  8.0  8.0  8.0  8.6  8.6\nSHEA,D.M.            6.9  8.5  7.8  8.5  8.1  8.2  8.4  8.5  8.1  8.3  8.7  8.3\nSPEZIALE,J.A.        8.5  8.3  8.1  8.3  8.4  8.2  8.2  8.1  7.9  8.0  8.0  8.2\nO'BRIEN,F.J.         7.1  8.5  8.3  8.0  7.9  7.9  7.8  7.8  7.8  7.7  8.3  8.2\nPASKEY,L.            7.5  8.1  7.7  8.2  8.0  8.1  8.2  8.4  8.0  8.1  8.4  8.1\nWRIGHT,D.B.          7.1  8.4  8.4  7.7  7.5  7.7  7.8  8.2  8.0  8.1  8.3  8.1\nLEVINE,I.            8.3  8.2  7.4  7.8  7.7  7.7  7.7  7.8  7.5  7.6  8.0  8.0\nSPONZO,M.J.          6.9  8.3  8.0  8.1  7.9  7.9  7.9  7.7  7.6  7.7  8.1  8.0\nHADDEN,W.L.JR.       6.5  8.1  8.0  8.0  7.9  8.0  7.9  7.8  7.8  7.8  8.4  8.0\nSATANIELLO,A.G.      8.4  8.0  7.9  7.9  7.8  7.8  7.6  7.4  7.4  7.4  8.1  7.9\nTIERNEY,W.L.JR.      8.3  8.2  7.8  8.3  8.4  8.3  7.7  7.6  7.5  7.7  8.1  7.9\nDANNEHY,J.F.         8.2  7.9  6.7  8.1  7.9  8.0  7.9  8.1  7.7  7.8  8.5  7.9\nARMENTANO,A.J.       7.2  8.1  7.8  7.8  7.5  7.6  7.5  7.5  7.3  7.4  7.9  7.8\nAARONSON,L.H.        5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1  7.0  8.3  7.8\nDEAN,H.H.            7.0  8.0  7.6  7.4  7.3  7.5  7.1  7.2  7.1  7.2  8.4  7.7\nDRISCOLL,P.J.        6.7  8.6  8.2  6.8  6.9  6.6  7.1  7.3  7.2  7.2  8.1  7.7\nSTAPLETON,J.F.       6.5  8.2  7.7  7.8  7.6  7.7  7.7  7.7  7.5  7.6  8.5  7.7\nHAMILL,E.C.          7.3  8.0  7.4  7.7  7.3  7.3  7.3  7.2  7.1  7.2  8.0  7.6\nMISSAL,H.M.          6.2  8.3  8.1  7.7  7.4  7.3  7.3  7.3  7.2  7.3  7.8  7.6\nSADEN.G.A.           6.6  7.4  6.9  8.4  8.0  7.9  8.2  8.4  7.7  7.9  8.4  7.5\nHULL,T.C.            7.7  7.7  6.7  7.5  7.4  7.5  7.1  7.3  7.1  7.3  8.1  7.4\nMARTIN,L.F.          7.1  8.2  7.7  7.1  6.6  6.6  6.7  6.7  6.8  6.8  7.5  7.3\nDEVITA,H.J.          6.5  8.0  7.6  7.2  7.0  7.1  6.9  7.0  7.0  7.1  6.9  7.2\nZARRILLI,K.J.        8.6  7.4  7.0  7.5  7.5  7.7  7.4  7.2  6.9  7.0  7.8  7.1\nTESTO,R.J.           8.3  7.3  7.0  6.8  7.0  7.1  6.7  6.7  6.7  6.7  8.0  7.0\nHEALEY.A.H.          8.0  7.6  6.6  7.2  6.5  6.5  6.8  6.7  6.4  6.5  6.9  6.7\nWALL,R.A.            9.0  7.0  5.9  7.0  7.0  7.2  6.9  6.9  6.5  6.6  7.6  6.6\nMCGRATH,J.F.         7.6  7.3  6.9  6.8  6.7  6.8  6.4  6.3  6.3  6.3  7.4  6.6\nGRILLO,A.E.          7.0  7.5  6.4  6.8  6.5  7.0  6.6  6.8  6.3  6.6  6.2  6.5\nLEVISTER,R.L.        9.6  6.9  5.7  6.6  6.9  6.6  6.2  6.0  5.8  5.8  7.2  6.0\nSIDOR,W.J.           7.7  6.2  5.1  5.6  5.6  5.9  5.6  5.6  5.3  5.5  6.3  5.3\nMIGNONE,A.F.         6.6  7.4  6.2  6.2  5.4  5.7  5.8  5.9  5.2  5.8  4.7  5.2\nCOHEN,S.S.           7.0  5.9  4.9  5.1  5.4  5.9  4.8  5.1  4.7  4.9  6.8  5.0\nBRACKEN,J.J.         7.3  6.4  4.3  6.5  6.0  6.2  5.7  5.7  5.1  5.3  5.5  4.8\n\n\nWhile there are many other dplyr verbs, these will get you pretty far. For a more advanced reference, see this dplyr cheatsheet. Now let’s pivot to some basic data visualization."
  },
  {
    "objectID": "r/02_tidy1.html#data-visualization",
    "href": "r/02_tidy1.html#data-visualization",
    "title": "Tidyverse I",
    "section": "Data Visualization",
    "text": "Data Visualization\nLast time, we learned how to create a simple histogram with the hist function in base R. As a general rule, data visualization is more difficult in tidyverse compared to base R, but it’s also much prettier and more customizable. We’ll return to data visualization tomorrow, so don’t worry if it’s not perfectly clear at the end of today.\nIn tidyverse (and specifically, with the package ggplot2), all plots are organized with multiple “layers.” You can think of each layer as adding detail to the one before it. Our first layer is always something called the aesthetic layer. This tells R which variables are represented by each axis (and by other things like color or dot size).\n\njudges_renamed %&gt;% # load the dataframe and pipe it, as usual\n  ggplot(aes(x = INTG)) # since this is a histogram, we need to specify the variable on the x-axis but not the y-axis (which will be the number of times it occurs).\n\n\n\n\nWith just an aesthetic layer, we have the background and x-axis of our plot, but no data. That’s because we haven’t told R what kind of plot we want yet. Let’s do that now.\n\njudges_renamed %&gt;%\n  ggplot(aes(x = INTG)) + # to add a layer, we use a plus sign\n  geom_histogram() # add the default histogram of our x variable\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nThis is a bit better, but the default settings aren’t well-suited to our data set. In particular, the bins are too thin, making it hard to see the general shape of the distribution. We can fix this by setting the number of bins or the width of each bin. We’ll also change the color.\n\njudges_renamed %&gt;%\n  ggplot(aes(x = INTG)) + \n  geom_histogram(binwidth = 0.5, color = \"seagreen\", fill = \"seagreen\", alpha = 0.5) \n\n\n\n\nThis looks a lot better. The bins are an appropriate width for the number and range of observations in our data set, and the colors are pleasant. But it would be nice to label the x-axis more clearly and add a title.\n\njudges_renamed %&gt;%\n  ggplot(aes(x = INTG)) + \n  geom_histogram(binwidth = 0.5, color = \"seagreen\", fill = \"seagreen\", alpha = 0.5) +\n  labs(x = \"Integrity score\", title = \"Histogram of Judges' Integrity Scores (Connecticut, 1977)\") # add axis label and title\n\n\n\n\nThis looks pretty good. But we can customize the formatting even more with a theme layer.\n\njudges_renamed %&gt;%\n  ggplot(aes(x = INTG)) + \n  geom_histogram(binwidth = 0.5, color = \"seagreen\", fill = \"seagreen\", alpha = 0.5) +\n  labs(x = \"Integrity score\", title = \"Histogram of Judges' Integrity Scores (Connecticut, 1977)\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n\n\nExercise\n\n\n\nCreate a histogram for a different variable in the data set. Experiment with different bin widths. Using this guide to the built-in colors in R, change the color of the bars."
  },
  {
    "objectID": "math/04_calc2.html",
    "href": "math/04_calc2.html",
    "title": "Calculus II",
    "section": "",
    "text": "Last time, we learned about calculus as a way to deal with continuity usefully and discussed derivatives as one of the primary operations in calculus.\nToday, we review two remaining topics. First, we revisit derivatives to understand how computers calculate them. Second, we discuss integrals, or “anti-derivatives,” as the other important operation in calculus."
  },
  {
    "objectID": "math/04_calc2.html#overview",
    "href": "math/04_calc2.html#overview",
    "title": "Calculus II",
    "section": "",
    "text": "Last time, we learned about calculus as a way to deal with continuity usefully and discussed derivatives as one of the primary operations in calculus.\nToday, we review two remaining topics. First, we revisit derivatives to understand how computers calculate them. Second, we discuss integrals, or “anti-derivatives,” as the other important operation in calculus."
  },
  {
    "objectID": "math/04_calc2.html#how-do-computers-calculate-derivatives",
    "href": "math/04_calc2.html#how-do-computers-calculate-derivatives",
    "title": "Calculus II",
    "section": "2 How do computers calculate derivatives?",
    "text": "2 How do computers calculate derivatives?\nIn quite a few statistics and machine learning problems, computers need to compute derivatives of arbitrarily complex functions, perhaps millions of times. How do they do it? (see Baydin et al. 2018 for discussion of these three approaches)\n\nSymbolic differentiation: automatically combine the rules of differentiation (power rule, product rule, etc.). Math solvers like WolframAlpha or Mathematica do\nNumerical differentiation: infer the derivative by computing the function at different sample values (like we did with \\(y=x^2\\) before. For example, this is what the R function optim() does behind the scenes.\n\n\n# minimize the x^2 + 5 function:\noptim(par = 0, fn = function(x){x ^ 2 + 5}, method = \"L-BFGS-B\")\n\n$par\n[1] 0\n\n$value\n[1] 5\n\n$counts\nfunction gradient \n       1        1 \n\n$convergence\n[1] 0\n\n$message\n[1] \"CONVERGENCE: NORM OF PROJECTED GRADIENT &lt;= PGTOL\"\n\n\n\n\nAutomatic differentiation: track how every function is constructed from (differentiable) elementary computer operations (e.g., binary arithmetic), and get the result using the chain rule. Implemented in the torch R package, the TensorFlow, PyTorch, and JAX Python libraries, and the ReverseDiff.jl and Zygote.jl Julia packages."
  },
  {
    "objectID": "math/04_calc2.html#optimization",
    "href": "math/04_calc2.html#optimization",
    "title": "Calculus II",
    "section": "3 Optimization",
    "text": "3 Optimization\nOptimization allows us to find the minimum or maximum values (or extrema) a function takes. It has many applications in the social sciences:\n\nFormal theory: utility maximization, continuous choices\nOrdinary Least Squares (OLS): Focuses on minimizing the squared errors between observed data and model-estimated values\nMaximum Likelihood Estimation (MLE): Focuses on maximizing a likelihood function, given observed values.\n\n\n3.1 Extrema\nInformally, a maximum is just the highest value a function takes, and a minimum is the lowest value. We use the term “extrema” to define a general family of extreme values of a function.\nIn some situations, it can be easy to identify extrema intuitively by looking at a graph of the function.\n\nMaxima are high points (“peaks”)\nMinima are low points (“valleys”)\n\nWe can use derivatives (rates of change!) to get at extrema.\n\n\n3.2 Critical points and the First-Order Condition\nAt critical points (or stationary points), the derivative is zero or fails to exist. At these, the function has usually reached a (local) maximum or minimum.\n\nAt a maximum, the function must be increasing before the point and decreasing after it.\nAt a minimum, the function must be decreasing before the point and increasing after it.\n\nLocal extrema occur at critical points, but not all critical points are global extrema. For instance, sometimes the graph is changing between concave and convex (“inflection points”). Or sometimes the function is not differentiable at that point for other reasons.\nWe can find the local maxima and/or minima of a function by taking the derivative, setting it equal to zero, and solving for \\(x\\) (or whatever variable). This gives us the First-Order Condition (FOC).\n\\[FOC: f'(x)=0\\]\n\n\n3.3 Second-Order Condition\nNotice that after this we only know that there is a critical point. BUT we don’t know if we’ve found a maximum or minimum, or even if we’ve found an extremum.\nTo determine whether a we are seeing a (local) maximum or minimum, we can use the Second Derivative Test:\n\nStart by identifying \\(f''(x)\\)\nSubstitute in the stationary points \\((x^*)\\) identified from the FOC.\n\n\\(f''(x^*) &gt; 0\\) we have a local minimum\n\\(f''(x^*) &lt; 0\\) we have a local maximum\n\\(f''(x^*) = 0\\) we (may) have an inflection point - need to calculate higher-order derivatives (don’t worry about this for now)\n\n\nCollectively these give us the Second-Order Condition (SOC).\n\n\n\n3.4 Local or global extrema?\nNow when it comes to knowing whether extrema are local or global:\n\nHere we use the Extreme value theorem, which states that if a real-valued function is continuous on a closed and bounded (finite) interval, the function must have a global minimum and a global maximum on that interval at least once. Importantly, in this situation the global extrema exist, and they are either at the local extrema or at the boundaries (where we cannot even find critical points).\nSo to find the minimum/maximum on some interval, compare the local min/max to the value of the function at the interval’s endpoints. So, if the interval is \\((-\\infty, +\\infty)\\), check the function’s limits as it approaches \\(-\\infty\\) and \\(+\\infty\\)."
  },
  {
    "objectID": "math/04_calc2.html#integrals",
    "href": "math/04_calc2.html#integrals",
    "title": "Calculus II",
    "section": "4 Integrals",
    "text": "4 Integrals\nDerivatives allow us to calculate the instantaneous change (slope) in a continuous function at a given point. What if, instead of describing change at specific points, we wanted to characterize the net effect of change of a function. With what we know so far, we would start by calculating slopes at different parts of the function and then summing them all up together, but we have a continuous function, so simply adding up at discrete values would not work.\nThat is where integration comes in. Informally, we can think of integrals as the flip side of derivatives.\nWe can motivate integrals as a way of finding the area under a curve. Sometimes finding the area is easy. What’s the area under the curve between \\(x=-1\\) and \\(x=1\\) for this function?\n\\[\nf(x) =\n\\begin{cases}\n\\frac{1}{3} & \\text{for } x \\in [0, 3] \\\\\n0 & \\text{otherwise}\n\\end{cases}\n\\]\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nThe are is 1/3, we will do this together when we meet, but the essence of the answer is drawing the function and then calculating the area of a rectangle.\n\n\n\nNormally, finding the area under a curve is much harder. But this is basically the question behind integration.\n\n4.1 Integrals are about infinitesimals too\nLet’s say we have a function \\(y = x^2\\) And we want to find the area under the curve from \\(x=0\\) to \\(x=1\\). How would we do this?\n\nlibrary(tidyverse) # could also just do library(ggplot2)\nggplot() +\n  # draw main function\n  stat_function(fun = function(x){x ^ 2}, xlim = c(-2, 2)) +\n  # fill area under the curve between x = 0 and x = 1\n  geom_area(mapping = aes(x = 0), stat = \"function\",\n            fun = function(x){x ^ 2}, xlim = c(0, 1), fill = \"red\")\n\n\n\n\nOne way to approximate this area is by drawing narrow rectangles that cover the area in red.\n\nThat would be a rough approximation, but it gets better and better the narrower the rectangles are\n\\[\nArea = lim_{\\Delta x \\to 0}\\sum_i^n{f(x) \\cdot \\Delta x}\n\\]\n, where \\(\\Delta x\\) is the width of the rectangles and \\(n\\) is their number. In words, this says that the are is equal to the sum of all the rectangles when the limit of the rectangle with approximates zero.\nThis is actually one way to define the definite integral, \\(\\displaystyle\\int_a^bf(x)dx\\) (also known as the Riemann integral). We’ll learn how to compute these in a few moments.\n\n\n4.2 Indefinite integrals as antiderivatives\nThe indefinite integral, also known as the antiderivative, \\(F(x)\\) is the inverse of the function \\(f'(x)\\).\n\\[F(x)= \\displaystyle\\int f(x) \\text{ } dx\\]\nBeing inverse operations means that if you apply them in sequence you are back to the original place, so if you take the derivative of \\(F(x)\\), you wind up back at \\(f(x)\\).\n\\[F' = f \\text{ or } \\displaystyle\\frac{dF(x)}{dx} = f(x)\\]\nThis definition is annoyingly recursive, but useful enough to characterize the inverse operation of a derivative.\nTo illustrate, what is the antiderivative for a constant function \\(f(x) = 1\\)? Is there just one? (this example comes from Moore and Siegel, 2013, p. 137).\nBy power rule, we know the derivative of x is 1. So \\(F(x) = x\\) is one anti-derivative. But it is not the only one! The derivatives of $F(x) = x + 10 $ and \\(F(x) = x + 100\\) are also 1. We can anticipate this and just say that the anti-derivative of \\(f(x) = 1\\) i just \\(F(x) = x + C\\) where \\(C\\) is any constant number. We call \\(C\\) the “constant of integration.”\nWhat we just did is a process called anti-differentiation. We can use this concept to help us solve definite integrals!\n\n\n4.3 Solving definite integrals\nThere are two kinds of integrals, an indefinite integral is just the anti-derivative as defined above, we which express as \\(\\displaystyle\\int f(x)dx = F(x)\\), meaning that the output is a function.\nDefinite integrals instead return a value that represents the are under a curve, which means we need to specify a range to evaluate the area in question.\nOne way to calculate definite integrals, known as THE FUNDAMENTAL THEOREM OF CALCULUS is shown below:\n\\[\\displaystyle\\int_{a}^{b} f(x) \\text{ } dx = F(b)-F(a) = F(x)\\bigg|_{a}^{b}\\]\nIn words, the definite integral from point \\(a\\) to \\(b\\) of \\(f(x)\\) with respect to \\(dx\\) is the difference of the anti-derivatives evaluated at the upper and lower limit.\nThis implies that to calculate a definite integral, we first determine the antiderivative (indefinite integral) of \\(f(x)\\) (and represent it \\(F(x)\\)), substitute the upper limit first and then the lower limit one by one, and subtract the results in order.\n\n\n4.4 Rules of integration\nMany of the rules of integration have counterparts in differentiation.\nCoefficient rule: \\(\\displaystyle\\int c f(x)\\,dx = c \\int f(x)\\,dx\\)\nSum/difference rule: \\(\\displaystyle\\int (f(x) \\pm g(x))\\,dx = \\int f(x)\\,dx \\pm \\int g(x)\\,dx\\)\nConstant rule: \\(\\displaystyle\\int c\\,dx = cx + C\\)\nPower rule: \\(\\displaystyle\\int x^n\\,dx = \\frac{x^{n+1}}{n+1} + C \\qquad \\forall n \\neq -1\\)\nReciprocal rule:\\(\\displaystyle\\int \\frac{1}{x}\\,dx = \\ln(x) + C\\)\nExponent and logarithm rules:\n\\[\n\\begin{aligned}\n\\displaystyle \\int e^x \\,dx &= e^x+C \\\\\n\\displaystyle \\int c^x \\,dx &= \\frac{c^x}{ln(c)}+C\\\\\n\\\\\n\\displaystyle \\int ln(x) \\,dx &= x \\cdot ln(x) - x+C \\\\\n\\displaystyle \\int log_c(x) \\,dx &= \\frac{x \\cdot log_c(x) - x}{log_c(x)}+C\n\\end{aligned}\n\\]\nThe final two rules are analog to the product rule and the chain rule:\nIntegration by parts: \\(\\displaystyle \\int f(x)g'(x)\\,dx = f(x)g(x) - \\int f'(x)g(x)\\,dx\\)\nThis rule allows you to change around your functions. If you cannot integrate \\(f(x)g'(x)\\) but you can integrate \\(g'(x)\\) and \\(f'(x)g(x)\\) then it is useful. This applicable when \\(g'(x)\\) is something like \\(e^x\\) that does not get more complex when you integrate, while \\(f(x)\\) is something like \\(x\\) that simplifies when you differentiate it.\nIntegration by substitution:\n\\[\n\\begin{aligned}\n1.& \\text{ Have }\\displaystyle \\int f(g(x))g'(x)\\,dx \\\\\n2.& \\text{ Set u=g(x)} \\\\\n3.& \\text{ Compute } \\int f(u)\\,du \\\\\n4.& \\text{ Replace u for g(x)}\n\\end{aligned}\n\\]\nIn words, we can change variables to an entirely different function if it helps us to compute the integral. We do this when the integral contains a composite function that one cannot integrate easily, like \\(f(x) = \\displaystyle \\frac{1}{2\\pi} x e^{-\\frac{x2}{2}}\\), which happens to be the probability distribution function of a standard normal distribution multiplied by x.\n\nIf this was a Calculus I course, we would spend a whole midterm practicing tricky problems involving integration by parts or by substitution. We will not bothers with this at math camp.\n\n\n\n4.5 An example\nRemember our function \\(y=x^2\\) and our goal of finding the area under the curve from \\(x=0\\) to \\(x=1\\). We can describe this problem as \\(\\displaystyle \\int_0^1 x^2 dx\\)\nFind the indefinite integral, \\(F(x)\\)\n\\[\n\\displaystyle\\int x^2 \\text{ } dx = \\displaystyle\\frac{x^3}{3}+C\n\\]\nNow we’ll use the fundamental theory of calculus. Evaluate at our lowest and highest points, \\(F(0)\\) and \\(F(1)\\):\n\n\\(F(0) = 0 + C\\)\n\\(F(1) = \\displaystyle\\frac{1}{3} + C\\)\n\nCalculate \\(F(1) - F(0)\\)\n\\[\\displaystyle\\frac{1}{3} + C - (0 + C)= \\displaystyle\\frac{1}{3} - 0 = \\displaystyle\\frac{1}{3}\\]\nNote how the constants of integration cancel out. One way to think about this is that the area under a curve would not change if you shift that curve’s position along the horizontal axis."
  },
  {
    "objectID": "math/02_matrices.html",
    "href": "math/02_matrices.html",
    "title": "Matrices",
    "section": "",
    "text": "Matrices are rectangular collections of numbers, meaning they are arranged by rows and columns. Learning about matrices is important because most of the data that social scientists use is rectangular data. The rest, less structured data, is eventually converted to a rectangular format before analysis.\nMoreover, matrix algebra is the working engine behind regression models, a cornerstone tool for data analysis. When R and other software quickly convert rectangular data into a vector of regression coefficient, what goes under the hood is usually a bunch of matrix algebra."
  },
  {
    "objectID": "math/02_matrices.html#matrices",
    "href": "math/02_matrices.html#matrices",
    "title": "Matrices",
    "section": "",
    "text": "Matrices are rectangular collections of numbers, meaning they are arranged by rows and columns. Learning about matrices is important because most of the data that social scientists use is rectangular data. The rest, less structured data, is eventually converted to a rectangular format before analysis.\nMoreover, matrix algebra is the working engine behind regression models, a cornerstone tool for data analysis. When R and other software quickly convert rectangular data into a vector of regression coefficient, what goes under the hood is usually a bunch of matrix algebra."
  },
  {
    "objectID": "math/02_matrices.html#introduction",
    "href": "math/02_matrices.html#introduction",
    "title": "Matrices",
    "section": "2 Introduction",
    "text": "2 Introduction\n\n2.1 Scalars\nA single number (for example, 12) is referred to as a scalar.\n\\[\na = 12\n\\]\n\n\n2.2 Vectors\nWe can put several scalars together to make a vector. Vectors are usually denoted with an arrow on top, although social scientist tend to forgo this convention. Here is an example:\n\\[\n\\overrightarrow b =\n\\begin{bmatrix}\n  12 \\\\\n  14 \\\\\n  15\n\\end{bmatrix}\n\\]\nSince this is a column of numbers, we refer to it as a column vector.\nOf course, we can also have row vectors:\n\\[\n\\overrightarrow c = \\begin{bmatrix}\n  12 & 14 & 15\n\\end{bmatrix}\n\\]\nNote that we use brackets \\([ ... ]\\) to demarcate vectors and matrices.\nIn R, we can construct vectors with the the c() function to combine elements (the c stands for concatenate):\n\nc(5, 25, -2, 1)\n\n[1]  5 25 -2  1\n\n\nWe can also create vectors that follow a pattern with the : operator or the seq() function:\n\n10:20\n\n [1] 10 11 12 13 14 15 16 17 18 19 20\n\n\n\nseq(from = 3, to = 27, by = 3)\n\n[1]  3  6  9 12 15 18 21 24 27"
  },
  {
    "objectID": "math/02_matrices.html#operators",
    "href": "math/02_matrices.html#operators",
    "title": "Matrices",
    "section": "3 Operators",
    "text": "3 Operators\n\n3.1 Summation\nThe summation operator \\(\\sum\\) (i.e., the uppercase Sigma letter) lets us perform an operation on a sequence of numbers, which is often but not always a vector.\n\\[\\overrightarrow d = \\begin{bmatrix}\n12 & 7 & -2 & 3 & -1\n\\end{bmatrix}\\]\nWe can then calculate the sum of the first three elements of the vector, which is expressed as follows: \\[\\sum_{i=1}^3 d_i\\]\nThen we do the following math: \\[12+7+(-2)=17\\]\nIt is also common to use \\(n\\) in the superscript to indicate that we want to sum up to the very last element:\n\\[\n\\sum_{i=1}^n d_i = 12 + 7 + (-2) + 3 + (-1) = 19\n\\]\nWe can perform these operations using the sum() function in R:\n\nd = c(12, 7, -2, 3, -1)\n\n\nsum(d)\n\n[1] 19\n\n\n\nsum(d[1:3])\n\n[1] 17\n\n\n\nsum(d)\n\n[1] 19\n\n\n\n\n3.2 Product\nThe product operator \\(\\prod\\) (uppercase Pi) can also perform operations over a sequence of elements in a vector. Recall our previous vector:\n\\[\\overrightarrow d = \\begin{bmatrix}\n12 & 7 & -2 & 3 & 1\n\\end{bmatrix}\\]\nWe might want to calculate the product of all its elements, which is expressed as follows: \\[\\prod_{i=1}^n d_i = 12 \\cdot 7 \\cdot (-2) \\cdot 3 \\cdot (-1) = 504\\]\nIn R, we can compute products using the prod() function:\n\nprod(d)\n\n[1] 504"
  },
  {
    "objectID": "math/02_matrices.html#matrices-1",
    "href": "math/02_matrices.html#matrices-1",
    "title": "Matrices",
    "section": "4 Matrices",
    "text": "4 Matrices\n\n4.1 Basics\nWe can append vectors together to form a matrix:\n\\[A = \\begin{bmatrix}\n12 & 14 & 15 \\\\\n115 & 22 & 127 \\\\\n193 & 29 & 219\n\\end{bmatrix}\\]\nThe number of rows and columns of a matrix constitute the dimensions of the matrix. The first number is the number of rows (“r”) and the second number is the number of columns (“c”) in the matrix. The order of dimensions never changes.\nMatrix \\(A\\) above, for example, is a \\(3 \\times 3\\) matrix. Sometimes we’d refer to it as \\(A_{3 \\times 3}\\). We commonly use capital letters to represent matrices. Sometimes, vectors and matrices are further denoted with bold font.\n\nConstructing matrices in R\nThere are different ways to create matrices in R. One of the simplest is via rbind() or cbind(), which paste vectors together (either by rows or by columns):\n\n# Create some vectors\nvector1 = 1:4\nvector2 = 5:8\nvector3 = 9:12\nvector4 = 13:16\n\n\n# Using rbind(), each vector will be a row \nrbind_mat = rbind(vector1, vector2, vector3, vector4)\nrbind_mat\n\n        [,1] [,2] [,3] [,4]\nvector1    1    2    3    4\nvector2    5    6    7    8\nvector3    9   10   11   12\nvector4   13   14   15   16\n\n\n\n# Using cbind(), each vector will be a column\ncbind_mat = cbind(vector1, vector2, vector3, vector4)\ncbind_mat\n\n     vector1 vector2 vector3 vector4\n[1,]       1       5       9      13\n[2,]       2       6      10      14\n[3,]       3       7      11      15\n[4,]       4       8      12      16\n\n\nAn alternative is to use to properly named matrix() function. The basic syntax is matrix(data, nrow, ncol, byrow):\n\ndata is the input vector which becomes the data elements of the matrix.\nnrow is the number of rows to be created.\nncol is the number of columns to be created.\nbyrow is a logical clue. If TRUE then the input vector elements are arranged by row. By default (FALSE), elements are arranged by column.\n\nLet’s see some examples:\n\n# Elements are arranged sequentially by row.\nM = matrix(c(1:12), nrow = 4, byrow = T)\nM\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n[3,]    7    8    9\n[4,]   10   11   12\n\n\n\n# Elements are arranged sequentially by column (byrow = F by default).\nN = matrix(c(1:12), nrow = 4)\nN\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n\n\n\n\n4.2 Structure\nHow do we refer to specific elements of the matrix? For example, matrix \\(A\\) is an \\(m\\times n\\) matrix where \\(m=n=3\\). This is sometimes called a square matrix.\nMore generally, matrix \\(B\\) is an \\(m\\times n\\) matrix where the elements look like this: \\[B=\n\\begin{bmatrix}\nb_{11} & b_{12} & b_{13} & \\ldots & b_{1n} \\\\\nb_{21} & b_{22} & b_{23} & \\ldots & b_{2n} \\\\\n\\vdots & \\vdots & \\vdots & \\ldots & \\vdots \\\\\nb_{m1} & b_{m2} & b_{m3} & \\ldots & b_{mn}\n\\end{bmatrix}\\]\nThus \\(b_{23}\\) refers to the second unit down and third across. More generally, we refer to row indices as \\(i\\) and to column indices as \\(j\\).\nIn R, we can access a matrix’s elements using square brackets:\n\n# In matrix N, access the element at 1st row and 3rd column.\nN[1,3]\n\n[1] 9\n\n\n\n# In matrix N, access the element at 4th row and 2nd column.\nN[4,2]\n\n[1] 8\n\n\n\n\n\n\n\n\nTip\n\n\n\nWhen trying to identify a specific element, the first subscript is the element’s row and the second subscript is the element’s column (always in that order)."
  },
  {
    "objectID": "math/02_matrices.html#matrix-operations",
    "href": "math/02_matrices.html#matrix-operations",
    "title": "Matrices",
    "section": "5 Matrix operations",
    "text": "5 Matrix operations\n\n5.1 Addition and subtraction\n\nAddition and subtraction are straightforward operations.\nMatrices must have exactly the same dimensions for both of these operations.\nWe add or subtract each element with the corresponding element from the other matrix.\nThis is expressed as follows:\n\n\\[A \\pm B=C\\]\n\\[c_{ij}=a_{ij} \\pm b_{ij} \\text{ }\\forall i,j\\]\n\\[\\begin{bmatrix}\na_{11} & a_{12} & a_{13}\\\\\na_{21} & a_{22} & a_{23}\\\\\na_{31} & a_{32} & a_{33}\n\\end{bmatrix}\n\\pm\n\\begin{bmatrix}\nb_{11} & b_{12} & b_{13}\\\\\nb_{21} & b_{22} & b_{23}\\\\\nb_{31} & b_{32} & b_{33}\n\\end{bmatrix}\\] \\[=\\] \\[\\begin{bmatrix}\na_{11}\\pm b_{11} & a_{12}\\pm b_{12} & a_{13}\\pm b_{13}\\\\\na_{21}\\pm b_{21} & a_{22}\\pm b_{22} & a_{23}\\pm b_{23}\\\\\na_{31}\\pm b_{31} & a_{32}\\pm b_{32} & a_{33}\\pm b_{33}\n\\end{bmatrix}\\]\n\nAddition and subtraction in R\nWe start by creating two 2x3 matrices:\n\\[A= \\begin{bmatrix}\n3 & -1 & 2  \\\\\n9 & 4 & 6\n\\end{bmatrix}\\]\n\n# Create two 2x3 matrices.\nmatrix1 = matrix(c(3, 9, -1, 4, 2, 6), nrow = 2)\nmatrix1\n\n     [,1] [,2] [,3]\n[1,]    3   -1    2\n[2,]    9    4    6\n\n\nAnd \\[B= \\begin{bmatrix}\n5 & 2 & 0  \\\\\n9 & 3 & 4\n\\end{bmatrix}\\]\n\nmatrix2 = matrix(c(5, 2, 0, 9, 3, 4), nrow = 2)\nmatrix2\n\n     [,1] [,2] [,3]\n[1,]    5    0    3\n[2,]    2    9    4\n\n\nWe can simply use the + and - operators for addition and substraction:\n\nmatrix1 + matrix2\n\n     [,1] [,2] [,3]\n[1,]    8   -1    5\n[2,]   11   13   10\n\n\n\nmatrix1 - matrix2\n\n     [,1] [,2] [,3]\n[1,]   -2   -1   -1\n[2,]    7   -5    2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.2 Scalar multiplication\nScalar multiplication is very intuitive. As we know, a scalar is a single number. We multiply each value in the matrix by the scalar to perform this operation.\nFormally, this is expressed as follows: \\[A =\n\\begin{bmatrix}\na_{11} & a_{12} & a_{13}\\\\\na_{21} & a_{22} & a_{23}\\\\\na_{31} & a_{32} & a_{33}\n\\end{bmatrix}\\] \\[cA =\n\\begin{bmatrix}\nca_{11} & ca_{12} & ca_{13}\\\\\nca_{21} & ca_{22} & ca_{23}\\\\\nca_{31} & ca_{32} & ca_{33}\n\\end{bmatrix}\\]\nIn R, all we need to do is take an established matrix and multiply it by some scalar:\n\n# matrix1 from our previous example\nmatrix1\n\n     [,1] [,2] [,3]\n[1,]    3   -1    2\n[2,]    9    4    6\n\n\n\nmatrix1 * 3\n\n     [,1] [,2] [,3]\n[1,]    9   -3    6\n[2,]   27   12   18\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.3 Matrix multiplication\n\nMultiplying matrices is slightly trickier than multiplying scalars.\nTwo matrices must be conformable for them to be multiplied together. This means that the number of columns in the first matrix equals the number of rows in the second.\nWhen multiplying \\(A \\times B\\), if \\(A\\) is \\(m \\times n\\), \\(B\\) must have \\(n\\) rows.\nThe conformability requirement never changes. Before multiplying anything, check to make sure the matrices are indeed conformable.\nThe resulting matrix will have the same number of rows as the first matrix and the number of columns in the second. For example, if \\(A\\) is \\(i \\times k\\) and \\(B\\) is \\(k \\times j\\), then \\(A \\times B\\) will be \\(i \\times j\\).\n\nFor example, which of the following can we multiply? What will be the dimensions of the resulting matrix?\n\\[\n\\begin{aligned}\nB_{4 \\times 1}=\n\\begin{bmatrix}\n2 \\\\\n3\\\\\n4\\\\\n1\n\\end{bmatrix}\nM_{3 \\times 3} =\n\\begin{bmatrix}\n1 & 0 & 2\\\\\n1 & 2 & 4\\\\\n2 & 3 & 2\n\\end{bmatrix}\nL_{2 \\times 3} =\n\\begin{bmatrix}\n6 & 5 & -1\\\\\n1 & 4 & 3\n\\end{bmatrix}\n\\end{aligned}\n\\]\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nThe only valid multiplication based on the provided matrices is \\(L \\times M\\), which results in a \\(2 \\times 3\\) matrix.\n\n\n\nWhy can’t we multiply in the opposite order?\nThe non-commutative property of matrix multiplication is a fundamental aspect in matrix algebra. The multiplication of matrices is sensitive to the order in which the matrices are multiplied due to the requirements of dimensional compatibility, the resulting dimensions, and the computation process itself.\n\n\n\n\n\n\nWarning\n\n\n\nWhen multiplying matrices, order matters. Even if multiplication is possible in both directions, in general \\(AB \\neq BA\\).\n\n\n\nMultiplication steps\n\nMultiply each row by each column, summing up each pair of multiplied terms. This is sometimes to referred to as the “dot product,” where we multiply matching members, then sum up.\nThe element in position \\(ij\\) is the sum of the products of elements in the \\(i\\)th row of the first matrix (\\(A\\)) and the corresponding elements in the \\(j\\)th column of the second matrix (\\(B\\)). \\[c_{ij}=\\sum_{k=1}^n a_{ik}b_{kj}\\]\n\n\n\nExample\nSuppose a company manufactures two kinds of furniture: chairs and sofas.\n\nA chair costs $100 for wood, $270 for cloth, and $130 for feathers.\nEach sofa costs $150 for wood, $420 for cloth, and $195 for feathers.\n\n\n\n\n\nChair\nSofa\n\n\n\n\nWood\n100\n150\n\n\nCloth\n270\n420\n\n\nFeathers\n130\n195\n\n\n\nThe same information about unit cost (\\(C\\)) can be presented as a matrix.\n\\[C = \\begin{bmatrix}\n100 & 150\\\\\n270 & 420\\\\\n130 & 195\n\\end{bmatrix}\\]\nNote that each of the three rows of this 3 x 2 matrix represents a material (wood, cloth, or feathers), and each of the two columns represents a product (chair or coach). The elements are the unit cost (in USD).\nNow, suppose that the company will produce 45 chairs and 30 sofas this month. This production quantity can be represented in the following table, and also as a 2 x 1 matrix (\\(Q\\)):\n\n\n\nProduct\nQuantity\n\n\n\n\nChair\n45\n\n\nSofa\n30\n\n\n\n\\[Q = \\begin{bmatrix}\n45 \\\\\n30\n\\end{bmatrix}\\]\nWhat will be the company’s total cost? The “total expenditure” is equal to the “unit cost” times the “production quantity” (the number of units).\nThe total expenditure (\\(E\\)) for each material this month is calculated by multiplying these two matrices.\n\\[\\begin{aligned} E = CQ =\n\\begin{bmatrix}\n100 & 150\\\\\n270 & 420\\\\\n130 & 195\n\\end{bmatrix}\n\\begin{bmatrix}\n45 \\\\\n30\n\\end{bmatrix} =\n\\begin{bmatrix}\n(100)(45) + (150)(30) \\\\\n(270)(45) + (420)(30) \\\\\n(130)(45) + (195)(30)\n\\end{bmatrix} =\n\\begin{bmatrix}\n9,000 \\\\\n24,750 \\\\\n11,700\n\\end{bmatrix}\n\\end{aligned}\\]\nMultiplying the 3x2 Cost matrix (\\(C\\)) times the 2x1 Quantity matrix (\\(Q\\)) yields the 3x1 Expenditure matrix (\\(E\\)).\nAs a result of this matrix multiplication, we determine that this month the company will incur expenditures of:\n\n$9,000 for wood\n$24,750 for cloth\n$11,700 for feathers.\n\n\n\nMatrix multiplication in R\nBefore attempting matrix multiplication, we must make sure the matrices are conformable (as we do for our manual calculations).\nThen we can multiply our matrices together using the %*% operator.\n\nC = matrix(c(100, 270, 130, 150, 420, 195), nrow = 3)\nC\n\n     [,1] [,2]\n[1,]  100  150\n[2,]  270  420\n[3,]  130  195\n\n\n\nQ = matrix(c(45, 30), nrow = 2)\nQ\n\n     [,1]\n[1,]   45\n[2,]   30\n\n\n\nC %*% Q\n\n      [,1]\n[1,]  9000\n[2,] 24750\n[3,] 11700\n\n\n\n\n\n\n\n\nWarning\n\n\n\nIf you have a missing value or NA in one of the matrices you are trying to multiply (something we will discuss in further detail in the next module), you will have NAs in your resulting matrix.\n\n\n\n\n\n5.4 Properties of operations\n\nAddition and subtraction:\n\nAssociative: \\((A \\pm B) \\pm C = A \\pm (B \\pm C)\\)\nCommutative: \\(A \\pm B = B \\pm A\\)\n\nMultiplication:\n\n\\(AB \\neq BA\\)\n\\(A(BC) = (AB)C\\)\n\\(A(B+C) = AB + AC\\)"
  },
  {
    "objectID": "math/02_matrices.html#special-matrices",
    "href": "math/02_matrices.html#special-matrices",
    "title": "Matrices",
    "section": "6 Special matrices",
    "text": "6 Special matrices\nSquare matrix\n\\[\nA = \\begin{bmatrix}\n1 & 2 & 3 \\\\\n4 & 5 & 6 \\\\\n7 & 8 & 9\n\\end{bmatrix}\n\\]\n\nIn a square matrix, the number of rows equals the number of columns (\\(m=n\\)):\nThe diagonal of a matrix is a set of numbers consisting of the elements on the line from the upper-left-hand to the lower-right-hand corner of the matrix, as in $ d(A)=[1,5,9] $. Diagonals are particularly useful in square matrices.\nThe trace of a matrix, denoted as \\(tr(A)\\), is the sum of the diagonal elements of the matrix. \\(tr(A) = 1+5+9 = 15\\)\n\nDiagonal matrix:\n\nIn a diagonal matrix, all of the elements of the matrix that are not on the diagonal are equal to zero. \\[\nD = \\begin{bmatrix}\n4 & 0 & 0 \\\\\n0 & 5 & 0 \\\\\n0 & 0 & 6\n\\end{bmatrix}\n\\]\n\nScalar matrix:\n\nA scalar matrix is a diagonal matrix where the diagonal elements are all equal to each other. In other words, we’re really only concerned with one scalar (or element) held in the diagonal.\n\n\\[\nS = \\begin{bmatrix}\n7 & 0 & 0 \\\\\n0 & 7 & 0 \\\\\n0 & 0 & 7\n\\end{bmatrix}\n\\]\nIdentity matrix:\n\\[\nI = \\begin{bmatrix}\n1 & 0 & 0 \\\\\n0 & 1 & 0 \\\\\n0 & 0 & 1\n\\end{bmatrix}\n\\]\n\nThe identity matrix is a scalar matrix with all of the diagonal elements equal to one.\nRemember that, as with all diagonal matrices, the off-diagonal elements are equal to zero.\nThe capital letter \\(I\\) is reserved for the identity matrix. For convenience, a 3x3 identity matrix can be denoted as \\(I_3\\)."
  },
  {
    "objectID": "math/02_matrices.html#transpose",
    "href": "math/02_matrices.html#transpose",
    "title": "Matrices",
    "section": "7 Transpose",
    "text": "7 Transpose\nThe transpose is the original matrix with the rows and the columns interchanged.\nThe notation is either \\(J'\\) (“J prime”) or \\(J^T\\) (“J transpose”).\n\\[J =\n\\begin{bmatrix}\n4 & 5\\\\\n3 & 0\\\\\n7 & -2\n\\end{bmatrix}\\]\n\\[J' = J^T =\n\\begin{bmatrix}\n4 & 3 & 7 \\\\\n5 & 0 & -2\n\\end{bmatrix}\\]\nIn R, we use t() to get the transpose.\n\nJ = matrix(c(4, 3, 7, 5, 0, -2), ncol = 2)\nJ\n\n     [,1] [,2]\n[1,]    4    5\n[2,]    3    0\n[3,]    7   -2\n\n\n\nt(J)\n\n     [,1] [,2] [,3]\n[1,]    4    3    7\n[2,]    5    0   -2"
  },
  {
    "objectID": "math/02_matrices.html#inverse",
    "href": "math/02_matrices.html#inverse",
    "title": "Matrices",
    "section": "8 Inverse",
    "text": "8 Inverse\n\nJust like a number has a reciprocal, a matrix has an inverse.\nWhen we multiply a matrix by its inverse we get the identity matrix (which is like “1” for matrices).\n\n\\[A × A^{-1} = I\\]\n\nThe inverse of A is \\(A^{-1}\\) only when:\n\n\\[AA^{-1} = A^{-1}A = I\\]\n\nSometimes there is no inverse at all.\n\nIn a math of stats course, you would be required to know how to calculate the inverse of a matrix by hand. For math camp purposes, we only need to know how to do it in R.\n\nIn R, we use the solve() function to calculate the inverse of a matrix:\n\n\nA = matrix(c(3, 2, 5, 2, 3, 2, 5, 2, 4), ncol = 3)\nA\n\n     [,1] [,2] [,3]\n[1,]    3    2    5\n[2,]    2    3    2\n[3,]    5    2    4\n\n\n\nsolve(A)\n\n            [,1]        [,2]       [,3]\n[1,] -0.29629630 -0.07407407  0.4074074\n[2,] -0.07407407  0.48148148 -0.1481481\n[3,]  0.40740741 -0.14814815 -0.1851852"
  },
  {
    "objectID": "math/02_matrices.html#linear-systems-and-matrices",
    "href": "math/02_matrices.html#linear-systems-and-matrices",
    "title": "Matrices",
    "section": "9 Linear systems and matrices",
    "text": "9 Linear systems and matrices\nA system of equations can be represented by an augmented matrix.\nSystem of equations: \\[{\\color{red}{3}}x + {\\color{green}{6}}y = {\\color{blue}{12}}\\] \\[{\\color{red}{5}}x + {\\color{green}{10}}y = {\\color{blue}{25}}\\]\nIn an augmented matrix, each row represents one equation in the system and each column represents a variable or the constant terms. \\[\\begin{bmatrix}\n    {\\color{red}{3}} & {\\color{green}{6}} & {\\color{blue}{12}}\\\\\n    {\\color{red}{5}} & {\\color{green}{10}} & {\\color{blue}{25}}\n    \\end{bmatrix}\\]\nThinking in matrices is helpful on its when you need to solve somewhat complex systems of equations on its own. It turns out that a common social science data analytic tool relies on this principle."
  },
  {
    "objectID": "math/02_matrices.html#ols-and-matrices",
    "href": "math/02_matrices.html#ols-and-matrices",
    "title": "Matrices",
    "section": "10 OLS and matrices",
    "text": "10 OLS and matrices\nWe can use the logic above to calculate estimates for our ordinary least squares (OLS) models. We may not be able to cover this in person, but we leave it here since it may come up in your regression course.\nOLS is a linear regression technique used to find the best-fitting line for a set of data points (observations) by minimizing the residuals (the differences between the observed and predicted values).\nThe goal is to minimize the sum of the squared errors.\n\n10.1 Outcome variable\n\nSuppose, for example, we have a sample consisting of \\(n\\) observations.\nThe outcome variable is denoted as an \\(n \\times1\\) column vector.\n\n\\[Y = \\begin{bmatrix}\ny_1 \\\\\ny_2 \\\\\ny_3 \\\\\n\\vdots \\\\\ny_n\n\\end{bmatrix}\\]\n\n\n10.2 Explanatory variables\nSuppose there are \\(k\\) explanatory variables and a constant term, meaning \\(k+1\\) columns and \\(n\\) rows.\nWe can represent these variables as an \\(n \\times (k+1)\\) matrix, expressed as follows:\n\\[X= \\begin{bmatrix}\n1 & x_{11} & \\dots & x_{1k} \\\\\n1 & x_{21} & \\dots & x_{2k} \\\\\n\\vdots & \\vdots & \\dots & \\vdots \\\\\n1 & x_{n1} & \\dots & x_{nk}\n\\end{bmatrix}\\]\n\\(x_{ij}\\) is the \\(i\\)-th observation of the \\(j\\)-th explanatory variable.\n\n\n10.3 Linear regression model\nLet’s say we have 173 observations (n = 173) and 2 explanatory variabless (k = 3).\nThis can be expressed as the following linear equation: \\[y = \\beta_0 + \\beta_1x_1 + \\beta_2x_2 + \\epsilon\\]\nIn matrix form, we have: \\[\\begin{aligned} \\begin{bmatrix}\n    y_1 \\\\\n    y_2 \\\\\n    \\vdots \\\\\n    y_n\n    \\end{bmatrix} = \\begin{bmatrix}\n    1 & x_{11} & x_{21} \\\\\n    1 & x_{21} & x_{22} \\\\\n    \\vdots & \\vdots & \\vdots \\\\\n    1 & x_{1173} & x_{2173}\n    \\end{bmatrix} \\begin{bmatrix}\n    \\beta_0 \\\\\n    \\beta_1 \\\\\n    \\beta_2\n    \\end{bmatrix} + \\begin{bmatrix}\n    \\epsilon_1 \\\\\n    \\epsilon_2 \\\\\n    \\vdots \\\\\n    \\epsilon_{173}\n    \\end{bmatrix}\\end{aligned} \\]\nAll 173 equations can be represented by: \\[y=X\\beta+\\epsilon\\]\n\n\n10.4 Estimates\nWithout getting too much into the mechanics, we can calculate our coefficient estimates with matrix algebra using the following equation:\n\\[\\hat{\\beta} = (X'X)^{-1}X'Y\\]\nRead aloud, we say “X prime X inverse, X prime Y”.\nThe little hat on our beta (\\(\\hat{\\beta}\\)) signifies that these are estimates.\nRemember, the OLS method is to choose \\(\\hat{\\beta}\\) such that the sum of squared residuals (“SSR”) is minimized.\n\n10.4.1 Example in R\nWe will load the mtcars data set for this example, which contains data about many different car models.\n\ncars_df = mtcars\n\nNow, we want to estimate the association between hp (horsepower) and wt (weight), our independent variables, and mpg (miles per gallon), our dependent variable.\nFirst, we transform our dependent variable into a matrix, using the as.matrix function and specifying the column of the mtcars data set to create a column vector of our observed values for the DV.\n\nY = as.matrix(cars_df$mpg)\nY\n\n      [,1]\n [1,] 21.0\n [2,] 21.0\n [3,] 22.8\n [4,] 21.4\n [5,] 18.7\n [6,] 18.1\n [7,] 14.3\n [8,] 24.4\n [9,] 22.8\n[10,] 19.2\n[11,] 17.8\n[12,] 16.4\n[13,] 17.3\n[14,] 15.2\n[15,] 10.4\n[16,] 10.4\n[17,] 14.7\n[18,] 32.4\n[19,] 30.4\n[20,] 33.9\n[21,] 21.5\n[22,] 15.5\n[23,] 15.2\n[24,] 13.3\n[25,] 19.2\n[26,] 27.3\n[27,] 26.0\n[28,] 30.4\n[29,] 15.8\n[30,] 19.7\n[31,] 15.0\n[32,] 21.4\n\n\nNext, we do the same thing for our independent variables of interest, and our constant.\n\n# create two separate matrices for IVs\nX1 = as.matrix(cars_df$hp)\nX2 = as.matrix(cars_df$wt)\n\n# create constant column\n\n# bind them altogether into one matrix\nconstant =  rep(1, nrow(cars_df))\nX = cbind(constant, X1, X2)\nX\n\n      constant          \n [1,]        1 110 2.620\n [2,]        1 110 2.875\n [3,]        1  93 2.320\n [4,]        1 110 3.215\n [5,]        1 175 3.440\n [6,]        1 105 3.460\n [7,]        1 245 3.570\n [8,]        1  62 3.190\n [9,]        1  95 3.150\n[10,]        1 123 3.440\n[11,]        1 123 3.440\n[12,]        1 180 4.070\n[13,]        1 180 3.730\n[14,]        1 180 3.780\n[15,]        1 205 5.250\n[16,]        1 215 5.424\n[17,]        1 230 5.345\n[18,]        1  66 2.200\n[19,]        1  52 1.615\n[20,]        1  65 1.835\n[21,]        1  97 2.465\n[22,]        1 150 3.520\n[23,]        1 150 3.435\n[24,]        1 245 3.840\n[25,]        1 175 3.845\n[26,]        1  66 1.935\n[27,]        1  91 2.140\n[28,]        1 113 1.513\n[29,]        1 264 3.170\n[30,]        1 175 2.770\n[31,]        1 335 3.570\n[32,]        1 109 2.780\n\n\nNext, we calculate \\(X'X\\), \\(X'Y\\), and \\((X'X)^{-1}\\). Remember the %*% operator for matrix multiplication.\n\n# X prime X\nXpX = t(X) %*% X\n\n# X prime X inverse\nXpXinv = solve(XpX)\n\n# X prime Y\nXpY = t(X) %*% Y\n\n# beta coefficient estimates\nbhat = XpXinv %*% XpY\nbhat\n\n                [,1]\nconstant 37.22727012\n         -0.03177295\n         -3.87783074\n\n\nYou can come back to this code and corroborate that is correct after you learn how to use the default function to estimate OLS regression in R."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Math Camp",
    "section": "",
    "text": "This is the website for the 2024 Social Science Math Camp, hosted by the Departments of Political Science and Sociology at Northwestern University. The purpose of Math Camp is to give you a chance to brush up on concepts and skills that underlie the practice of quantitative data analysis in the social sciences.\nOur schedule features math in the morning and statistical programming in the afternoon. During lunch, we will also have a chance to meet faculty and graduate students and have more informal conversations about the role of methods training in graduate school.\n\n\n\n   September 16 – 20\n   9:00 AM – 4:00 PM\n   Scott Hall 212"
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Math Camp",
    "section": "",
    "text": "This is the website for the 2024 Social Science Math Camp, hosted by the Departments of Political Science and Sociology at Northwestern University. The purpose of Math Camp is to give you a chance to brush up on concepts and skills that underlie the practice of quantitative data analysis in the social sciences.\nOur schedule features math in the morning and statistical programming in the afternoon. During lunch, we will also have a chance to meet faculty and graduate students and have more informal conversations about the role of methods training in graduate school.\n\n\n\n   September 16 – 20\n   9:00 AM – 4:00 PM\n   Scott Hall 212"
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "Math Camp",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n    \n\n    \n    \n      \n        \n        \n              \n                Day\n                Date\n                Morning\n                Afternoon\n              \n        \n        \n        \n                \n                  1\n                  September 16\n                  Notation, sets, functions\n                  R and RStudio          \n                \n                \n                  2\n                  September 17\n                  Matrices                 \n                  Tidyverse I            \n                \n                \n                  3\n                  September 18\n                  Calculus I               \n                  Tidyverse II           \n                \n                \n                  4\n                  September 19\n                  NO MEETING               \n                  NA                     \n                \n                \n                  5\n                  September 20\n                  Calculus II              \n                  Sampling and simulation"
  },
  {
    "objectID": "math/01_notation.html",
    "href": "math/01_notation.html",
    "title": "Notation, Sets, and Functions",
    "section": "",
    "text": "A great deal of quantitave empirical research in the social sciences and statistics textbooks use notation extensively. Notation is useful to write about general concepts or ideas that apply to a broad range of settings. The downside is that notation makes things harder to read.\nThis section introduces common notation practices in the social sciences that will help you in both in methods courses and when reading/writing papers. Usage may vary across fields and over time, but becoming familiar with general uses may still help you understand the deviations."
  },
  {
    "objectID": "math/01_notation.html#conditions",
    "href": "math/01_notation.html#conditions",
    "title": "Notation, Sets, and Functions",
    "section": "2.1 Conditions",
    "text": "2.1 Conditions\nA set is a collection of elements, we use symbols to refer to different parts of the set.\n\n\n\n\n\n\n\n\nNotation\nMeaning\nUse\n\n\n\n\n{\nbracket\nSpecify a set (e.g. {2, 3})\n\n\n\\(\\exists\\)\n“there exists”: true for at least one thing\nSpecify a condition to be satisfied\n\n\n\\(\\forall\\)\n“for all”; true for all elements\nSpecify which elements belong in a set (all that satisfy a criteron)\n\n\n\\(\\exists\\)\n“exists”; there is something true\nSpecify a rule or proposition that is true\n\n\n\\(\\in\\)\n“in” or “element of”\nStates what something / an element is a member of\n\n\n|\nSuch that\nused in set theoretic definitions re: which values satisfy a particular (set of) condition(s)\n\n\n\\(\\notin\\)\nexcluding (element)\nStates that something is not a member of a set\n\n\n\\(\\equiv\\)\nequivalent\nSet theory equal\n\n\n\nFor example, \\(A = \\{4n \\in \\mathbb{N} | n \\in \\mathbb{N}\\}\\) says \\(A\\) is the set of natural numbers that are divisible by 4. We could list out the elements of this set. Note that curly brackets are always used for sets, never parentheses. E.g. {4, 8, 12, …} and not (4, 8, 12, …)."
  },
  {
    "objectID": "math/01_notation.html#operators",
    "href": "math/01_notation.html#operators",
    "title": "Notation, Sets, and Functions",
    "section": "2.2 Operators",
    "text": "2.2 Operators\nWe can also symbols to denote operations between sets.\n\n\n\nNotation\nMeaning\nUse\n\n\n\n\n\\(\\subset\\)\nSubset\nLess than\n\n\n\\(\\subseteq\\)\nSubset\nLess than equal\n\n\n\\(\\varnothing\\)\nEmpty set\nZero\n\n\n\\(\\cap\\)\nIntersection\nAND\n\n\n\\(\\cup\\)\nUnion\nOR\n\n\n\\(\\setminus\\)\nDifference\nMinus (remove elements from sets)\n\n\n\nFor example, \\(A \\cap B\\) contains the elements that appear in A and B at the same time, whereas \\(A \\cup B\\) contains the elements that appear in either A or B even if they overlap."
  },
  {
    "objectID": "math/01_notation.html#number-sets",
    "href": "math/01_notation.html#number-sets",
    "title": "Notation, Sets, and Functions",
    "section": "2.3 Number sets",
    "text": "2.3 Number sets\nCertain sets of numbers are so frequent they have their own notation.\n\n\n\n\n\n\n\n\nNotation\nMeaning\nUse\n\n\n\n\n\\(\\mathbb{N}\\)\nNatural numbers\n{(0), 1, 2, 3, 4, 5, …}\n\n\n\\(\\mathbb{Z}\\)\nIntegers (pos and neg)\n{…, -3, -2, -1, 0, 1, 2, 3, …}\n\n\n\\(\\mathbb{Q}\\)\nRational numbers (quotient)\n(all fractions–produced by numbers divided by an integer)\n\n\n\\(\\mathbb{R}\\)\nReal numbers (pos, neg, fractions)\n(any point on a number line)\n\n\n\\(\\mathbb{I}\\)\nImaginary number\ni = \\(\\sqrt(-1)\\)\n\n\n\\(\\mathbb{C}\\)\nComplex numbers\n(a + bi)"
  },
  {
    "objectID": "math/01_notation.html#greek-letters",
    "href": "math/01_notation.html#greek-letters",
    "title": "Notation, Sets, and Functions",
    "section": "2.4 Greek letters",
    "text": "2.4 Greek letters\nGreek letters are often used to represent parameters or abstract quantities of interest. Below you can find the letter with its corresponding syntax for math mode in markdown languages (e.g. LaTeX, Typst).1\n\n\n\n\n\n\n\n\\(\\alpha\\) \\(A\\) \\alpha A\n\\(\\nu\\) \\(N\\) \\nu N\n\n\n\\(\\beta\\) \\(B\\) \\beta B\n\\(\\xi\\) \\(\\Xi\\) \\xi \\Xi\n\n\n\\(\\gamma\\) \\(\\Gamma\\) \\gamma \\Gamma\n\\(o\\) \\(O\\) o O (omicron)\n\n\n\\(\\delta\\) \\(\\Delta\\) \\delta \\Delta\n\\(\\pi\\) \\(\\Pi\\) \\pi \\Pi\n\n\n\\(\\epsilon\\) \\(\\varepsilon\\) \\epsilon \\varepsilon\n\\(\\rho\\) \\(\\varrho\\) P \\rho \\varrho P\n\n\n\\(\\zeta\\) \\(Z\\) \\zeta Z\n\\(\\sigma\\) \\(\\Sigma\\) \\sigma \\Sigma\n\n\n\\(\\eta\\) \\(H\\) \\eta H\n\\(\\tau\\) \\(T\\) \\tau T\n\n\n\\(\\theta\\) \\(\\vartheta\\) \\(\\Theta\\) \\theta \\vartheta \\Theta\n\\(\\upsilon\\) \\(\\Upsilon\\) \\upsilon \\Upsilon\n\n\n\\(\\iota\\) \\(I\\) \\iota I\n\\(\\phi\\) \\(\\varphi\\) \\(\\Phi\\) \\phi \\varphi \\Phi\n\n\n\\(\\kappa\\) \\(K\\) \\kappa K\n\\(\\chi\\) \\(X\\) \\chi X\n\n\n\\(\\lambda\\) \\(\\Lambda\\) \\lambda \\Lambda\n\\(\\psi\\) \\(\\Psi\\) \\psi \\Psi\n\n\n\\(\\mu\\) \\(M\\) \\mu M\n\\(\\omega\\) \\(\\Omega\\) \\omega \\Omega\n\n\n\nSomme commonly used Greek letters include:\n\n\\(\\delta\\) “delta” (used for integrals and discount factors in game theory)\n\\(\\Delta\\) “delta” (used for difference/change)\n\\(\\beta\\) “beta” (used for coefficients in regression)\n\\(\\mu\\) “mu” (used for means)\n\\(\\sigma\\) “sigma” (used for standard deviation)\n\\(\\lambda\\) “lambda” (used for eigenvalues in linear algebra)\n\\(\\epsilon\\) “epsilon” (used for the error term in regressions)\n\\(\\tau\\) “tau” (used for treatment effects in experiments)\n\nDifferent Greek letters are also used to denote in machine learning and Bayesian statistics."
  },
  {
    "objectID": "math/01_notation.html#greek-vs.-latin-letters",
    "href": "math/01_notation.html#greek-vs.-latin-letters",
    "title": "Notation, Sets, and Functions",
    "section": "2.5 Greek vs. Latin letters",
    "text": "2.5 Greek vs. Latin letters\nIn papers using statistical methods, you may encounter a combination of Greek and English/Latin letters. Usage may vary depending on the application, but generally:\n\nGreek letters denote the unobserved truth that we want to learn about. For example, \\(\\mu\\) is the average adult height in the United States\nGreek letters with markings are our estimate of the truth based on our data. To calculate the average adult height, we use the mean \\(\\hat{\\mu}\\) (which we read as “mu hat”)\nLatin letters denote actual data in our sample, usually variables. For example, \\(X\\) is a collection of adult heights in a survey we conducted\nLatin letters with markings denote calculations in our data. For example, \\(\\bar{X}\\) (“X bar”) is the sample mean adult height\n\nThis means we use \\(X\\) in our data to calculate \\(\\bar{X}\\), which is our estimate \\(\\hat{\\mu}\\) of the unknown quantity \\(\\mu\\). A good statistical procedure yields a \\(\\hat{\\mu}\\) that approximates \\(\\mu\\), although this is generally hard to assess since \\(\\mu\\) is unobserved. If we knew the unknown quantity of interest, then no statistical analysis would be necessary."
  },
  {
    "objectID": "math/01_notation.html#proof-terms",
    "href": "math/01_notation.html#proof-terms",
    "title": "Notation, Sets, and Functions",
    "section": "3.1 Proof terms",
    "text": "3.1 Proof terms\nIn math, probability, statistics, and game theory, proofs often have different parts.\n\nAssumptions are statements taken to be true\nPropositions are statements thought to be true given the assumptions\nTheorems is a proven proposition\nLemmas are intermediary theorems that are not important on their own, but necessary to arrive at more important theorems or conclusions\nCorollaries are propositions that follow directly from the proof of another proposition and do not require further proof"
  },
  {
    "objectID": "math/01_notation.html#necessary-and-sufficient",
    "href": "math/01_notation.html#necessary-and-sufficient",
    "title": "Notation, Sets, and Functions",
    "section": "3.2 Necessary and sufficient",
    "text": "3.2 Necessary and sufficient\nSometimes we want to understand the conditions that determine certain outcomes. To do this, the language of necessary and sufficient conditions is useful. Consider outcome Y and conditions A and B.\nA condition is sufficient if it occurs also when the outcome occurs. So, if A occurs when Y also occurs, they are sufficient for B to occur. B can happen without A, but we do not see A without B.\nA condition is necessary if we never see the outcome without it. So, if we observe Y, B must have also occurred. B can happen without Y, but never Y without B.\nSometimes, conditions operate in more complicated ways. We can have an Insufficient but Necessary part of an Unnecessary but Sufficient set of conditions an outcome to occur (INUS). For example, having unprotected sexual intercourse is insufficient for HIV transmission, but it can be necessary part of one of the many ways in which HIV is transmitted. Informally, it helps to think about INUS conditions as component causes.\nAlso, we can have Sufficient but Unnecessary condition that is part of a condition set that is Insufficient but Necessary for the outcome. For example, fraudulent elections are a sufficient but unnecessary condition to erode democracy. In turn, per the democratic peace theory, the absence of democracy is necessary but not sufficient to cause war. It helps to think of SUIN conditions as precipitating causes."
  },
  {
    "objectID": "math/01_notation.html#logical-operators",
    "href": "math/01_notation.html#logical-operators",
    "title": "Notation, Sets, and Functions",
    "section": "3.3 Logical operators",
    "text": "3.3 Logical operators\nLike regular math operators, logical operators denote operations on sets. Some of these are useful for data analysis work. For example, when subsetting data. Most of these operators exist in R and other statistical computing software, although sometimes with modified syntax.\n\n\n\n\n\n\n\n\nNotation\nMeaning\nUse\n\n\n\n\n\\(\\wedge\\)\nAnd\nIntersection.Discussing elements in both sets\n\n\n\\(\\vee\\)\nOr\nUnion. Discussing elements that are in multiple sets\n\n\n\\(\\sim\\)\nNot\nNegation\n\n\n!\nNot\nNegation (used in R most often)\n\n\n&lt;\nLess than\nInequality(good for specifying conditions when filtering)\n\n\n&lt;=\nLess than equal to\nInequality (good for specifying conditions when filtering; include the value)\n\n\n&gt;\nGreater than\nInequality (good for specifying conditions when filtering)\n\n\n&gt;=\nGreater than equal to\nInequality (good for specifying conditions when filtering; include the value)\n\n\n!=\nNot equal to\nExclude values when filtering (anything other than the exact value)\n\n\n==\nExactly equal\nHelpful in R for when a value is exactly satisfied\n\n\n%in%\nIn\nUseful when searching for terms"
  },
  {
    "objectID": "math/01_notation.html#proofs",
    "href": "math/01_notation.html#proofs",
    "title": "Notation, Sets, and Functions",
    "section": "3.4 Proofs",
    "text": "3.4 Proofs\nWe won’t do proofs in Math Camp, but we’ll reference them implicitly throughout the course and in they may come back in your fall coursework.\n\n3.4.1 Direct proofs\nDirect proofs work through proof and typically use one of the following methods: + General (deductive) proof: typically done using definitions, etc. Showing how the outcome logically follows building on rules and assumptions. + Proof by exhaustion: Break up the outcome into sub cases and show for each case (done often in game theory for possible values) + Proof by construction: These proofs demonstrate existence (is there a square that is the sum of two squares?). + Proof by induction: Start small and show it is true for any number (e.g. start with a small n, n=1, then expand to n+1)\n\n\n3.4.2 Indirect proofs\nThese show that the outcome must be true because there is no possible alternative.These are typically demonstrated using the following methods:\n\nProof by counterexample: using a counterexample (x implies y, yet we observe y without x…x cannot imply y (aka x not necessary for y)).\nProof by contradiction: assume that the statement is false and try to prove it wrong, eventually demonstrating that a contradiction emerges. Thus, the statement cannot be false."
  },
  {
    "objectID": "math/01_notation.html#footnotes",
    "href": "math/01_notation.html#footnotes",
    "title": "Notation, Sets, and Functions",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee https://www.overleaf.com/learn/latex/List_of_Greek_letters_and_math_symbols for details.↩︎"
  },
  {
    "objectID": "math/03_calc1.html",
    "href": "math/03_calc1.html",
    "title": "Calculus I",
    "section": "",
    "text": "Calculus may be a foreign subject compared to what we have covered so far. Many of us have made career choices to deliberately avoid having to deal with calculus. Still, calculus is important because for computational social science because, at its core, it is about dealing with continuity in a consistent manner.\nMore often than not we will deal with variables and distributions that are (at least assumed) continuous. Moreover, many single-number quantities of interest in data analysis, like p-values or standard errors, are calculated from continuous distributions (more about this in POLI SCI 403).\nDealing with continuity also means introducing new operations beyond the usual addition, subtraction, multiplication, and division, hence the difficulty. We will take it slow and focus on one at a time. Today is all about derivatives."
  },
  {
    "objectID": "math/03_calc1.html#calculus",
    "href": "math/03_calc1.html#calculus",
    "title": "Calculus I",
    "section": "",
    "text": "Calculus may be a foreign subject compared to what we have covered so far. Many of us have made career choices to deliberately avoid having to deal with calculus. Still, calculus is important because for computational social science because, at its core, it is about dealing with continuity in a consistent manner.\nMore often than not we will deal with variables and distributions that are (at least assumed) continuous. Moreover, many single-number quantities of interest in data analysis, like p-values or standard errors, are calculated from continuous distributions (more about this in POLI SCI 403).\nDealing with continuity also means introducing new operations beyond the usual addition, subtraction, multiplication, and division, hence the difficulty. We will take it slow and focus on one at a time. Today is all about derivatives."
  },
  {
    "objectID": "math/03_calc1.html#derivatives",
    "href": "math/03_calc1.html#derivatives",
    "title": "Calculus I",
    "section": "2 Derivatives",
    "text": "2 Derivatives\nDerivatives are about (instantaneous) rate of change.\nA helpful way to think about a derivatives is as a slope. Let’s consider a linear function of the form \\(y = 2 x\\):\n\nlibrary(tidyverse) # could also just do library(ggplot2)\nggplot() +\n  stat_function(fun = function(x){2 * x}, \n                xlim = c(-10, 10))\n\n\n\n\nWe can imagine any political variables in the x- and y-axes. What is the rate of change? In other words, what is the derivative? Remember that we can calculate the slope with\n\\[\nm = \\frac{f(x_2) - f(x_1)}{x_2-x_1}\n\\]\nwhich you can remember with the mnemonic “rise over run.”\nNow consider another slightly more complicated function, a quadratic one, \\(y = x^2\\):\n\nggplot() +\n  stat_function(fun = function(x){x ^ 2}, \n                xlim = c(-10, 10))\n\n\n\n\nWhat happens when we apply our slope function?\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nHere the derivative depends on the value of \\(x\\). It is actually \\(2x\\).\n\n\n\nDifferential calculus is about finding these derivatives in a more straightforward manner. We can generalize our slope formula as\n\\[\nm = \\frac{f(x_1+ \\Delta x) - f(x_1)}{\\Delta x}\n\\]\nThe point is that when \\(\\Delta x\\) is arbitrarily small, we’ll get our rate of change. Formalizing this:\n\\[\n\\lim_{\\Delta x\\to0} \\frac{f(x_1+ \\Delta x) - f(x_1)}{\\Delta x} = \\frac{d}{dx} f(x) = \\frac{dy}{dx} = f'(x)\n\\]\nA few points on notation:\n\\(\\frac{d}{dx} f(x)\\) is read “The derivative of \\(f\\) of \\(x\\) with respect to \\(x\\).” One would be tempted to read \\(\\frac{d}{dx}\\) as a fraction, but it is just here for notation.\nThe variable with respect to which we’re differentiating is the one that appears in the bottom (in the case above, this is \\(x\\)).\n\\(f'(x)\\) (\\(f\\) prime \\(x\\)) is the derivative of \\(f(x)\\). This is a more compact form to refer to derivatives when you have defined \\(f(x)\\) elsewhere.\n\n2.1 Rules of differentiation\nHow to compute derivatives? Sometimes you can try a bunch of numbers and get at the answer. Sometimes you can use the limit-based formula above, if you know a few properties of limits. But in most cases you will either use software (more on this later) or the rules of differentiation, which we will cover now.\nConstant rule: \\((c)' = 0\\).\nThere is no change in a constant:\n\nggplot() +\n  stat_function(fun = function(x){2}, xlim = c(-10, 10))\n\n\n\n\nCoefficient rule: \\((c \\cdot f(x))' = c \\cdot f'(x)\\).\n\nggplot() +\n  stat_function(fun = function(x){2 * x}, xlim = c(-10, 10), aes(color = \"y = 2x\")) +\n  stat_function(fun = function(x){4 * x}, xlim = c(-10, 10), aes(color = \"y = 4x\")) +\n  scale_color_manual(\"Function\", values = c(\"red\", \"blue\"))\n\n\n\n\nSum/difference rule: \\((f(x) \\pm g(x))' = f'(x) \\pm g'(x)\\).\nThe two rules above give us that the derivative is a linear operator.\nPower rule: \\((x^n)'=nx^{(n-1)}\\)\nRemember when we wanted to calculate the derivative of \\(y=x^2\\) above? We can use the power rule, with \\(n=2\\)\n\\[\nnx^{(n-1)} = 2x^{(2-1)}=2x\n\\]\n\\(\\;nx^{(n-1)} = 2x^{(2-1)}=2x\\).\nLet’s try out \\(\\frac{d}{dx}4x^3\\) and \\(\\frac{d}{dx}(x^2 + 2x)\\) on the board.\nHere are a few functions to practice the differentiation rules:\n\n\n\n\n\n\nExercise\n\n\n\nUse the differentiation rules we have covered so far to calculate the derivatives of \\(y\\) with respect to \\(x\\) of the following functions:\n\n\\(y= 4x^3\\)\n\\(y= x^2 + 2x\\)\n\\(y = 2x^2 + 10\\)\n\\(y = 5x^4 - \\frac{2}{3}x^3\\)\n\\(y = 9 \\sqrt x\\)\n\\(y = \\frac{4}{x^2}\\)\n\\(y = ax^3 + b\\), where \\(a\\) and \\(b\\) are constants.\n\\(y = \\frac{2w}{5}\\)\n\n\n\nExponent and logarithm rules:\n\\[\n\\begin{aligned}\n(c^x)' &= c^x \\cdot ln(c), & \\forall x&gt;0 \\\\\n\\\\\n(log_a(x))' &= \\frac{1}{x \\cdot ln(a)}, & \\forall x&gt;0  \\\\\n\\end{aligned}\n\\]\nEuler’s number (\\(e\\)) has interesting properties when it comes to derivatives.\n\\[\n\\begin{aligned}\n(e^x)' &= e^x \\\\\n\\\\\n(ln(x))' &= \\frac{1}{x}, & \\forall x&gt;0\n\\end{aligned}\n\\]\n\n\n\n\nNow we’ll get to a couple of more advanced (and powerful) rules.\n\nProduct rule: \\((f(x)g(x))'=f'(x)g(x) + g'(x)f(x)\\)\nQuotient rule: \\(\\displaystyle(\\frac{f(x)}{g(x)})' = \\frac{f'(x)g(x) + g'(x)f(x)}{[g(x)]^2}\\)\nChain rule: \\((f(g(x))' = f'(g(x)) \\cdot g'(x)\\)\n\n\n\n\n\n\n\n\n\n\n\n\n2.2 Higher-order derivatives\nWe saw call \\(f'(x)\\) the first derivative, but we can also calculate higher-order derivatives. These are not common in social science data analysis, but they appear in game theory, complex systems, and agent-based modeling.\n\nFor example, the second derivative tells us whether the slope of a function is increasing, decreasing, or staying the same at any point \\(x\\) on the function’s domain. For example, when driving a car:\n\n\\(f(x)\\) = distance traveled at time \\(x\\)\n\\(f'(x)\\) = speed at time \\(x\\)\n\\(f''(x)\\) = acceleration at time \\(x\\)\n\nTo calculate higher-order derivatives, you just calculate the derivative using the usual differentiation rules, then calculate the derivative of the output, and so on for however many orders you have. In a college-level calculus course, these can get very crazy during your midterm. In practice, you will rarely lead anything beyond a second derivative.\nFor example, we can calculate the following second derivative:\n\\[f''(x) = \\frac{d^2(x^4)}{dx^2}\\]\nFirst, we take the first derivative \\[f'(x)=4x^3\\]\nThen we use that output to take the second derivative \\[f''(x)=f'(4x^3)=12x^2\\]\nWe can keep going… for example, the third derivative is \\[f'''(x) = f'(12x^2) = 24x\\]\n\n\n\n\n\n\n\n\n\n2.3 Partial derivatives\nSo far, we have worked with derivatives of functions with only one variable. What happens when we have more than one variable that is changing?\nSuppose we have a function \\(f\\) of two (or more) variables and we want to determine the rate of change relative to one of the variables. For a function \\(f(x,z)\\), we call this a partial derivative\n\\[\n\\frac{\\partial}{\\partial_x}f(x,z) = \\frac{\\partial_y}{\\partial_x} = \\partial_x f\n\\]\nTo obtain a partial derivative, we treat all other variables as constants and take the derivative with respect to the variable of interest (here \\(x\\)). For example:\n\\[\n\\begin{aligned}\ny = f(x,z) &= xz \\\\\n\\frac{\\partial_y}{\\partial_x} &= z\n\\end{aligned}\n\\]\nYou can try to do the same for \\(\\displaystyle\\frac{\\partial_y}{\\partial_z}?\\) on your own\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPractice\n\n\n\nTake the partial derivative with respect to \\(x\\) and with respect to \\(z\\) of the following functions. What would the notation for each look like?\n\n\\(y = 3xz - x\\)\n\\(x^3+z^3+x^4z^4\\)\n\\(e^{xz}\\)\n\n\n\n\n\n2.4 Differentiability of functions\nNot all functions are differentiable at every point of their domains!\nAn important concept here is whether functions are continuous at a point:\n\nInformally: A function is continuous at a point if its graph has no holes or breaks at that point\nFormally: A function is continuous at a point \\(a\\) if: \\(\\lim_{x \\to a} f(x)=f(a)\\)\n\nWhen is a function differentiable at a point?\n\nIf a function is differentiable at a point, it is also continuous at that point.\nIf a function is continuous at a point, it is not necessarily differentiable at that point.\n\nImpossible to calculate derivative at sharp turns, cusps, or vertical tangents.\n\n\n\nggplot() +\n  stat_function(fun = function(x){abs(x) + 2}, xlim = c(-4, 4), \n                aes(color = \"y = |x| + 2\")) +\n  stat_function(fun = function(x){sqrt(abs(x)) + 1}, xlim = c(-4, 4), \n                aes(color = \"y = √(|x|) + 1\")) +\n  stat_function(fun = function(x){sign(x) * abs(x)^(1 / 3)}, xlim = c(-4, 4), \n                aes(color = \"y = x^(1/3)\")) +\n  scale_colour_manual(\"Function\", values = c(\"red\", \"blue\", \"black\")) +\n  labs(title = \"Examples of functions that are not differentiable at x=0\")\n\n\n\n\n\nInformally, functions need to be continuous and reasonably smooth to be differentiable."
  },
  {
    "objectID": "r/01_intro.html",
    "href": "r/01_intro.html",
    "title": "Introduction to Computational Social Science and R",
    "section": "",
    "text": "Understanding social science research. Combination of Statistics and Programming allows you to read, understand, and reproduce other scholars’ works.\nAutomation of manual labor. Programming saves time in many tasks. Calculations, data gathering, and many other tasks could be automated with basic knowledge of programming.\nProducing your own research. Programming empowers researchers to design and execute their own custom analyses, simulations, and data visualizations.\n\n\n\n\nExcel\nStata/SPSS/etc.\nPython\n\nR is the second most-used statistical software in academia.1 New social science methods and thus packages are usually either developed in R or adapted to R (e.g., quanteda for NLP, CEM for causal inference, etc.). However, R allows you to do much more. For example, this website was made with R and RStudio.\n\n\n\nFirst, we need to install R. Click the button below and click “Download and Install R”. Choose your OS. For Windows you need to download “base”; for MacOS and Linux you have to choose the version of your OS. Install.\n\nDownload R\n\n\n\nStep one\n\n\n\n\nFor windows:\n\n\n\n\nSecond, we need to install RStudio. Click the button below and click “Download RStudio Desktop”. You will be redirected to your version automatically. Install.\n\nDownload RStudio\n\n\n\nStep two\n\n\n\n\n\n\n\n\nIt will take some time to understand how everything works in RStudio, but once you understand it, it’s quite straightforward. The most classic UI consists of four panes.\n\nSource. Here we write code to run.\nEnvironment. This pane allows you to interact with the data loaded into RStudio.\nConsole. This pane provides an area to interactively execute code.\nFiles. By default, this pane has your working directory. From here you can access files associated with the project.\n\n\n\n\n\nUser Interface\n\n\n\n\n\n\n\nDownload script"
  },
  {
    "objectID": "r/01_intro.html#programming-for-social-science-research",
    "href": "r/01_intro.html#programming-for-social-science-research",
    "title": "Introduction to Computational Social Science and R",
    "section": "",
    "text": "Understanding social science research. Combination of Statistics and Programming allows you to read, understand, and reproduce other scholars’ works.\nAutomation of manual labor. Programming saves time in many tasks. Calculations, data gathering, and many other tasks could be automated with basic knowledge of programming.\nProducing your own research. Programming empowers researchers to design and execute their own custom analyses, simulations, and data visualizations.\n\n\n\n\nExcel\nStata/SPSS/etc.\nPython\n\nR is the second most-used statistical software in academia.1 New social science methods and thus packages are usually either developed in R or adapted to R (e.g., quanteda for NLP, CEM for causal inference, etc.). However, R allows you to do much more. For example, this website was made with R and RStudio.\n\n\n\nFirst, we need to install R. Click the button below and click “Download and Install R”. Choose your OS. For Windows you need to download “base”; for MacOS and Linux you have to choose the version of your OS. Install.\n\nDownload R\n\n\n\nStep one\n\n\n\n\nFor windows:\n\n\n\n\nSecond, we need to install RStudio. Click the button below and click “Download RStudio Desktop”. You will be redirected to your version automatically. Install.\n\nDownload RStudio\n\n\n\nStep two\n\n\n\n\n\n\n\n\nIt will take some time to understand how everything works in RStudio, but once you understand it, it’s quite straightforward. The most classic UI consists of four panes.\n\nSource. Here we write code to run.\nEnvironment. This pane allows you to interact with the data loaded into RStudio.\nConsole. This pane provides an area to interactively execute code.\nFiles. By default, this pane has your working directory. From here you can access files associated with the project.\n\n\n\n\n\nUser Interface\n\n\n\n\n\n\n\nDownload script"
  },
  {
    "objectID": "r/01_intro.html#markdown-and-quarto",
    "href": "r/01_intro.html#markdown-and-quarto",
    "title": "Introduction to Computational Social Science and R",
    "section": "Markdown and Quarto",
    "text": "Markdown and Quarto\nIn RStudio, you can use Markdown language to format text.\nFor example, this is bold text and this is italic text. And, of course, you can insert images. It’s pretty easy, and after the class you can take a look at some tutorials.\n\n\n\nNorthwestern Logo\n\n\nYou can do many-many more different things. In this regard, visual editor in RStudio might be helpful. Markdown is also used in several note taking apps, e.g. Obsidian or Notion. Feel free to utilize your Markdown knowledge for your graduate studies.\nGenerally, what we’ve done so far can be described by the image below. We have downloaded R (“engine”) and RStudio (“car”). In Rstudio we have Quarto, which is this document you are working with now. We can do a lot of things right away – e.g., render our output to a Word document, PDF or HTML.\n\n\n\nR software"
  },
  {
    "objectID": "r/01_intro.html#data-structures-in-r",
    "href": "r/01_intro.html#data-structures-in-r",
    "title": "Introduction to Computational Social Science and R",
    "section": "Data Structures in R",
    "text": "Data Structures in R\n\nObjects: Basic Operations\nNow, let’s turn to statistics and programming. This gray part of the document is called chunk or code block. Here we can code. Let’s create an object called number and assign it the value 1.\n\nnumber &lt;- 1\nnumber\n\n[1] 1\n\n\n\n\n\n\n\n\nTip\n\n\n\nFirst shortcut. On windows you can use Alt and -, on Mac you can use Option and - to insert assignment operator. Try it out! Alternatively, you can always type &lt;- or = yourself.\n\nword ... c(\"Northwestern\")\nword\n\n\n\nAs you noticed, created objects can contain different information, be it numbers or words. As R is the object-oriented language, we can perform different manipulations with our objects.\n\nFor example, some basic mathematical operations with numbers\n\n\nnumber + 2\nnumber - 2\nnumber * 2\nnumber / 2\n\n[1] 3\n[1] -1\n[1] 2\n[1] 0.5\n\n\n\nWith words, for example, you can calculate the number of characters\n\n\nnchar(word)\n\n\n\nVectors: Logical Operations and Descriptive Statistics\nBut the real power of programming starts with vectors. Vectors are collections of objects. To create one, you will need to use function c(). Here’s an example,\n\nnumbers &lt;- c(1, 2, 3)\nnumbers\n\n[1] 1 2 3\n\n\n\n\n\n\n\n\nTip\n\n\n\nSecond shortcut. To insert a chunk on Windows you can use Ctrl+Alt+I, on Mac Cmd+Option+I. Try it out and instead of ... insert the following code in this chunk: words &lt;- c(\"Welcome\", \"to\" ,\"Northwestern\")\n\n\n...\n\nBasic logical operations\nLet us start with numbers. R allows you to automate calculation of statistics, perform different manipulations on a set of values.\n\nnumbers + 5\n\n[1] 6 7 8\n\n\nYou can check if some object in a vector is equal to some specified value using == operator. For example:\n\nnumbers == 2\n\n[1] FALSE  TRUE FALSE\n\n\nWhy are we using a double equal sign?\nFurthermore, we can easily check what values are greater or less than some number.\n\nnumbers &gt; 2\n\n[1] FALSE FALSE  TRUE\n\nnumbers &lt; 2\n\n[1]  TRUE FALSE FALSE\n\n\nThe table below summarizes most important logical operators in R. They are quite straightforward, but it might take some time to memorize them.\n\n\n\nOperation\nSymbol\nExample Usage\n\n\n\n\nEqual to\n==\nx == y\n\n\nNot equal to\n!=\nx != y\n\n\nGreater than\n&gt;\nx &gt; y\n\n\nLess than\n&lt;\nx &lt; y\n\n\nGreater than or equal to\n&gt;=\nx &gt;= y\n\n\nLess than or equal to\n&lt;=\nx &lt;= y\n\n\nLogical AND\n&\n(x &gt; y) & (a &lt; b)\n\n\nLogical OR\n|\n(x &gt; y) | (a &lt; b)\n\n\nLogical NOT\n!\n!(x &gt; y)\n\n\n\nLet’s say we asked a group of people their ages in an Evanston coffee shop. We obtained the following data and assigned it to an object called age.\n\nage &lt;- c(18, 20, 21, 19, 24, 21, 20, 22)\n\nYou can access the data using indexation. Let’s say you entered the data into your object age as you were receiving the results. You can access the age of your second respondent by indicating [i] to an object.\n\nage[2]\n\n[1] 20\n\n\nWho is allowed to order espresso martini (yes, in the US drinking age is 21!)?\n\nage ... 21\n\nWho is not 20 years old?\n\n...\n\nWho is between 20 and 22?\n\n(age &gt;= 20) & (age ... 22)\n\nIs the 4th respondent older than the 2nd?\n\nage[...] ... \n\n\n\n\n\n\n\nTip\n\n\n\nThird shortcut. To run only selected line of code or a code highlight you can use Ctrl + Enter on Windows and Cmd + Return on Mac. Try accessing age of 4th and 2nd respondents separately.\n\n\n\n\nDescriptive statistics\nNow we are turning to slightly more advanced topics. Most commonly people describe the whole data they have (sometimes it’s hundreds and thousands of observations) with only a couple of numbers.\nFor example, we can calculate the average age in our surveyed group.\n\nmean(age)\n\n[1] 20.625\n\n\nAlternatively, we can describe our data with minimum and maximum values.\n\nmin(age)\nmax(age)\n\n[1] 18\n[1] 24\n\n\nUsually such description of data is called descriptive statistics. There is a helpful command summary() that allows us to describe data in one line. Try it out! What is the median you got?\n\nsummary(...)\n\nYou can use the table below for your reference\n\n\n\nStatistic\nFunction\nExample Usage\n\n\n\n\nMinimum\nmin()\nmin(x)\n\n\nMaximum\nmax()\nmax(x)\n\n\nMean\nmean()\nmean(x)\n\n\nMedian\nmedian()\nmedian(x)\n\n\nStandard Deviation\nsd()\nsd(x)\n\n\nVariance\nvar()\nvar(x)\n\n\nSum\nsum()\nsum(x)\n\n\nSummary\nsummary()\nsummary(x)\n\n\n\nWe also asked people in the coffee shop about their majors and received the following data:\n\nmajor &lt;- c(\"computer science\", \"sociology\", \"sociology\", \"political science\", \"political science\", \"political science\", \"computer science\", \"sociology\")\n\nTry to get the descriptive statistics for this data.\n\n...\n\nFor text data you might want to calculate the number of people in each major.\n\ntable(major)\n\nmajor\n computer science political science         sociology \n                2                 3                 3 \n\n\nInsert a chunk and access major of the 3rd respondent.\n...\n\n\n\nDataframes\nA dataframe is one of the most commonly used data structures in data analysis. It is a simple table, similar to those you have probably seen in Excel. Let’s create one. We have two vectors, age and major. We can combine them into one table.\n\nrespondents &lt;- data.frame(age, major)\nrespondents\n\n  age             major\n1  18  computer science\n2  20         sociology\n3  21         sociology\n4  19 political science\n5  24 political science\n6  21 political science\n7  20  computer science\n8  22         sociology\n\n\nColumns are vectors. In a table format they are referred to as variables (and thus these labels are used interchangeably). Rows are called observations. There are some useful commands that provide information about your dataframe.\n\nNames of your variables\n\n\nnames(respondents)\n\n[1] \"age\"   \"major\"\n\n\n\nNumber of rows in your dataframe\n\n\nnrow(respondents)\n\n[1] 8\n\n\n\nNumber of columns in your dataframe\n\n\nncol(respondents)\n\n[1] 2\n\n\n\nNumber of dimensions (number of rows and columns)\n\n\ndim(respondents)\n\n[1] 8 2\n\n\nTo access a variable as vector you can use $ sign.\n\nrespondents$age\n\n[1] 18 20 21 19 24 21 20 22\n\n\nThis would allow you to manipulate this variable. And as a spoiler of the future sections, let’s visualize this data!\n\nhist(respondents$age)\n\n\n\n\nYou can easily combine previously used functions. For example, indexation provides access to any observation.\n\nrespondents$major[8]\n\n[1] \"sociology\"\n\n\nOr you can get the maximum age in our dataset.\n\nmax(respondents$age)\n\n[1] 24\n\n\nMoreover, $ operator can create a new variable in your dataframe. Let’s calculate the number of characters in majors using the nchar() function\n\nrespondents$nchar_major &lt;- ...(respondents$...)\nrespondents\n\nHere is a dataset that consist of information about selected cars. Provide your answers to the questions using code\n\ncars_information &lt;- mtcars\n\nWhat information is included in the dataset (list names of the variables)?\n\n\n\n\n\n\nTip\n\n\n\nTo understand what these variables stand for you can check details about included datasets or any other functions using ?\n\n?mtcars\n\n\n\n\n\n\n\n\n\nExercise\n\n\n\nHow many cars are listed in the dataframe (how many rows are there)?\nDescribe mpg variable. Include average, minimum and maximum.\nWhat is the minimum horsepower (hp)?\nAre there any cars that have horse power greater than 200 but less than 250?\nCreate a new variable called power_to_weight, which calculates the ratio of horsepower (hp) to weight (wt). You need to divide horsepower by weight\nWhat is an average Power to Weight Ratio?\nWhat is a minimum Power to Weight Ratio?\nCreate a histogram of power_to_weight variable"
  },
  {
    "objectID": "r/01_intro.html#data-classes",
    "href": "r/01_intro.html#data-classes",
    "title": "Introduction to Computational Social Science and R",
    "section": "Data classes",
    "text": "Data classes\nAs you have noticed, we deal with different classes of data. Sometimes these are words (e.g., names of cars or majors) and numbers (e.g., age or horsepower). The analysis we perform is highly dependent on data classes. But before discussing it in a detail, we need to install one library that would help us to grasp this difference. All functions we have worked before are base to R. However, to access some other useful functions we might need to download add-ons/libraries/packages (used interchangeably). Run the code below to install DiagrammeR library. You need to do it only once.\n\ninstall.packages(\"DiagrammeR\")\n\nThese are the basic classes of data in R. Some examples might include:\n\nNominal: Names, Labels, Brands, Country names, etc.\nOrdinal: Educational Levels (High School-BA-MA-PhD), Customer Rating (Unsatisfied-Neutral-Satisfied), etc.\nDiscrete: Number of customers per day, number of seats won by political parties, etc.\nContinuous: Height of people, voter turnout, etc.\n\n\n\n\n\n\n\nFor each object, vector, or variable, you can check its class\n\nclass(cars_information$mpg)\nclass(respondents$major)\n\n[1] \"numeric\"\n[1] \"character\"\n\n\nAlternatively, you can check if this variable is of specific class\n\nis.integer(cars_information$mpg)\nis.character(cars_information)\n\n[1] FALSE\n[1] FALSE\n\n\nTake a look on the cyl variable in cars dataset. What is its class?\n\n...\n\nclass(...)\n\nDo you think R classified it properly? If a variable is identified incorrectly, you can change it.\nFor example, you can change it to a factor.\n\ncars_information$cyl &lt;- as.factor(cars_information$cyl)"
  },
  {
    "objectID": "r/01_intro.html#loading-data-and-exercises",
    "href": "r/01_intro.html#loading-data-and-exercises",
    "title": "Introduction to Computational Social Science and R",
    "section": "Loading data and Exercises",
    "text": "Loading data and Exercises\nData classes become increasingly relevant as you work with public datasets. I suggest you inspect if the variables were treated correctly by R.\nHere are the most common file types to save/load your datasets:\n\ncsv is widely universally in data analysis. A default option for R users\nxslx is Excel’s file type. You can easily use it in R too\ndta is Stata file, you can use it in R too\nrds is R file. Most comfortable to work with in R.\n\nLet’s try the most used one, namely csv. Download Corruption Perception Index dataset from transparency international using this URL.\nYou need to put this dataset to your current working directory, which is\n\ngetwd()\n\nThen, load the dataset. CPI = 0 is a highly corrupt country, whereas CPI = 100 is very clean.\n\ncpi &lt;- read.csv(\"cpi.csv\")\n\n\n\n\n\n\n\nExercise\n\n\n\nWhat are the variables in the dataset?\nHow many observations are there?\nCheck the classes of the variables. Are they correct?\nProvide the descriptive statistics of cpi_2023 variable\nCreate a new variable that provides the difference between CPI of a country in 2023 and 2022. On average, are countries getting cleaner in terms of corruption?\nDraw a histogram of this newly created variable\nCalculate average and median. Are they different - if yes, why?"
  },
  {
    "objectID": "r/01_intro.html#prepare-for-the-tomorrows-class",
    "href": "r/01_intro.html#prepare-for-the-tomorrows-class",
    "title": "Introduction to Computational Social Science and R",
    "section": "Prepare for the tomorrow’s class",
    "text": "Prepare for the tomorrow’s class\nYou’ll need to install tidyverse library. It allows you to do so many more! Insert the name of the library and install it.\n\ninstall.packages(...)\n\nSmall spoiler alert what you can do with it! Do you remember the histogram we created earlier? Check it out. This is a pretty powerful tool to understand what’s going on in your data. See you tomorrow!\n\nlibrary(tidyverse)\nggplot(data = respondents) +\n  geom_histogram(aes(x = age, fill = major), binwidth = 2)"
  },
  {
    "objectID": "r/01_intro.html#check-list",
    "href": "r/01_intro.html#check-list",
    "title": "Introduction to Computational Social Science and R",
    "section": "Check List",
    "text": "Check List\n I know what panes in RStudio used for\n I know what objects, vectors and dataframes are, and I know how to create them\n I know what variables and observations are\n I know what descriptive statistics is and I can easily calculate average, median, etc.\n I know how to create a variable and how to change its class\n I know how to load data to R and how to install new libraries"
  },
  {
    "objectID": "r/01_intro.html#sources",
    "href": "r/01_intro.html#sources",
    "title": "Introduction to Computational Social Science and R",
    "section": "Sources",
    "text": "Sources\n\nHigher School of Economics, Data Science Minor, https://electives.hse.ru/minor_data_spb/\nPosit, RStudio User Guides, https://docs.posit.co/ide/user/ide/guide/ui/ui-panes.html\nTransparency International, Corruption Perception Index, https://www.transparency.org/en/cpi/\nUT Austin, Department of Government, Methods Camp, https://methodscamp.github.io/\nHarvard University Department of Government, Math Prefresher, https://iqss.github.io/prefresher/"
  },
  {
    "objectID": "r/01_intro.html#footnotes",
    "href": "r/01_intro.html#footnotes",
    "title": "Introduction to Computational Social Science and R",
    "section": "Footnotes",
    "text": "Footnotes\n\n\ndetails here↩︎"
  },
  {
    "objectID": "r/03_tidy2.html",
    "href": "r/03_tidy2.html",
    "title": "Tidyverse II",
    "section": "",
    "text": "Where do we find publicly available social science data?\n\nICPSR\nIPUMS\nWebsites of large/commonly used data sets (GSS, ANES, NLSY, etc.)\nGovernment open data portals (e.g., the Chicago Data Portal)\n\nTo illustrate how to work with a relatively large, publicly available data set, I’ve created copies of the Department of Education’s College Scorecard data in different formats. We’ll be using the institution-level data set, so each row will be a college/university in the U.S. Because these files are large and not confidential/sensitive, I’ve put them and this script on this Google Drive.\n\n\nFirst, let’s load the packages we need today. It’s a good practice to do this at the top of our Quarto document/R script.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# install.packages(\"haven\") # remove the # to run\n\nlibrary(haven)\n\n\n\n\n\n\n\n\n\nFile Type\nR function(s)\nPackages\n\n\n\n\nComma separated values (CSV)\nread.csv, read_csv\nbase R, tidyverse\n\n\nExcel file (XLS, XLSX)\nread_excel\ntidyverse\n\n\nStata data file (DTA)\nread_dta\nhaven\n\n\nSPSS data file (SAV)\nread_sav\nhaven\n\n\nSAS transport file (XPT)\nread_sas\nhaven\n\n\nR data file (RDS)\nreadRDS\nbase R\n\n\n\nRegardless of the data type, these functions will interpret the file name relative to your working directory. If the data file is saved in your working directory, you just need the name of the data file. Otherwise, you will have to specify a longer file path.\nExample:\n\ndata &lt;- read_csv(\"data/Most-Recent-Cohorts-Institution.csv\")\n\nRows: 6484 Columns: 3305\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2380): OPEID, OPEID6, INSTNM, CITY, STABBR, ZIP, ACCREDAGENCY, INSTURL,...\ndbl  (850): UNITID, SCH_DEG, HCM2, MAIN, NUMBRANCH, PREDDEG, HIGHDEG, CONTRO...\nlgl   (75): LOCALE2, UG, UGDS_WHITENH, UGDS_BLACKNH, UGDS_API, UGDS_AIANOLD,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata_sav &lt;- read_sav(\"data/Most-Recent-Cohorts-Institution.sav\")\n\ndata_xpt &lt;- read_xpt(\"data/Most_Recent_Cohorts_Institution.xpt\")\n\n\n\n\n\n\n\nExercise\n\n\n\nRead in the file “Most-Recent-Cohorts-Institution.dta”.\n\n\nNotice that all of the dataframes have the same dimensions. That’s because they’re the same data set, just saved in different formats. To be economical, I’m going to delete the extra dataframes. Then I’ll examine the data.\n\nrm(data_sav, data_xpt) \n\nhead(data)\n\n# A tibble: 6 × 3,305\n  UNITID OPEID    OPEID6 INSTNM   CITY  STABBR ZIP   ACCREDAGENCY INSTURL NPCURL\n   &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        &lt;chr&gt;   &lt;chr&gt; \n1 100654 00100200 001002 Alabama… Norm… AL     35762 Southern As… www.aa… www.a…\n2 100663 00105200 001052 Univers… Birm… AL     3529… Southern As… https:… https…\n3 100690 02503400 025034 Amridge… Mont… AL     3611… Southern As… https:… https…\n4 100706 00105500 001055 Univers… Hunt… AL     35899 Southern As… www.ua… finai…\n5 100724 00100500 001005 Alabama… Mont… AL     3610… Southern As… www.al… www.a…\n6 100751 00105100 001051 The Uni… Tusc… AL     3548… Southern As… www.ua… finan…\n# ℹ 3,295 more variables: SCH_DEG &lt;dbl&gt;, HCM2 &lt;dbl&gt;, MAIN &lt;dbl&gt;,\n#   NUMBRANCH &lt;dbl&gt;, PREDDEG &lt;dbl&gt;, HIGHDEG &lt;dbl&gt;, CONTROL &lt;dbl&gt;,\n#   ST_FIPS &lt;dbl&gt;, REGION &lt;dbl&gt;, LOCALE &lt;dbl&gt;, LOCALE2 &lt;lgl&gt;, LATITUDE &lt;dbl&gt;,\n#   LONGITUDE &lt;dbl&gt;, CCBASIC &lt;dbl&gt;, CCUGPROF &lt;dbl&gt;, CCSIZSET &lt;dbl&gt;, HBCU &lt;dbl&gt;,\n#   PBI &lt;dbl&gt;, ANNHI &lt;dbl&gt;, TRIBAL &lt;dbl&gt;, AANAPII &lt;dbl&gt;, HSI &lt;dbl&gt;,\n#   NANTI &lt;dbl&gt;, MENONLY &lt;dbl&gt;, WOMENONLY &lt;dbl&gt;, RELAFFIL &lt;dbl&gt;,\n#   ADM_RATE &lt;dbl&gt;, ADM_RATE_ALL &lt;dbl&gt;, SATVR25 &lt;dbl&gt;, SATVR75 &lt;dbl&gt;, …\n\n\nThere are lots of variables! Let’s focus on three: average faculty salary, 6-year completion rate among Pell grant recipients, and region.\n\n\n\nCreate a column with only the following columns: AVGFACSAL, C150_4_PELL, REGION.",
    "crumbs": [
      "Programming",
      "3. Tidyverse II"
    ]
  },
  {
    "objectID": "slides/01_notation.html#agenda",
    "href": "slides/01_notation.html#agenda",
    "title": "Social Science\nMath Camp",
    "section": "",
    "text": "Who are we?\nWhat is math camp?\nWho are you?\nWhat are we going to cover?\nStart math camp content"
  },
  {
    "objectID": "slides/01_notation.html#co-instructors",
    "href": "slides/01_notation.html#co-instructors",
    "title": "Social Science\nMath Camp",
    "section": "Co-instructors",
    "text": "Co-instructors\n\n\n\n\n\n\nArtur Baranov\n\n\n\nPhD Student in Political Science\nartur.baranov@u.northwestern.edu\n\n\n\n\n\n\n\n\nGustavo Diaz\n\n\n\nAssistant Professor of Instruction in Political Science\ngustavo.diaz@northwestern.edu\n\n\n\n\n\n\n\n\nAven Peters\n\n\n\nPhD Student in Sociology\naven.peters@u.northwestern.edu"
  },
  {
    "objectID": "slides/01_notation.html#math-camp",
    "href": "slides/01_notation.html#math-camp",
    "title": "Social Science\nMath Camp",
    "section": "Math camp",
    "text": "Math camp\n. . .\n\nA (re)introduction to math topics necessary for the quantitative methods sequence\n\nGoals:\n\n\nGet to know you and meet your methods training needs/goals\nGet to know your colleagues"
  },
  {
    "objectID": "slides/01_notation.html#math-camp-1",
    "href": "slides/01_notation.html#math-camp-1",
    "title": "Social Science\nMath Camp",
    "section": "Math camp",
    "text": "Math camp\n\nA (re)introduction to math topics necessary for the quantitative methods sequence\n\nWhy a math camp?\n\n\nCan always use more methods training\nMore of a methods camp"
  },
  {
    "objectID": "slides/01_notation.html#who-are-you",
    "href": "slides/01_notation.html#who-are-you",
    "title": "Social Science\nMath Camp",
    "section": "Who are you?",
    "text": "Who are you?\n\nName\nPronouns\nDiscipline + intended subfield/research area\nA hobby or interesting fact about yourself"
  },
  {
    "objectID": "slides/01_notation.html#what-are-we-going-to-cover",
    "href": "slides/01_notation.html#what-are-we-going-to-cover",
    "title": "Social Science\nMath Camp",
    "section": "What are we going to cover?",
    "text": "What are we going to cover?\n\n\n\n    \n\n    \n    \n      \n        \n        \n              \n                Day\n                Date\n                Morning\n                Afternoon\n              \n        \n        \n        \n                \n                  1\n                  September 16\n                  Notation, sets, functions\n                  R and RStudio          \n                \n                \n                  2\n                  September 17\n                  Matrices                 \n                  Tidyverse I            \n                \n                \n                  3\n                  September 18\n                  Calculus I               \n                  Tidyverse II           \n                \n                \n                  4\n                  September 19\n                  NO MEETING               \n                  NA                     \n                \n                \n                  5\n                  September 20\n                  Calculus II              \n                  Sampling and simulation\n                \n        \n      \n    \n\n. . .\n\nMorning: Math (9AM - noon)\nLunch: Meet faculty, students (noon - 1PM)\nBreak (1-1:30PM)\nAfternoon: R programming (1:30-4PM)\nSee gustavodiaz.org/NUmathcamp for content"
  },
  {
    "objectID": "slides/01_notation.html#expectations",
    "href": "slides/01_notation.html#expectations",
    "title": "Social Science\nMath Camp",
    "section": "Expectations",
    "text": "Expectations\n\n\nYou are not being evaluated\nNo need to take extensive notes\nBring a laptop\nEngage\nGet things wrong\nAsk\nInterrupt if you need to"
  },
  {
    "objectID": "slides/01_notation.html#what-is-this",
    "href": "slides/01_notation.html#what-is-this",
    "title": "Social Science\nMath Camp",
    "section": "What is this?",
    "text": "What is this?\n\n\nSymbols, letters, formulae used over plain language\nGoal: Talk about stuff in general terms\nDownside: Harder to follow\nConjecture: Math is not hard, its language is\nSolution: Practice"
  },
  {
    "objectID": "slides/01_notation.html#set-notation",
    "href": "slides/01_notation.html#set-notation",
    "title": "Social Science\nMath Camp",
    "section": "Set Notation",
    "text": "Set Notation\nSet: A collection of elements\n. . .\nNumerical sets\n\n\n\\(\\mathbb{N}\\): Natural numbers   \\(\\{(0), 1, 2, 3\\}\\)\n\\(\\mathbb{Z}\\): Integers   \\(\\{\\ldots, -3, -2, -1, 0, 1, 2, 3, \\ldots\\}\\)\n\\(\\mathbb{Q}\\): Rational numbers   \\(\\{1/2, 3/2, 4\\}\\)\n\\(\\mathbb{R}\\): Real numbers   \\(\\{-899.8, 22, 4.5, \\sqrt{\\pi}\\}\\)\n\\(\\mathbb{I}\\): Imaginary numbers   \\(\\{ai | a \\in \\mathbb{R}, i= \\sqrt{-1}\\}\\)\n\\(\\mathbb{C}\\): Complex numbers   \\(a + bi\\)"
  },
  {
    "objectID": "slides/01_notation.html#measurement",
    "href": "slides/01_notation.html#measurement",
    "title": "Social Science\nMath Camp",
    "section": "Measurement",
    "text": "Measurement\n\n\nSets can also have non-numerical elements\nWe may code this as numbers or not, what matters is what we assume about the elements\nNominal: No mathematical relationship between elements\nOrdinal: Order is meaningful\nInterval: Elements equidistant, but no meaningful zero\nRatio (interval-ratio): There is a meaningful zero"
  },
  {
    "objectID": "slides/01_notation.html#set-notation-1",
    "href": "slides/01_notation.html#set-notation-1",
    "title": "Social Science\nMath Camp",
    "section": "Set notation",
    "text": "Set notation\n. . .\nOperations within sets\n\n\n\\(\\exists\\) “there exists”\n\\(\\forall\\) “for all”\n\\(\\exists\\) “exists”; there is something true\n\\(\\in\\) “in” or “element of”\n| Such that\n\\(\\notin\\) excluding (element)\n\\(\\equiv\\) equivalent"
  },
  {
    "objectID": "slides/01_notation.html#set-notation-2",
    "href": "slides/01_notation.html#set-notation-2",
    "title": "Social Science\nMath Camp",
    "section": "Set notation",
    "text": "Set notation\nOperations between sets\n\n\n\\(\\subset\\); \\(\\subseteq\\) Subset\n\\(\\varnothing\\) Empty set\n\\(\\cap\\) Intersection; AND\n\\(\\cup\\) Union; OR\n\\(\\setminus\\) Difference"
  },
  {
    "objectID": "slides/01_notation.html#practice",
    "href": "slides/01_notation.html#practice",
    "title": "Social Science\nMath Camp",
    "section": "Practice",
    "text": "Practice\n\n\n\\(\\{x|x \\in \\mathbb{N}, x &lt; 4\\}\\)\n\\(\\{x|x \\in \\mathbb{R}, x &lt; 200\\}\\)\n\\(\\{ai | a \\in \\mathbb{R}, i= \\sqrt{-1}\\}\\)\n\\(A \\cap B\\)\n\\(A \\cup B\\)\n\\(\\{4n \\in \\mathbb{N} | n \\in \\mathbb{N}\\}\\)"
  },
  {
    "objectID": "slides/01_notation.html#greek-notation",
    "href": "slides/01_notation.html#greek-notation",
    "title": "Social Science\nMath Camp",
    "section": "Greek notation",
    "text": "Greek notation\n. . ."
  },
  {
    "objectID": "slides/01_notation.html#notation-chart",
    "href": "slides/01_notation.html#notation-chart",
    "title": "Social Science\nMath Camp",
    "section": "Notation chart",
    "text": "Notation chart\n\n\n\nGreek\n\nLetters like \\(\\mu\\) denote parameters or quantities of interest\nMarkings like \\(\\widehat{\\mu}\\) denotes our estimate of such parameters/quantities\n\n\n\n\nLatin\n\nLetters like \\(X\\) denote variables in our data\nMarkings like \\(\\bar{X}\\) denotes calculations from our data\n\n\n\n\n\n\\(X \\rightarrow \\bar{X} \\rightarrow \\widehat{\\mu} \\xrightarrow{\\text{hopefully!}} \\mu\\)"
  },
  {
    "objectID": "slides/01_notation.html#logic",
    "href": "slides/01_notation.html#logic",
    "title": "Social Science\nMath Camp",
    "section": "Logic",
    "text": "Logic\n\n\nSufficient: Y is true if A and B are true\nNecessary: Y is true if and only if A and B are true\nINUS: Insufficient but Necessary part of an Unnecessary but Sufficient set of conditions (component causes)\nSUIN: Sufficient but Unnecessary condition that is part of a condition set that is Insufficient but Necessary for the outcome (precipitating causes)"
  },
  {
    "objectID": "slides/01_notation.html#logical-operators-in-r",
    "href": "slides/01_notation.html#logical-operators-in-r",
    "title": "Social Science\nMath Camp",
    "section": "Logical operators in R",
    "text": "Logical operators in R\n\n\n& AND\n| OR\n! NOT\n&lt; LESS THAN\n&lt;= LEQ\n&gt; GREATER THAN\n&gt;= GEQ\n== EXACTLY EQUAL TO\n!= NOT EQUAL TO\n%in% IN THE SET"
  },
  {
    "objectID": "slides/01_notation.html#practice-1",
    "href": "slides/01_notation.html#practice-1",
    "title": "Social Science\nMath Camp",
    "section": "Practice",
    "text": "Practice\n\nx = 3\nx != 5 & x != 4\n\n \n. . .\n\n3 &gt; 4 | 15 == 12\n\n \n. . .\n\nLETTERS == letters\n\n \n. . .\n\nfirst_name = unlist(str_split(\"Gustavo\", \"\")) \nfirst_name %in% letters"
  },
  {
    "objectID": "slides/03_calc1.html#what-have-we-learned-so-far",
    "href": "slides/03_calc1.html#what-have-we-learned-so-far",
    "title": "Calculus I",
    "section": "",
    "text": "Foundational ideas behind what you will have to deal with during your graduate program:\n\n\nReading about methods \\(\\rightarrow\\) Notation, sets, functions\nWorking with data frames \\(\\rightarrow\\) Matrix operations"
  },
  {
    "objectID": "slides/03_calc1.html#up-next",
    "href": "slides/03_calc1.html#up-next",
    "title": "Calculus I",
    "section": "Up next",
    "text": "Up next\nDealing with continuity (which implies infinity) \\(\\rightarrow\\) Calculus\n. . .\nTwo new operators:\n\nDerivatives (Today)\nIntegrals (Friday)"
  },
  {
    "objectID": "slides/03_calc1.html#calculus",
    "href": "slides/03_calc1.html#calculus",
    "title": "Calculus I",
    "section": "Calculus",
    "text": "Calculus\n\n\nThis is often where people experience the most difficulty\nWe are now operating with whole functions!\nNew operators have new, different rules\nWe will stick together!"
  },
  {
    "objectID": "slides/03_calc1.html#derivatives-as-a-slope",
    "href": "slides/03_calc1.html#derivatives-as-a-slope",
    "title": "Calculus I",
    "section": "Derivatives as a slope",
    "text": "Derivatives as a slope\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow do we find the slope of this line?\n\\(m = \\frac{f(x_2) - f(x_1)}{x_2-x_1} = \\frac{rise}{run}\\)\nLet’s try it out!"
  },
  {
    "objectID": "slides/03_calc1.html#now-try-this-function",
    "href": "slides/03_calc1.html#now-try-this-function",
    "title": "Calculus I",
    "section": "Now try this function",
    "text": "Now try this function"
  },
  {
    "objectID": "slides/03_calc1.html#now-try-this-one",
    "href": "slides/03_calc1.html#now-try-this-one",
    "title": "Calculus I",
    "section": "Now try this one!",
    "text": "Now try this one!\n\\(y = x^2\\)"
  },
  {
    "objectID": "slides/03_calc1.html#why-doesnt-it-work",
    "href": "slides/03_calc1.html#why-doesnt-it-work",
    "title": "Calculus I",
    "section": "Why doesn’t it work?",
    "text": "Why doesn’t it work?\n\n\nWe need an operation to calculate the slope or rate of change for (almost) any kind of continuous function\nEnter derivatives\n\n\n. . .\nGeneralize slope formula\n\\[\nm = \\frac{f(x_1+ \\Delta x) - f(x_1)}{\\Delta x}\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#derivatives",
    "href": "slides/03_calc1.html#derivatives",
    "title": "Calculus I",
    "section": "Derivatives",
    "text": "Derivatives\nWhen \\(\\Delta x\\) is small enough\n\\[\n\\lim_{\\Delta x\\to0} \\frac{f(x_1+ \\Delta x) - f(x_1)}{\\Delta x} = \\frac{d}{dx} f(x) = f'(x)\n\\]\n\n\nRead \\(\\frac{d}{dx} f(x)\\) as “the derivative of \\(f\\) of \\(x\\) with respect to \\(x\\)”\nRead \\(f'(x)\\) as “\\(f\\) prime \\(x\\)” for a shorthand"
  },
  {
    "objectID": "slides/03_calc1.html#how-to-compute",
    "href": "slides/03_calc1.html#how-to-compute",
    "title": "Calculus I",
    "section": "How to compute?",
    "text": "How to compute?\n\n\nPlug in many values into \\(\\frac{rise}{run}\\)\nUse properties of limits\nSolve analytically\nSoftware"
  },
  {
    "objectID": "slides/03_calc1.html#rules-of-differentiation",
    "href": "slides/03_calc1.html#rules-of-differentiation",
    "title": "Calculus I",
    "section": "Rules of differentiation",
    "text": "Rules of differentiation\n. . .\nDifferentation: “Taking the derivative”"
  },
  {
    "objectID": "slides/03_calc1.html#rules-of-differentiation-1",
    "href": "slides/03_calc1.html#rules-of-differentiation-1",
    "title": "Calculus I",
    "section": "Rules of differentiation",
    "text": "Rules of differentiation\nConstant rule: \\((c)' = 0\\).\n. . .\n\\(y = 2\\)"
  },
  {
    "objectID": "slides/03_calc1.html#rules-of-differentiation-2",
    "href": "slides/03_calc1.html#rules-of-differentiation-2",
    "title": "Calculus I",
    "section": "Rules of differentiation",
    "text": "Rules of differentiation\n\nCoefficient rule: \\((c \\cdot f(x))' = c \\cdot f'(x)\\)\n. . ."
  },
  {
    "objectID": "slides/03_calc1.html#rules-of-differentiation-3",
    "href": "slides/03_calc1.html#rules-of-differentiation-3",
    "title": "Calculus I",
    "section": "Rules of differentiation",
    "text": "Rules of differentiation\nSum/difference rule: \\((f(x) \\pm g(x))' = f'(x) \\pm g'(x)\\).\n. . .\nExample: \\(f(x) = 3x + 7\\)\n. . .\n\\[\nf'(x) = (3x + 7)'\n\\]\n. . .\n\\[\n= (3x)' + (7)'\n\\]\n. . .\n\\[\n= 3 + 0\n\\]\n. . .\n\\[\n= 3\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#using-limits",
    "href": "slides/03_calc1.html#using-limits",
    "title": "Calculus I",
    "section": "Using limits",
    "text": "Using limits\n\\[\n\\lim_{\\Delta x\\to0} \\frac{f(x_1+ \\Delta x) - f(x_1)}{\\Delta x}\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#how-to-compute-1",
    "href": "slides/03_calc1.html#how-to-compute-1",
    "title": "Calculus I",
    "section": "How to compute?",
    "text": "How to compute?\n\nPlug in many values into \\(\\frac{rise}{run}\\)\nUse properties of limits\nSolve analytically\nSoftware"
  },
  {
    "objectID": "slides/03_calc1.html#using-limits-1",
    "href": "slides/03_calc1.html#using-limits-1",
    "title": "Calculus I",
    "section": "Using limits",
    "text": "Using limits\n\\[\n\\lim_{h\\to0} \\frac{f(x_1+ h) - f(x_1)}{h}\n\\]\n. . .\nBack to \\(x^2\\)\n. . .\n\\[\n\\lim_{h \\to0} \\frac{f(x+ h)^2 - x^2}{h}\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#using-limits-2",
    "href": "slides/03_calc1.html#using-limits-2",
    "title": "Calculus I",
    "section": "Using limits",
    "text": "Using limits\n\\[\n\\lim_{h\\to0} \\frac{f(x_1+ h) - f(x_1)}{h}\n\\]\nBack to \\(x^2\\)\n\\[\n\\lim_{h\\to0} \\frac{f(x+ h)^2 - x^2}{h} = \\lim_{h\\to0} \\frac{x^2 + 2xh + 2h^2 - x^2}{h}\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#using-limits-3",
    "href": "slides/03_calc1.html#using-limits-3",
    "title": "Calculus I",
    "section": "Using limits",
    "text": "Using limits\n\\[\n\\lim_{h\\to0} \\frac{f(x_1+ h) - f(x_1)}{h}\n\\]\nBack to \\(x^2\\)\n\\[\n\\lim_{h\\to0} \\frac{f(x+ h)^2 - x^2}{h} = \\lim_{h\\to0} \\frac{x^2 + 2xh + 2h^2 - x^2}{h} = \\lim_{h \\to 0} \\frac{2xh + 2h^2}{h}\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#using-limits-4",
    "href": "slides/03_calc1.html#using-limits-4",
    "title": "Calculus I",
    "section": "Using limits",
    "text": "Using limits\n\\[\n\\lim_{h\\to0} \\frac{f(x_1+ h) - f(x_1)}{h}\n\\]\nBack to \\(x^2\\)\n\\[\n\\lim_{h\\to0} \\frac{f(x+ h)^2 - x^2}{h} = \\lim_{h\\to0} \\frac{x^2 + 2xh + 2h^2 - x^2}{h} = \\lim_{h \\to 0} \\frac{2xh + 2h^2}{h}\n\\] \\[\n= \\lim_{h \\to 0} \\frac{(2x+2h) h}{h}\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#using-limits-5",
    "href": "slides/03_calc1.html#using-limits-5",
    "title": "Calculus I",
    "section": "Using limits",
    "text": "Using limits\n\\[\n\\lim_{h\\to0} \\frac{f(x_1+ h) - f(x_1)}{h}\n\\]\nBack to \\(x^2\\)\n\\[\n\\lim_{h\\to0} \\frac{f(x+ h)^2 - x^2}{h} = \\lim_{h\\to0} \\frac{x^2 + 2xh + 2h^2 - x^2}{h} = \\lim_{h \\to 0} \\frac{2xh + 2h^2}{h}\n\\] \\[\n= \\lim_{h \\to 0} \\frac{(2x+2h) h}{h} = \\lim_{h \\to 0} 2x+2h\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#using-limits-6",
    "href": "slides/03_calc1.html#using-limits-6",
    "title": "Calculus I",
    "section": "Using limits",
    "text": "Using limits\n\\[\n\\lim_{h\\to0} \\frac{f(x_1+ h) - f(x_1)}{h}\n\\]\nBack to \\(x^2\\)\n\\[\n\\lim_{h\\to0} \\frac{f(x+ h)^2 - x^2}{h} = \\lim_{h\\to0} \\frac{x^2 + 2xh + 2h^2 - x^2}{h} = \\lim_{h \\to 0} \\frac{2xh + 2h^2}{h}\n\\] \\[\n= \\lim_{h \\to 0} \\frac{(2x+2h) h}{h} = \\lim_{h \\to 0} 2x+2h\n\\] \\[\n=2x+0\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#using-limits-7",
    "href": "slides/03_calc1.html#using-limits-7",
    "title": "Calculus I",
    "section": "Using limits",
    "text": "Using limits\n\\[\n\\lim_{h\\to0} \\frac{f(x_1+ h) - f(x_1)}{h}\n\\]\nBack to \\(x^2\\)\n\\[\n\\lim_{h\\to0} \\frac{f(x+ h)^2 - x^2}{h} = \\lim_{h\\to0} \\frac{x^2 + 2xh + 2h^2 - x^2}{h} = \\lim_{h \\to 0} \\frac{2xh + 2h^2}{h}\n\\] \\[\n= \\lim_{h \\to 0} \\frac{(2x+2h) h}{h} = \\lim_{h \\to 0} 2x+2h\n\\] \\[\n=2x+0 = 2x\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#how-to-compute-a-derivative",
    "href": "slides/03_calc1.html#how-to-compute-a-derivative",
    "title": "Calculus I",
    "section": "How to compute a derivative?",
    "text": "How to compute a derivative?\n\n\nPlug in many values into \\(\\frac{rise}{run}\\)\nUse properties of limits\nSolve analytically\nSoftware"
  },
  {
    "objectID": "slides/03_calc1.html#how-to-compute-a-derivative-1",
    "href": "slides/03_calc1.html#how-to-compute-a-derivative-1",
    "title": "Calculus I",
    "section": "How to compute a derivative?",
    "text": "How to compute a derivative?\n\nPlug in many values into \\(\\frac{rise}{run}\\)\nUse properties of limits\nSolve analytically\nSoftware"
  },
  {
    "objectID": "slides/03_calc1.html#how-to-compute-a-derivative-2",
    "href": "slides/03_calc1.html#how-to-compute-a-derivative-2",
    "title": "Calculus I",
    "section": "How to compute a derivative?",
    "text": "How to compute a derivative?\n\nPlug in many values into \\(\\frac{rise}{run}\\)\nUse properties of limits\nSolve analytically\nSoftware"
  },
  {
    "objectID": "slides/03_calc1.html#how-to-compute-a-derivative-3",
    "href": "slides/03_calc1.html#how-to-compute-a-derivative-3",
    "title": "Calculus I",
    "section": "How to compute a derivative?",
    "text": "How to compute a derivative?\n\nPlug in many values into \\(\\frac{rise}{run}\\)\nUse properties of limits\nSolve analytically\nSoftware"
  },
  {
    "objectID": "slides/03_calc1.html#how-to-compute-a-derivative-4",
    "href": "slides/03_calc1.html#how-to-compute-a-derivative-4",
    "title": "Calculus I",
    "section": "How to compute a derivative?",
    "text": "How to compute a derivative?\n\nPlug in many values into \\(\\frac{rise}{run}\\)\nUse properties of limits\nSolve analytically\nSoftware"
  },
  {
    "objectID": "slides/03_calc1.html#how-to-compute-a-derivative-5",
    "href": "slides/03_calc1.html#how-to-compute-a-derivative-5",
    "title": "Calculus I",
    "section": "How to compute a derivative?",
    "text": "How to compute a derivative?\n\nPlug in many values into \\(\\frac{rise}{run}\\)\nUse properties of limits\nSolve analytically\nSoftware"
  },
  {
    "objectID": "slides/03_calc1.html#derivatives-as-rate-of-change",
    "href": "slides/03_calc1.html#derivatives-as-rate-of-change",
    "title": "Calculus I",
    "section": "Derivatives as rate of change",
    "text": "Derivatives as rate of change\n\n\nPositive derivative \\(\\rightarrow\\) Function is increasing\nNegative derivative \\(\\rightarrow\\) Function is decreasing\nZeroes \\(\\rightarrow\\) Max or min (more soon!)"
  },
  {
    "objectID": "slides/03_calc1.html#rules-of-differentiation-4",
    "href": "slides/03_calc1.html#rules-of-differentiation-4",
    "title": "Calculus I",
    "section": "Rules of differentiation",
    "text": "Rules of differentiation\nPower rule: \\((x^n)'=nx^{(n-1)}\\)\n. . .\n\\[\nf(x) = x^2\n\\]\n. . .\n\\[\nf'(x) = nx^{(n-1)}\n\\]\n. . .\n\\[\n= 2x^{(2-1)}\n\\]\n. . .\n\\[\n= 2x\n\\]\n\n\nRate of change depends on values of \\(x\\)\n“… at a given point”"
  },
  {
    "objectID": "slides/03_calc1.html#practice",
    "href": "slides/03_calc1.html#practice",
    "title": "Calculus I",
    "section": "Practice",
    "text": "Practice\nLet’s try out \\(\\frac{d}{dx}4x^3\\) and \\(\\frac{d}{dx}(x^2 + 2x)\\) on the board."
  },
  {
    "objectID": "slides/03_calc1.html#more-practice",
    "href": "slides/03_calc1.html#more-practice",
    "title": "Calculus I",
    "section": "More practice",
    "text": "More practice\nUse the differentiation rules we have covered so far to calculate the derivatives of \\(y\\) with respect to \\(x\\) of as many as these as you can.\n\n\\(y = 2x^2 + 10\\)\n\\(y = 5x^4 - \\frac{2}{3}x^3\\)\n\\(y = 9 \\sqrt x\\)\n\\(y = \\frac{4}{x^2}\\)\n\\(y = \\frac{2w}{5}\\)"
  },
  {
    "objectID": "slides/03_calc1.html#rules-of-differentiation-5",
    "href": "slides/03_calc1.html#rules-of-differentiation-5",
    "title": "Calculus I",
    "section": "Rules of differentiation",
    "text": "Rules of differentiation\nExponent and logarithm rules:\n\\[\n\\begin{aligned}\n(c^x)' &= c^x \\cdot ln(c), & \\forall x&gt;0 \\\\\n\\\\\n(log_a(x))' &= \\frac{1}{x \\cdot ln(a)}, & \\forall x&gt;0  \\\\\n\\end{aligned}\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#rules-of-differentiation-6",
    "href": "slides/03_calc1.html#rules-of-differentiation-6",
    "title": "Calculus I",
    "section": "Rules of differentiation",
    "text": "Rules of differentiation\nExponent and logarithm rules:\nEuler’s number (\\(e\\)) has interesting properties when it comes to derivatives.\n\\[\n\\begin{aligned}\n(e^x)' &= e^x \\\\\n\\\\\n(ln(x))' &= \\frac{1}{x}, & \\forall x&gt;0\n\\end{aligned}\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#more-more-practice",
    "href": "slides/03_calc1.html#more-more-practice",
    "title": "Calculus I",
    "section": "More more practice",
    "text": "More more practice\nCompute the following:\n\n\\(\\frac{d}{dx}(10e^x)\\) \n\\(\\frac{d}{dx}(ln(x) - \\frac{e^2}{3})\\)"
  },
  {
    "objectID": "slides/03_calc1.html#advanced-rules",
    "href": "slides/03_calc1.html#advanced-rules",
    "title": "Calculus I",
    "section": "Advanced rules",
    "text": "Advanced rules\nProduct rule: \\((f(x)g(x))'=f'(x)g(x) + g'(x)f(x)\\)\n. . .\n\\[\n[(3x+4)(x+2)]'\n\\]\n. . .\n\\[\nf(x) = (3x+4), g(x) = (x+2); f'(x) = 3, g'(x) = 1\n\\]\n. . .\n\\[\n\\color{blue}{f'(x)}\\color{yellow}{g(x)} + \\color{purple}{g'(x)}\\color{green}{f(x)}\n\\]\n. . .\n\\[\n= \\color{blue}3 \\color{yellow}{(x+2)} + \\color{purple}{1} \\color{green}{(3x+4)}\n\\]\n. . .\n\\[\n= 3x + 6 + 3x+ 4\n\\]\n. . .\n\\[\n= 6x + 10\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#advanced-rules-1",
    "href": "slides/03_calc1.html#advanced-rules-1",
    "title": "Calculus I",
    "section": "Advanced rules",
    "text": "Advanced rules\nQuotient rule: \\(\\displaystyle(\\frac{f(x)}{g(x)})' = \\frac{f'(x)g(x) + g'(x)f(x)}{[g(x)]^2}\\)\n. . .\n\\[\n\\frac{3x^2}{x+2}\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#advanced-rules-2",
    "href": "slides/03_calc1.html#advanced-rules-2",
    "title": "Calculus I",
    "section": "Advanced rules",
    "text": "Advanced rules\nQuotient rule: \\(\\displaystyle(\\frac{f(x)}{g(x)})' = \\frac{f'(x)g(x) + g'(x)f(x)}{[g(x)]^2}\\)\n\\[\n\\frac{3x^2}{x+2} \\Rightarrow f(x) = 3x^2, g(x) = x + 2; f'(x) = 6x, g'(x) = 1\n\\]\n. . .\n\\[\n\\frac{\\color{blue}{f'(x)}\\color{yellow}{g(x)} + \\color{purple}{g'(x)}\\color{green}{f(x)}}{[\\color{yellow}{g(x)}]^2} =\n\\frac{\\color{blue}{6x}\\color{yellow}{(x+2)} - \\color{purple}1 \\color{green}{(3x^2)}}{\\color{yellow}{(x+2)}^2}\n\\]\n. . .\n\\[\n= \\frac{6x^2 + 12x - 3x2}{(x+2)^2} = \\frac{3x^2+12x}{(x+2)^2}\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#advanced-rules-3",
    "href": "slides/03_calc1.html#advanced-rules-3",
    "title": "Calculus I",
    "section": "Advanced rules",
    "text": "Advanced rules\nChain rule: \\((f(g(x))' = f'(g(x)) \\cdot g'(x)\\)\n. . .\n\\[\nf(g(x)) = (x+3)^3\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#advanced-rules-4",
    "href": "slides/03_calc1.html#advanced-rules-4",
    "title": "Calculus I",
    "section": "Advanced rules",
    "text": "Advanced rules\nChain rule: \\([f(g(x))]' = f'(g(x)) \\cdot g'(x)\\)\n\\[\nf(g(x)) = (x+3)^3 \\Rightarrow f(g(x)) = g(x)^3, g(x) = (x+3)\n\\]\n. . .\n\\[\nf'(x) = 3x^2 \\Rightarrow f'(g(x)) = 3 (x+3)^2, g'(x) = 1\n\\]\n. . .\nSubstitute\n\\[\n[f(g(x))]' = 3(x+3)^2 \\cdot 1\n\\]"
  },
  {
    "objectID": "slides/03_calc1.html#more3-practice",
    "href": "slides/03_calc1.html#more3-practice",
    "title": "Calculus I",
    "section": "More\\(^3\\) practice",
    "text": "More\\(^3\\) practice\n\n\\(\\frac{d}{dx}x^3 \\cdot x\\)\n\\(\\frac{d}{dx}e^x \\cdot x^2\\)\n\\(\\frac{d}{dx}(3x^4-8)^2\\)"
  },
  {
    "objectID": "slides/03_calc1.html#more-more-more-practice",
    "href": "slides/03_calc1.html#more-more-more-practice",
    "title": "Calculus I",
    "section": "More more more practice",
    "text": "More more more practice\n\n\\(\\frac{d}{dx}x^3 \\cdot x\\)\n\\(\\frac{d}{dx}e^x \\cdot x^2\\)\n\\(\\frac{d}{dx}(3x^4-8)^2\\)"
  },
  {
    "objectID": "slides/03_calc1.html#higher-order-derivatives",
    "href": "slides/03_calc1.html#higher-order-derivatives",
    "title": "Calculus I",
    "section": "Higher-order derivatives",
    "text": "Higher-order derivatives\n\n\n\\(f'(x)\\): First derivative\n\\(f''(x)\\): Second derivative\n\\(f'''(x)\\)?\n\n\n. . .\nIf we were driving a car:\n\n\\(f(x)\\) = distance traveled at time \\(x\\)\n\\(f'(x)\\) = speed at time \\(x\\)\n\\(f''(x)\\) = acceleration at time \\(x\\)\n\n. . .\nTo get \\(f''(x)\\) just take the derivative of the output of \\(f'(x)\\)"
  },
  {
    "objectID": "slides/03_calc1.html#partial-derivative",
    "href": "slides/03_calc1.html#partial-derivative",
    "title": "Calculus I",
    "section": "Partial derivative",
    "text": "Partial derivative\n. . .\nWhat happens when we have more than one variable? \\(f(x,z)\\)\n. . .\nPartial derivative\n\\[\n\\frac{\\partial}{\\partial_x}f(x,z) = \\frac{\\partial_y}{\\partial_x} = \\partial_x f\n\\]\n. . .\nJust treat other variables as constants and calculate the derivative of the target variable (usually \\(x\\))"
  },
  {
    "objectID": "slides/03_calc1.html#example",
    "href": "slides/03_calc1.html#example",
    "title": "Calculus I",
    "section": "Example",
    "text": "Example\n\\[\n\\begin{aligned}\ny = f(x,z) &= xz \\\\\n\\frac{\\partial_y}{\\partial_x} &= z\n\\end{aligned}\n\\]\n. . .\nLet’s try \\(\\displaystyle\\frac{\\partial (x^2y+xy^2-x)}{\\partial x}\\) and \\(\\displaystyle\\frac{\\partial (x^2y+xy^2-x)}{\\partial y}\\) together"
  },
  {
    "objectID": "slides/03_calc1.html#differentiability-of-functions",
    "href": "slides/03_calc1.html#differentiability-of-functions",
    "title": "Calculus I",
    "section": "Differentiability of functions",
    "text": "Differentiability of functions\n\n\nNot all functions are differentiable\nWe need continuous and reasonably smooth functions\nInformally: Can draw them without lifting the pen\nFormally: A function is continuous at a point \\(a\\) if: \\(\\lim_{x \\to a} f(x)=f(a)\\)\nDifferentiable \\(\\to\\) continuous\nContinuous \\(\\not\\to\\) differentiable"
  },
  {
    "objectID": "slides/03_calc1.html#using-computers",
    "href": "slides/03_calc1.html#using-computers",
    "title": "Calculus I",
    "section": "Using computers",
    "text": "Using computers\n\n\nSymbolic differentiation: Do the math for you (WolframAlpha or Mathematica)\nNumerical differentiation: Evaluate the function at many values (optim() in R)\nAutomatic differentiation: Break up functions into elementary operations and use chain rule (torch package in R, various packages in Python)"
  },
  {
    "objectID": "slides/03_calc1.html#numerical-differentiation-in-r",
    "href": "slides/03_calc1.html#numerical-differentiation-in-r",
    "title": "Calculus I",
    "section": "Numerical differentiation in R",
    "text": "Numerical differentiation in R\n\noptim(par = 0, fn = function(x){x ^ 2 + 5}, method = \"L-BFGS-B\")\n\n$par\n[1] 0\n\n$value\n[1] 5\n\n$counts\nfunction gradient \n       1        1 \n\n$convergence\n[1] 0\n\n$message\n[1] \"CONVERGENCE: NORM OF PROJECTED GRADIENT &lt;= PGTOL\""
  },
  {
    "objectID": "slides/03_calc1.html#optimization",
    "href": "slides/03_calc1.html#optimization",
    "title": "Calculus I",
    "section": "Optimization",
    "text": "Optimization\n\n\nFind minimum or maximum values\nValleys are minima\nPeaks are maxima\nBoth are extrema\nExtrama can be local or global"
  },
  {
    "objectID": "slides/03_calc1.html#first-order-condition",
    "href": "slides/03_calc1.html#first-order-condition",
    "title": "Calculus I",
    "section": "First order condition",
    "text": "First order condition\n\n\nMinimum: Derivative is negative before and positive after\nMaximum: Derivative is positive before and negative after\nExtrema are critical points\nFirst order condition helps us find them\n\n\n. . .\n\\[FOC: f'(x)=0\\]"
  },
  {
    "objectID": "slides/03_calc1.html#second-order-condition",
    "href": "slides/03_calc1.html#second-order-condition",
    "title": "Calculus I",
    "section": "Second order condition",
    "text": "Second order condition\n. . .\nFOC finds critical points, but can’t tell if minimum or maximum\n. . .\nSecond derivative test\n\n\nStart by identifying \\(f''(x)\\)\nSubstitute in the stationary points \\((x^*)\\) identified from the FOC\n\\(f''(x^*) &gt; 0\\) we have a local minimum\n\\(f''(x^*) &lt; 0\\) we have a local maximum\n\\(f''(x^*) = 0\\) we (may) have an inflection point - need to calculate higher-order derivatives"
  },
  {
    "objectID": "slides/03_calc1.html#more-more-more-more-practice",
    "href": "slides/03_calc1.html#more-more-more-more-practice",
    "title": "Calculus I",
    "section": "More more more more practice",
    "text": "More more more more practice\nObtain FOC and SOC for \\(\\displaystyle y=\\frac{1}{2} x^3 + 3 x^2 - 2\\)"
  },
  {
    "objectID": "slides/03_calc1.html#local-vs.-global-extrema",
    "href": "slides/03_calc1.html#local-vs.-global-extrema",
    "title": "Calculus I",
    "section": "Local vs. global extrema",
    "text": "Local vs. global extrema\nExtreme value theorem:\n\n\nIf a real-valued function is continuous on a closed and bounded (finite) interval, the function must have a global minimum and a global maximum on that interval at least once\nEither at the boundaries or at one of the local extrema\nFind by comparing local min/max to the value of the function at the endpoints\nCould be limits as function approaches \\(-\\infty\\) and \\(+\\infty\\)"
  },
  {
    "objectID": "slides/03_calc1.html#practice-again",
    "href": "slides/03_calc1.html#practice-again",
    "title": "Calculus I",
    "section": "Practice again",
    "text": "Practice again\nCheck \\(\\displaystyle y=\\frac{1}{2} x^3 + 3 x^2 - 2\\) for global extrema"
  },
  {
    "objectID": "slides/03_calc1.html#another-one",
    "href": "slides/03_calc1.html#another-one",
    "title": "Calculus I",
    "section": "Another one",
    "text": "Another one\nIdentify the global extrema of the function \\(\\displaystyle \\frac{x^3}{3} - \\frac{3}{2}x^2 -10x\\) in the interval \\([-6, 6]\\)"
  },
  {
    "objectID": "r/03_tidy2.html#finding-and-loading-data",
    "href": "r/03_tidy2.html#finding-and-loading-data",
    "title": "Tidyverse II",
    "section": "",
    "text": "Where do we find publicly available social science data?\n\nICPSR\nIPUMS\nWebsites of large/commonly used data sets (GSS, ANES, NLSY, etc.)\nGovernment open data portals (e.g., the Chicago Data Portal)\n\nTo illustrate how to work with a relatively large, publicly available data set, I’ve created copies of the Department of Education’s College Scorecard data in different formats. We’ll be using the institution-level data set, so each row will be a college/university in the U.S. Because these files are large and not confidential/sensitive, I’ve put them and this script on this Google Drive.\n\n\nFirst, let’s load the packages we need today. It’s a good practice to do this at the top of our Quarto document/R script.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# install.packages(\"haven\") # remove the # to run\n\nlibrary(haven)\n\n\n\n\n\n\n\n\n\nFile Type\nR function(s)\nPackages\n\n\n\n\nComma separated values (CSV)\nread.csv, read_csv\nbase R, tidyverse\n\n\nExcel file (XLS, XLSX)\nread_excel\ntidyverse\n\n\nStata data file (DTA)\nread_dta\nhaven\n\n\nSPSS data file (SAV)\nread_sav\nhaven\n\n\nSAS transport file (XPT)\nread_sas\nhaven\n\n\nR data file (RDS)\nreadRDS\nbase R\n\n\n\nRegardless of the data type, these functions will interpret the file name relative to your working directory. If the data file is saved in your working directory, you just need the name of the data file. Otherwise, you will have to specify a longer file path.\nExample:\n\ndata &lt;- read_csv(\"data/Most-Recent-Cohorts-Institution.csv\")\n\nRows: 6484 Columns: 3305\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2380): OPEID, OPEID6, INSTNM, CITY, STABBR, ZIP, ACCREDAGENCY, INSTURL,...\ndbl  (850): UNITID, SCH_DEG, HCM2, MAIN, NUMBRANCH, PREDDEG, HIGHDEG, CONTRO...\nlgl   (75): LOCALE2, UG, UGDS_WHITENH, UGDS_BLACKNH, UGDS_API, UGDS_AIANOLD,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata_sav &lt;- read_sav(\"data/Most-Recent-Cohorts-Institution.sav\")\n\ndata_xpt &lt;- read_xpt(\"data/Most_Recent_Cohorts_Institution.xpt\")\n\n\n\n\n\n\n\nExercise\n\n\n\nRead in the file “Most-Recent-Cohorts-Institution.dta”.\n\n\nNotice that all of the dataframes have the same dimensions. That’s because they’re the same data set, just saved in different formats. To be economical, I’m going to delete the extra dataframes. Then I’ll examine the data.\n\nrm(data_sav, data_xpt) \n\nhead(data)\n\n# A tibble: 6 × 3,305\n  UNITID OPEID    OPEID6 INSTNM   CITY  STABBR ZIP   ACCREDAGENCY INSTURL NPCURL\n   &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;        &lt;chr&gt;   &lt;chr&gt; \n1 100654 00100200 001002 Alabama… Norm… AL     35762 Southern As… www.aa… www.a…\n2 100663 00105200 001052 Univers… Birm… AL     3529… Southern As… https:… https…\n3 100690 02503400 025034 Amridge… Mont… AL     3611… Southern As… https:… https…\n4 100706 00105500 001055 Univers… Hunt… AL     35899 Southern As… www.ua… finai…\n5 100724 00100500 001005 Alabama… Mont… AL     3610… Southern As… www.al… www.a…\n6 100751 00105100 001051 The Uni… Tusc… AL     3548… Southern As… www.ua… finan…\n# ℹ 3,295 more variables: SCH_DEG &lt;dbl&gt;, HCM2 &lt;dbl&gt;, MAIN &lt;dbl&gt;,\n#   NUMBRANCH &lt;dbl&gt;, PREDDEG &lt;dbl&gt;, HIGHDEG &lt;dbl&gt;, CONTROL &lt;dbl&gt;,\n#   ST_FIPS &lt;dbl&gt;, REGION &lt;dbl&gt;, LOCALE &lt;dbl&gt;, LOCALE2 &lt;lgl&gt;, LATITUDE &lt;dbl&gt;,\n#   LONGITUDE &lt;dbl&gt;, CCBASIC &lt;dbl&gt;, CCUGPROF &lt;dbl&gt;, CCSIZSET &lt;dbl&gt;, HBCU &lt;dbl&gt;,\n#   PBI &lt;dbl&gt;, ANNHI &lt;dbl&gt;, TRIBAL &lt;dbl&gt;, AANAPII &lt;dbl&gt;, HSI &lt;dbl&gt;,\n#   NANTI &lt;dbl&gt;, MENONLY &lt;dbl&gt;, WOMENONLY &lt;dbl&gt;, RELAFFIL &lt;dbl&gt;,\n#   ADM_RATE &lt;dbl&gt;, ADM_RATE_ALL &lt;dbl&gt;, SATVR25 &lt;dbl&gt;, SATVR75 &lt;dbl&gt;, …\n\n\nThere are lots of variables! Let’s focus on three: average faculty salary, 6-year completion rate among Pell grant recipients, and region.\n\n\n\nCreate a column with only the following columns: AVGFACSAL, C150_4_PELL, REGION.",
    "crumbs": [
      "Programming",
      "3. Tidyverse II"
    ]
  },
  {
    "objectID": "r/03_tidy2.html#missing-data",
    "href": "r/03_tidy2.html#missing-data",
    "title": "Tidyverse II",
    "section": "Missing data",
    "text": "Missing data\nReal data sets almost always have at least some missing values. This can occur for a variety of reasons–sometimes a response to a survey question is missing because the respondent refused to answer it, but sometimes it’s missing because the respondent never saw the question in the first place (because the question was inapplicable to them, because they stopped taking the survey partway through, or because a random sample of respondents were selected to see the question). Sometimes, variables are not marked as missing in our data, but we recode them as missing because their values are illogical or hard to interpret.\nIn publicly available data sets, missing values are represented by many different values. Sometimes a missing value is represented by a dot or the word “NULL”; other times, it is a number like -1, 99, 999, etc. The same variable can have multiple missing codes; often, one code will represent a survey response of “Don’t know,” and another will represent a response of “Refused.” If we simply ignored these missing codes, we might get error messages–or worse, incorrect answers that don’t raise error messages.\nSuppose we have the following table in the codebook.\n\n\n\nResponse\nValue\nFrequency\n\n\n\n\nYes\n1\n0.45\n\n\nNo\n2\n0.35\n\n\nDon’t Know\n7\n0.15\n\n\nRefused\n9\n0.05\n\n\n\nIf we naively took the mean of this variable, we would get 2.65, which clearly makes no sense for the substantive meaning of the variable.\n\n1*0.45 + 2*0.35 + 7*0.15 + 9*0.05\n\n[1] 2.65\n\n\nTo prevent issues like this, it’s important to recode missing values as NA, which is what R recognizes as missing data. In the dataframe we just loaded, our missing values are already coded as NA, so we can skip this step.\nA full treatment of missing data is beyond the scope of today’s class. However, you should know how to do two simple tasks. First, you should know how much missing data you have. Here’s a simple way to check.\n\nsum(is.na(selection$AVGFACSAL))\n\n[1] 2596\n\nsum(is.na(selection$C150_4_PELL))\n\n[1] 4300\n\nsum(is.na(selection$REGION))\n\n[1] 0\n\n\nWe have quite a bit of missing data for faculty salary, and even more for Pell grant recipient completion rate. We happen not to have any missing data for region.\nNext, you should know how to remove all rows of your data set with missing values for the variables you’re interested in. This is called listwise deletion, and it’s not always the right choice, but it’s very common in social science research. Here are two ways to do this.\n\n# method 1\nselection_complete &lt;- selection %&gt;%\n  filter(!is.na(AVGFACSAL) & !is.na(C150_4_PELL) & !is.na(REGION))\n\nnrow(selection_complete) # check how many rows we have left\n\n[1] 2148\n\n# method 2\nselection_complete &lt;- selection %&gt;%\n  na.omit() # omit all rows with missing values in any variables in the dataframe;\n# can also specify specific variables we'd like to delete\n\nnrow(selection_complete) # check how many rows we have left again\n\n[1] 2148\n\n\nEncouragingly, we get the same number of rows in the complete dataframe using both methods.\n\n\n\n\n\n\nExercise\n\n\n\n\nTry to remove all rows of selection that have missing values for faculty salary, but keep rows with missing values for Pell recipient completion rate.\nDo universities in different regions of the U.S. have different amounts of missing data? Why might this be?",
    "crumbs": [
      "Programming",
      "3. Tidyverse II"
    ]
  },
  {
    "objectID": "r/03_tidy2.html#recoding-variables",
    "href": "r/03_tidy2.html#recoding-variables",
    "title": "Tidyverse II",
    "section": "Recoding variables",
    "text": "Recoding variables\nBefore we do any data analysis, we will need to prepare our variables by recoding them. This is especially true for categorical variables. Region in this data set is a good example. From the codebook, we have the following information.\n\n\n\nRegion\nValue\n\n\n\n\nU.S. Service Schools\n0\n\n\nNew England\n1\n\n\nMid East\n2\n\n\nGreat Lakes\n3\n\n\nPlains\n4\n\n\nSoutheast\n5\n\n\nSouthwest\n6\n\n\nRocky Mountains\n7\n\n\nFar West\n8\n\n\nOutlying Areas\n9\n\n\n\nSuppose we wanted to combine some of these regions. We could combine New England and Mid East into an “East” category, group Great Lakes and Plains into a “Midwest” category, keep “Southeast” as its own category, put Southwest, Rocky Mountains, and Far West into a “West” category, and collapse the remaining regions (U.S. Service Schools and Outlying Areas) into an “Other region” category.\nThe case_when function is ideal for this task. Here’s how we might do it.\n\nselection_complete &lt;- selection_complete %&gt;%\n  mutate(region_rec = case_when(REGION %in% c(1,2) ~ \"East\",\n                                REGION %in% c(3,4) ~ \"Midwest\",\n                                REGION == 5 ~ \"South\",\n                                REGION %in% c(6:8) ~ \"West\",\n                                TRUE ~ \"Other\"))\n\nWhy is the condition for the last line “TRUE”? Case_when reads each line sequentially, and assigns the value for the first statement that is true. When REGION is between 1 and 8, at least one of the first four conditions must hold. When evaluating case_when, R only goes to the last line when none of the first four conditions have held. This could only possibly happen if REGION was 0 or 9. By writing “TRUE,” we are effectively saying, “If you’ve gotten to this point, assign the value ‘Other’ no matter what.” Of course, we could also use a more specific condition for this last line–TRUE is just often simpler to type and makes sure we don’t leave out any data.\nWhat if we only cared whether or not a school was in the South? We could create a simpler binary variable for this with case_when like this.\n\nselection_complete &lt;- selection_complete %&gt;%\n  mutate(south = case_when(REGION == 5 ~ 1,\n                           TRUE ~ 0))\n\nThis code is equivalent to the if_else function we learned about yesterday. Using that function, we could write the following.\n\nselection_complete &lt;- selection_complete %&gt;%\n  mutate(south = if_else(REGION == 5, 1, 0))\n\n\n\n\n\n\n\nExercise\n\n\n\nCreate a “west” variable indicating whether a university is in the West of the U.S. Find the mean of this variable. What does the mean represent substantively?",
    "crumbs": [
      "Programming",
      "3. Tidyverse II"
    ]
  },
  {
    "objectID": "r/03_tidy2.html#more-data-visualization",
    "href": "r/03_tidy2.html#more-data-visualization",
    "title": "Tidyverse II",
    "section": "More data visualization",
    "text": "More data visualization\nIn addition to histograms, you should know how to create and interpret a scatterplot. The syntax for a scatterplot is similar to that for the histogram we created yesterday. Let’s plot faculty salary on the X-axis and Pell recipient completion rate on the Y-axis.\n\nselection_complete %&gt;%\n  ggplot(aes(x = AVGFACSAL, y = C150_4_PELL)) +\n  geom_point()\n\n\n\n\n\n\n\n\nWhat do we learn from this scatterplot?\n\n\n\n\n\n\nExercise\n\n\n\nReferencing yesterday’s material, relabel the axes and add a meaningful title.\n\n\nWe might wonder if there’s variation in this relationship by region. Let’s explore this in two ways. First, we’ll allow the color of the points to indicate the region of the university.\n\nselection_complete %&gt;%\n  ggplot(aes(x = AVGFACSAL, y = C150_4_PELL, col = region_rec)) +\n  geom_point() +\n  labs(x = \"Average faculty salary (monthly)\", y = \"6-Year graduation rate among Pell Grant recipients\", col = \"Region\", title = \"Pell grant recipient graduation rate by faculty salary\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nIt’s hard to see obvious patterns on this plot. Subjectively, it seems like the “Other” region schools tend to have lower faculty salaries in general, and those salaries don’t seem very predictive of graduation rates among Pell grant recipients. However, we would need better tools to test this conjecture.\nA clearer way to see differences in the relationship between faculty salary and graduation rates by region is to use a facet wrap. This will create five separate scatterplots, one for each region.\n\nselection_complete %&gt;%\n  ggplot(aes(x = AVGFACSAL, y = C150_4_PELL)) +\n  geom_point() +\n  labs(x = \"Average faculty salary (monthly)\", y = \"6-Year graduation rate among Pell Grant recipients\", title = \"Pell grant recipient graduation rate by faculty salary\") +\n  theme_minimal() +\n  facet_wrap(~region_rec)\n\n\n\n\n\n\n\n\nHow would you interpret these plots?",
    "crumbs": [
      "Programming",
      "3. Tidyverse II"
    ]
  },
  {
    "objectID": "r/03_tidy2.html#additional-topics-working-with-dates",
    "href": "r/03_tidy2.html#additional-topics-working-with-dates",
    "title": "Tidyverse II",
    "section": "Additional topics: working with dates",
    "text": "Additional topics: working with dates\nTo explore these topics, we’ll use another built-in data set. But first, we’ll need to load an additional package.\n\n# install.packages(\"nycflights13\")\nlibrary(nycflights13)\n\nWe’ll use the flights data set, which contains information about all flights from New York airports in 2013. First, let’s take a look at the first few rows of data.\n\nhead(flights)\n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     1     1      517            515         2      830            819\n2  2013     1     1      533            529         4      850            830\n3  2013     1     1      542            540         2      923            850\n4  2013     1     1      544            545        -1     1004           1022\n5  2013     1     1      554            600        -6      812            837\n6  2013     1     1      554            558        -4      740            728\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nThe last column of this data set indicates the date and time of the flight.\n\nflights &lt;- flights %&gt;%\n  mutate(flight_date = date(time_hour))\n\nOnce we have converted this variable into a date, we can use other functions in lubridate to extract the year, month, and day of each date. We can also compute the time between two dates in days (or any other unit of time). Here are some examples.\n\nyear(flights$flight_date[500])\n\n[1] 2013\n\nday(flights$flight_date[500])\n\n[1] 1\n\nmonth(flights$flight_date[500])\n\n[1] 1\n\nint &lt;- interval(start = flights$flight_date[1], end = flights$flight_date[10000])\nsecs &lt;- int_length(int) # interval length in seconds\ndays &lt;- int_length(int)/(60*60*24) # divide to get interval length in days\n\nsecs\n\n[1] 950400\n\ndays\n\n[1] 11\n\n\nThis is just a quick sampling of the lubridate package. For more information, check out the lubridate website here.",
    "crumbs": [
      "Programming",
      "3. Tidyverse II"
    ]
  },
  {
    "objectID": "slides/03_calc1.html",
    "href": "slides/03_calc1.html",
    "title": "Calculus I",
    "section": "",
    "text": "Foundational ideas behind what you will have to deal with during your graduate program:\n\n\nReading about methods \\(\\rightarrow\\) Notation, sets, functions\nWorking with data frames \\(\\rightarrow\\) Matrix operations"
  },
  {
    "objectID": "slides/01_notation.html",
    "href": "slides/01_notation.html",
    "title": "Social Science\nMath Camp",
    "section": "",
    "text": "Who are we?\nWhat is math camp?\nWho are you?\nWhat are we going to cover?\nStart math camp content"
  },
  {
    "objectID": "math/calc1_answers.html",
    "href": "math/calc1_answers.html",
    "title": "Calc 1 Answer sheet",
    "section": "",
    "text": "\\(\\frac{d}{dx}4x^3 = 12x^2\\)\n\\(\\frac{d}{dx}(x^2 + 2x) = 2(x+1)\\)"
  },
  {
    "objectID": "math/calc1_answers.html#practice",
    "href": "math/calc1_answers.html#practice",
    "title": "Calc 1 Answer sheet",
    "section": "",
    "text": "\\(\\frac{d}{dx}4x^3 = 12x^2\\)\n\\(\\frac{d}{dx}(x^2 + 2x) = 2(x+1)\\)"
  },
  {
    "objectID": "math/calc1_answers.html#more-practice",
    "href": "math/calc1_answers.html#more-practice",
    "title": "Calc 1 Answer sheet",
    "section": "More practice",
    "text": "More practice\n\n\\(\\frac{d}{dx}2x^2 + 10 = 4x\\)\n\\(\\frac{d}{dx}5x^4 - \\frac{2}{3}x^3 = 2x^2(10x-1)\\)\n\\(\\frac{d}{dx}9 \\sqrt x = \\frac{9}{2\\sqrt{x}}\\)\n\\(\\frac{d}{dx}\\frac{4}{x^2} = - \\frac{8}{x^3}\\)\n\\(\\frac{d}{dx}\\frac{2w}{5} = 0\\)"
  },
  {
    "objectID": "math/calc1_answers.html#more-more-practice",
    "href": "math/calc1_answers.html#more-more-practice",
    "title": "Calc 1 Answer sheet",
    "section": "More more practice",
    "text": "More more practice\n\n\\(\\frac{d}{dx}(10e^x) = 10e^x\\)\n\\(\\frac{d}{dx}(ln(x) - \\frac{e^2}{3}) = \\frac{1}{x}\\)"
  },
  {
    "objectID": "math/calc1_answers.html#more-more-more-practice",
    "href": "math/calc1_answers.html#more-more-more-practice",
    "title": "Calc 1 Answer sheet",
    "section": "More more more practice",
    "text": "More more more practice\n\n\\(\\frac{d}{dx}x^3 \\cdot x = 4x^3\\)\n\\(\\frac{d}{dx}e^x \\cdot x^2 = e^x x(x+2)\\)\n\\(\\frac{d}{dx}(3x^4-8)^2 = 24x^3(3x^4-8)\\)"
  },
  {
    "objectID": "slides/02_matrices.html",
    "href": "slides/02_matrices.html",
    "title": "Matrices",
    "section": "",
    "text": "Set up eduroam\nGo back and make sure you have the MOST RECENT version of R and RStudio"
  },
  {
    "objectID": "slides/02_matrices.html#matrix-multiplication-fa-skull-crossbones",
    "href": "slides/02_matrices.html#matrix-multiplication-fa-skull-crossbones",
    "title": "Matrices",
    "section": "Matrix multiplication ",
    "text": "Matrix multiplication \n\n\nMatrices must be conformable\nFor \\(A \\times B\\) we need \\(A_{i \\times k}\\) and \\(B_{k \\times j}\\)\nThe result will have \\(i \\times j\\) dimensions\nOrder matters! \\(A \\times B \\neq B \\times A\\) even if both operations are conformable"
  },
  {
    "objectID": "r/04_sampling.html#before-we-start",
    "href": "r/04_sampling.html#before-we-start",
    "title": "Sampling and simulation",
    "section": "",
    "text": "What is %&gt;%?\nA clear environment = a clear mind!\nHow to create a chunk?\nHow to run a line of code?\n\n\nDownload script",
    "crumbs": [
      "Programming",
      "4. Sampling and simulation"
    ]
  },
  {
    "objectID": "r/04_sampling.html#random-sampling-from-distributions",
    "href": "r/04_sampling.html#random-sampling-from-distributions",
    "title": "Sampling and simulation",
    "section": "Random sampling from distributions",
    "text": "Random sampling from distributions\nGenerating data is a powerful skill used to model different situations, allowing for statistical inference. For example, based on distributions we can predict the probability of a specific value occurring.\n\nUniform distribution\nSimple things first. For example, you have a task of generating random number between 0 and 1. How would computer do it? Random number generation is a slightly counter intuitive process. Basically, computer is extracting numbers from a uniform distribution. Let’s try it out.\nRun this chunk a couple of times:\n\nrunif(10)\n\n [1] 0.88061036 0.13990718 0.69175141 0.13979542 0.46188173 0.55763305\n [7] 0.76615103 0.65960307 0.26947303 0.06477498\n\n\nIf you’d like to control the random generation process, you can use set.seed() function. Try this out:\n\nset.seed(123)\nrunif(10)\n\nset.seed(123)\nrunif(10)\n\n [1] 0.2875775 0.7883051 0.4089769 0.8830174 0.9404673 0.0455565 0.5281055\n [8] 0.8924190 0.5514350 0.4566147\n [1] 0.2875775 0.7883051 0.4089769 0.8830174 0.9404673 0.0455565 0.5281055\n [8] 0.8924190 0.5514350 0.4566147\n\n\nYou can adjust the boundaries however you would like to. Let’s simulate a million of observations.\n\nset.seed(123)\nuniform_data &lt;- runif(n = 1000000, min = -3, max = 3)\n\nNow, visualize what we got. It looks like a rectangle! In other words, every number is equally likely to appear. And that’s what the uniform distribution is.\n\nlibrary(tidyverse)\n\nggplot(data.frame(uniform_data), aes(x = uniform_data)) +\n  geom_histogram(binwidth = 0.25, boundary = 0, closed = \"right\") +\n  scale_x_continuous(breaks = seq(-5, 5, 1), limits = c(-5, 5))\n\n\n\n\n\n\n\n\nLet’s consider a less theoretical example. You’d like to assign a student for next week’s presentation.\n\nstudents_list &lt;- c(\"student_1\", \"student_2\", \"student_3\", \"student_4\", \"student_5\", \"student_6\")\n\nTo do this, you can use sample() function. You would like each student to appear with the same probability as any other student.\n\nsample(students_list, size = 1)\n\n[1] \"student_5\"\n\n\nHow fair is this random assignment? You can test it using R! To do this, we need to collect data. In our example, we can generate results easily. Take a look at how we modified sample(). replace = T argument puts the student back after they are drawn.\n\ndatabase &lt;- data.frame(\"student\" = sample(students_list, size = 10000, replace = T))\nhead(database)\n\n    student\n1 student_4\n2 student_4\n3 student_3\n4 student_2\n5 student_2\n6 student_4\n\n\nNow, check out the graph! Thus, without adjustment, sample() essentially follows a uniform distribution.\n\nggplot(database) +\n  geom_histogram(aes(x = student), stat = \"count\") \n\n\n\n\n\n\n\n\n\n\nNormal distribution (Continuous Data)\nHowever, most numbers that exist in the world tend to have higher probabilities around certain values—almost like gravity around a specific point. For instance, income in the United States is not uniformly distributed—a handful of people are really really rich, lots are very poor, and most are kind of clustered around an average.\nOne of such distributions is the “bell curve” - or normal distribution. Let’s generate a normal distribution data and visualize it.\n\nset.seed(1234)\nnormal_data &lt;- rnorm(1000)\n\nnormal_plot &lt;- ggplot(data.frame(normal_data), aes(x = normal_data)) +\n  geom_histogram(color = \"white\") \nnormal_plot\n\n\n\n\n\n\n\n\nNow, let’s calculate and plot the average of our data. It’s centered at 0! This is the first parameter of the normal distribution.\n\nnormal_plot + geom_vline(xintercept = mean(normal_data), color = \"red\")\n\n\n\n\n\n\n\n\nBut there is another parameter of the normal distribution which is the standard deviation (sd or \\(\\sigma\\)). In simple terms, it means the spread of data from the average. For example, let’s highlight +- 1 sd from the average. Generally, it covers 68% of observations.\n\nnormal_plot + \n  geom_vline(xintercept = mean(normal_data) + sd(normal_data), color = \"blue\") +\n  geom_vline(xintercept = mean(normal_data) - sd(normal_data), color = \"blue\") \n\n\n\n\n\n\n\n\nIn statistics we are often interested in finding a “location” of 95% of observations. It is roughly within +- 2 sd.\n\nnormal_plot + \n  geom_vline(xintercept = mean(normal_data) + 2*sd(normal_data), color = \"blue\") +\n  geom_vline(xintercept = mean(normal_data) - 2*sd(normal_data), color = \"blue\") \n\n\n\n\n\n\n\n\n\nProbability Density Function\nMathematicians - as usual - came up with formula to represent this kind of distribution abstractly. I don’t want to scare you, so we won’t consider the formula here. However, this formula allows us to draw the graph below. This is a generalized version of the normal distribution, it’s called Probability Density Function (PDF).\n\nggplot() +\n  stat_function(fun = dnorm) +\n  geom_vline(aes(xintercept = 1, color = \"1 SD\")) +\n  geom_vline(aes(xintercept = -1, color = \"1 SD\")) +\n  geom_vline(aes(xintercept = 2, color = \"2 SD\")) +\n  geom_vline(aes(xintercept = -2, color = \"2 SD\")) +\n  labs(title = \"Normal Distribution (mean = 0, sd = 1)\",\n       subtitle = \"Probability Density Function\",\n       color = \"\",\n       y = \"Probability\") +\n  scale_x_continuous(breaks = seq(-5, 5, by = 1), limits = c(-5, 5))\n\n\n\n\n\n\n\n\nUsing this, we can, say, calculate the probability of drawing “0” from a normal distribution with \\(\\mu = 0\\) and \\(\\sigma = 1\\)\n\ndnorm(0, mean = 0, sd = 1)\n\n[1] 0.3989423\n\n\nLet’s check it on our normal_data we generated previously. I suggest changing binwidth for straightforward calculation. Does it remind you the PDF?\nDo you remember what the binwidth argument does?\n\nnormal_plot +\n  geom_histogram(binwidth = 1) +\n  scale_x_continuous(breaks = seq(-5, 5, by = 1), limits = c(-5, 5))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\nThere are slightly less than 40% of observations fall into “0”. It matches our expectations! In other words, knowing the average and the standard deviation of the normal distribution, we can predict how many observations would be of given value.\n\n\nCumulative Distribution Function\nWhat if we are interested in how many observations would be 0 or less? For this option we might use Cumulative Distribution Function.\nAny guesses at this point? Take a look on the PDF!\nCumulative distribution function looks like this. This is kind of S shape.\n\nggplot() +\n  geom_function(fun = pnorm) +\n  xlim(-5,5) +\n  labs(title = \"Normal Distribution (mean = 0, sd = 1)\",\n       subtitle = \"Cumulative Distribution Function\",\n       y = \"Probability\") \n\n\n\n\n\n\n\n\nSlightly harder is to calculate more precise values. For example, how many observations would be 1 or less? 84%!\n\npnorm(1, mean = 0, sd = 1)\n\n[1] 0.8413447\n\n\nOn the graph, it would look like this:\n\nggplot(NULL, aes(c(-5,5))) +\n  geom_area(stat = \"function\", fun = dnorm,  xlim = c(-1.35, 5)) +\n  geom_area(stat = \"function\", fun = dnorm, fill=\"sky blue\", xlim = c(-5, 1)) +\n  labs(title = \"Normal Distribution (mean = 0, sd = 1)\",\n       x = \"\",\n       y = \"Probability\") +\n  scale_x_continuous(breaks = seq(-5, 5, by = 1), limits = c(-5, 5))\n\n\n\n\n\n\n\n\nConversely, to know how many observation would be 1 or more we can use a trick:\n\n1 - pnorm(1, mean = 0, sd = 1)\n\n[1] 0.1586553\n\n\n\n\n\nBinomial distribution (Discrete Data)\nOften you’ll want to generate a column that only has two values: yes/no, treated/untreated, before/after, big/small, red/blue, etc. You’ll also likely want to control the proportions (25% treated, 62% blue, etc.).\nFor instance, we can ask R to do the following twenty times: flip a fair coin one hundred times, and count the number of tails.\n\nrbinom(n = 20, size = 100, prob = 0.5)\n\n [1] 51 45 54 54 43 57 55 49 44 54 46 52 46 54 47 45 51 52 52 53\n\n\nWith prob = , we can implement unfair coins:\n\nrbinom(n = 20, size = 100, prob = 0.9)\n\n [1] 94 90 87 90 94 92 93 84 92 91 93 95 93 94 86 93 90 87 92 89\n\n\nFor instance, pretend you want to simulate an election. According to the latest polls, one candidate has an 80% chance of winning. You want to randomly choose a winner based on that chance. Here’s how to do that with sample()\n\nset.seed(1234)\ncandidates &lt;- c(\"Person 1\", \"Person 2\")\nfake_elections &lt;- data.frame(winner = sample(candidates,\n                                         size = 1000,\n                                         prob = c(0.8, 0.2),\n                                         replace = TRUE))\n\n\nggplot(fake_elections, aes(x = winner)) +\n  geom_histogram(stat = \"count\")\n\n\n\n\n\n\n\n\n\n\nOther distribution functions\nEach distribution can do more than generate random numbers (the prefix r). We can compute the cumulative probability by the function pbinom(), punif(), and pnorm(). Also the density – the value of the PDF – by dbinom(), dunif() and dnorm().",
    "crumbs": [
      "Programming",
      "4. Sampling and simulation"
    ]
  },
  {
    "objectID": "r/04_sampling.html#random-sampling-from-data",
    "href": "r/04_sampling.html#random-sampling-from-data",
    "title": "Sampling and simulation",
    "section": "Random Sampling from Data",
    "text": "Random Sampling from Data\nLet’s work with the real data a bit. Download results of World Happiness Report 2024 from the following URL. Load it to R!\n\nh_report &lt;- read.csv(\"data/happiness_report_2024.csv\")\n\nVisualize the happiness_score variable.\n\nggplot(h_report, aes(x = ...)) +\n  geom_histogram(color = \"white\", binwidth = 1) +\n  labs(title = \"Distribution of happiness_score variable\") \n\nNow, let’s sample 80 observations from the dataset. Basically, we are randomly extracting rows from the main dataset. Compare sample() and sample_n()\n\nset.seed(1234)\nh_report_sample &lt;- sample_n(h_report, size = 80)\n\nNow, compare the graphs of original data and of its sample.\n\nggplot(h_report_sample, aes(x = happiness_score)) +\n  geom_histogram(color = \"white\", binwidth = 1) +\n  labs(title = \"Distribution of Sample of happiness_score variable\")\n\n\n\n\n\n\n\n\nWe can check basic characteristics of those distributions. For example, their average. It’s pretty similar!\n\nmean(h_report_sample$happiness_score)\nmean(h_report$happiness_score)\n\n[1] 5.487167\n[1] 5.527572\n\n\nAlternatively, we can check standard deviation. They are quite similar too.\n\nsd(h_report_sample$happiness_score)\nsd(h_report$happiness_score)\n\n[1] 1.210437\n[1] 1.17069\n\n\nIf we assume that true average \\(\\mu\\) is equal to 5.53, then our estimate \\(\\hat{\\mu}\\) from the average of the data \\(\\bar{X}\\) would be 5.49. In other words, even with the limited access to data we were able to figure average and sd of the “real” distribution.\nNow, briefly. Let’s check how it matches with our theoretical assumptions of how the world works. We assume that the happiness scores are distributed normally. Thus, even with a limited sample knowledge (N=80) we can attempt to generalize on the whole population (N = 143). Let’s, say, calculate the probability that a given country would receive 6 on happiness score.\n\ndnorm(x = 6,\n      mean = mean(h_report_sample$happiness_score),\n      sd = sd(h_report_sample$happiness_score))\n\n[1] 0.3012936\n\n\nNow, let’s calculate the real data. To make things easier, we add a count of countries in each bin.\n\nggplot(h_report, aes(x = happiness_score)) +\n  geom_histogram(color = \"white\", binwidth = 1) +\n  stat_bin(binwidth = 1, geom = \"text\", aes(label = ..count..), vjust = -0.5)\n\n\n\n\n\n\n\n\nWe got \\(\\approx\\) 0.34, when we predicted 0.30. Sounds good with a limited access to data!\n\n49/143\n\n[1] 0.3426573\n\n\n\n\n\n\n\n\nExercise\n\n\n\nYou have access to diamonds dataset.\n\ndata(diamonds)\n\nWhat are the variables in this dataset?\nUsing ggplot(), draw a histogram of the variable depth. Diamond depth describes its proportions. The less, the better.\n\nggplot(diamonds, aes(x=...))+\n  geom_histogram() \n\nDoes it remind you of normal distribution?\n\nmean(diamonds$depth)\nsd(diamonds$depth)\n\n[1] 61.7494\n[1] 1.432621\n\n\nDraw a probability density function (dnorm()).\n\nggplot() +\n  stat_function(fun = ..., args = list(mean = mean(...), sd = sd(...))) +\n  xlim(40, 80)\n\nSample 1000 observations.\n\nset.seed(123)\ndiamonds_sample = sample_n(diamonds, size = 1000)\n\nCompare average and standard deviation. Are they comparable with the original data?\n\nmean(...)\nsd(...)\n\nIn your free time, feel free to experiment how few observations you need to get more or less reliable parameters of a normal distribution!\n\n\n\nBootstrapping\nTo get a better measure of \\(\\hat{\\mu}\\) we can apply bootstrapping. To put it simple, we are going to repeat sampling process several times, and each time we draw random sample from the dataset we record its average. First, we create a dataset which we’ll be using to store those averages.\n\nsample_averages &lt;- data.frame() # simply created empty dataset\n\nUsing loops, you can repeat actions several times. This is what programming is quite helpful in! Explore how a for loop below works.\n\nfor indicates the beginning of the loop\ni stands for the index of an iteration\nin 1:10 specifies the range of values from 1 to 10\n\n\nfor(i in 1:10){\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n[1] 6\n[1] 7\n[1] 8\n[1] 9\n[1] 10\n\n\nNow, iterate (i.e. repeat) sampling process!\n\nfor(i in 1:100){\n  temporary_sample &lt;- sample_n(h_report, size = 80)                   # sample 80 observations\n  temporary_sample_average &lt;- mean(temporary_sample$happiness_score)  # calculate the sample average \n  sample_averages &lt;- rbind(sample_averages, temporary_sample_average) # add the sample average to the df\n}\n\ncolnames(sample_averages) = \"average\"\nhead(sample_averages)\n\n   average\n1 5.444772\n2 5.782780\n3 5.351790\n4 5.519500\n5 5.477656\n6 5.479902\n\n\nTake a look on the average of the collected averages. Did it get closer to the real parameter?\n\nmean(sample_averages$average) \n\n[1] 5.531569\n\n\n\n\n\n\n\n\nExercise\n\n\n\nIn dataframe h_report, explore freedom variable. Check the descriptive statistics.\nDraw a histogram of this variable using ggplot. Indicate the average\n\nggplot(...) +\n  geom_histogram(aes(x = ...)) +\n  geom_vline(xintercept = mean(..., na.rm = T))\n\nCalculate the average.\n\nmean(..., na.rm = T)\n\nUsing bootstrapping, get the comparable average.\nFirst, create a dataframe to store the results of the averages.\n\nbootsrap_averages = ...\n\nFinish this for loop so it saves average of sampled data. Repeat the loop 10 times. Limit the size of sample_n to 50.\n\n...(i in 1:...){\n  temporary_sample &lt;- sample_n(h_report, size = ...)\n  temporary_sample_average &lt;- ...\n  bootsrap_averages &lt;- rbind(bootsrap_averages, temporary_sample_average)\n}\n\ncolnames(bootsrap_averages) = \"average\"\n\nCompare the average of h_report$freedom and bootsrap_averages$average. Are they different?\nRepeat the comparison, but change the number of iterations to 100. Did the result improve?",
    "crumbs": [
      "Programming",
      "4. Sampling and simulation"
    ]
  },
  {
    "objectID": "r/04_sampling.html#automation-and-custom-functions",
    "href": "r/04_sampling.html#automation-and-custom-functions",
    "title": "Sampling and simulation",
    "section": "Automation and Custom functions",
    "text": "Automation and Custom functions\nIt is a frequent issue that when you work with data you would want to perform same several actions with a given dataset. For example, you would want to calculate average for specific set of variables, and then store it in a different dataframe to describe those selected. In this case, custom functions are incredibly helpful.\nExplore the function below. It stores the averages for happiness_score, life_expectancy and freedom variables.\n\ncalculate_average &lt;- function(dataframe){\n  \n  average_happiness = mean(dataframe$happiness_score)\n  average_expectancy = mean(dataframe$life_expectancy, na.rm = T)\n  average_freedom = mean(dataframe$freedom, na.rm = T)\n  \n  average_output = data.frame(average_happiness, average_expectancy, average_freedom)\n  return(average_output) # This is what the function returns as a result\n}\n\nTry it out.\n\ncalculate_average(h_report)\n\n  average_happiness average_expectancy average_freedom\n1          5.527572           0.520843       0.6205882\n\n\nNow, we can easily calculate those averages anytime we sample from the dataset.\n\ncalculate_average(h_report_sample)\n\n  average_happiness average_expectancy average_freedom\n1          5.487167          0.5148118       0.6285374\n\n\n\n\n\n\n\n\nExercise\n\n\n\nCustom functions save a lot of time, especially if you have a non-trivial task. Write a function that would calculate median for happiness_score, life_expectancy and freedom variables in a given dataframe\n\ncalculate_median &lt;- function(...){\n  \n  ...\n  \n  median_output = data.frame(...)\n  return(median_output) # This is what the function returns as a result\n}\n\nAnd now try it out!\n\ncalculate_median(h_report)\n\nWrite a function that would automate calculation of average happiness in a selected group of countries from regions below.\n\npost_soviet_countries &lt;- c(\"Kazakhstan\", \"Uzbekistan\", \"Armenia\")\nlatin_america_countries &lt;- c(\"Venezuela\", \"Argentina\", \"Paraguay\")\n\nUse a draft below for your function.\n\naverage_happiness = ...(dataframe, countries_list){\n  \n  dataframe %&gt;% \n    filter(country_name %in% ...) %&gt;%\n    summarize(average = mean(...)) %&gt;%\n    ...()\n  \n}\n\naverage_happiness(h_report, post_soviet_countries)            # Note the difference in (i) countries list\naverage_happiness(h_report_sample, latin_america_countries)   # and (ii) in dataframes we use\n\n\n\n\nApply function\nSometimes it is easier to use apply family of functions. For example, we can easily calculate an average using apply() function for selected columns.\n\nh_report %&gt;%\n  select(happiness_score, log_gdp, social_support) %&gt;%\n  apply(2, mean, na.rm = TRUE)\n\nhappiness_score         log_gdp  social_support \n       5.527572        1.378779        1.134323 \n\n\nMoreover, we can calculate some statistics for observations (i.e., rows), not variables. For example, we can find the minimum value across all variables for a specific country. As you might notice, the second argument in apply() function refers to whether we want manipulate rows or columns, 1 or 2 respectively.\n\nh_report %&gt;%\n  filter(country_name == \"Azerbaijan\") %&gt;%\n  apply(1, min, na.rm = TRUE)\n\n[1] \"0.1115664\"\n\n\nHowever, most importantly, apply() function is compatible with custom functions. For example, you want to standardize the variable so it ranges between 0 to 1. You have the following function.\n\nstandartize = function(x){\n  (x - min(x, na.rm = T)) / (max(x, na.rm = T) - min(x, na.rm = T))\n}\n\nNow, you can apply it over a number of variables.\n\nh_report %&gt;%\n  select(social_support, freedom) %&gt;%\n  apply(2, standartize) %&gt;%\n  head()\n\n     social_support   freedom\n[1,]      0.9726830 0.9953240\n[2,]      0.9405118 0.9529831\n[3,]      1.0000000 0.9480820\n[4,]      0.9284272 0.9709709\n[5,]      0.9358299 0.7430091\n[6,]      0.9044380 0.8398647\n\n\n\n\nMap function\nIt’s quite often the case in programming that the same operation can be done in a multiple ways. Compare the map() function from tidyverse with apply() function. What is the difference?\n\nh_report %&gt;%\n  select(happiness_score, log_gdp, social_support) %&gt;% \n  map(mean, na.rm = T)\n\n$happiness_score\n[1] 5.527572\n\n$log_gdp\n[1] 1.378779\n\n$social_support\n[1] 1.134323\n\n\nNow, take a look on the following code below.\n\nh_report %&gt;%\n  select(happiness_score, log_gdp, social_support) %&gt;% \n  map_df(mean, na.rm = T)\n\n# A tibble: 1 × 3\n  happiness_score log_gdp social_support\n            &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;\n1            5.53    1.38           1.13\n\n\nFurthermore, it is compatible with custom functions, too.\n\nh_report %&gt;%\n  select(happiness_score, log_gdp, social_support) %&gt;% \n  map_df(standartize) %&gt;%\n  head()\n\n# A tibble: 6 × 3\n  happiness_score log_gdp social_support\n            &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;\n1           1       0.861          0.973\n2           0.974   0.891          0.941\n3           0.964   0.879          1    \n4           0.934   0.877          0.928\n5           0.934   0.842          0.936\n6           0.930   0.888          0.904\n\n\nGenerally, this is an extensive toolkit to learn. But to sum up, apply() functions are base to R, and map() is an addition from tidyverse. If you are coding in a tidy way, then I suggest sticking to the tidy functions.\nCompare apply() and map() to summarize_all() and summarize().\n\n\n\n\n\n\nExercise\n\n\n\nFinish a function that would calculate an average based on two columns, namely social_support, corruption.\n\naverage_of_two = function(dataset){\n  suppurt_average = mean(dataset$..., na.rm = T)\n  corruptuon_average = mean(..., na.rm = T)\n  \n  average = mean(c(...))\n  return(average)\n}\n\naverage_of_two(h_report)\n\nDo you remember mtcars data? Load it\n\ncars_information &lt;- mtcars\n\nNow, using apply() calculate average for each column.\nNow, using map() calculate median for each column.\nUsing the loop draft below to sample 10 cars from cars dataset 15 times. Each time, apply map_df() function to calculate the average mpg and wt, and store the result in the sample_statistics dataframe.\n\nsample_statistics = data.frame()\n\nfor(i in 1:...){\n  temporary_sample &lt;- sample_n(cars_information, size = ...)   \n  \n  temporary_sample_average &lt;- temporary_sample %&gt;% \n    select(...) %&gt;% \n    ...(mean)  \n  \n  sample_statistics &lt;- rbind(sample_statistics, ...) \n}\n\nsample_statistics",
    "crumbs": [
      "Programming",
      "4. Sampling and simulation"
    ]
  },
  {
    "objectID": "r/04_sampling.html#what-should-you-do-if-you-have-questions-about-programming",
    "href": "r/04_sampling.html#what-should-you-do-if-you-have-questions-about-programming",
    "title": "Sampling and simulation",
    "section": "What should you do if you have questions about programming",
    "text": "What should you do if you have questions about programming\n\nStack overflow\nYour peers\nThe team of this math camp",
    "crumbs": [
      "Programming",
      "4. Sampling and simulation"
    ]
  },
  {
    "objectID": "r/04_sampling.html#check-list",
    "href": "r/04_sampling.html#check-list",
    "title": "Sampling and simulation",
    "section": "Check List",
    "text": "Check List\n Standard deviation, PDF and CDF do not scare me\n I know what sampling is, and on top of this I can use bootstrapping\n I can understand custom functions and loops",
    "crumbs": [
      "Programming",
      "4. Sampling and simulation"
    ]
  },
  {
    "objectID": "r/04_sampling.html#what-did-we-learn-over-this-week-in-the-programming-part",
    "href": "r/04_sampling.html#what-did-we-learn-over-this-week-in-the-programming-part",
    "title": "Sampling and simulation",
    "section": "What did we learn over this week in the programming part?",
    "text": "What did we learn over this week in the programming part?\n\nWhat R, RStudio, Quarto and Markdown are\nCreating and working with objects, vectors and dataframes\nLogical Operators\nWhat Descriptive statistics is\nData wrangling, including mutate(), select(), filter(), summarize(), case_when(), etc.\nData Visualization. Now we know what histograms and scatterplots are\nWe can load data in R and work with it!",
    "crumbs": [
      "Programming",
      "4. Sampling and simulation"
    ]
  },
  {
    "objectID": "r/04_sampling.html#sources",
    "href": "r/04_sampling.html#sources",
    "title": "Sampling and simulation",
    "section": "Sources",
    "text": "Sources\n\nGeorgia State University, Andrew Young School of Policy Studies, Program Evaluation, https://evalsp24.classes.andrewheiss.com/\nUT Austin, Department of Government, Methods Camp, https://methodscamp.github.io/\nHarvard University Department of Government, Math Prefresher, https://iqss.github.io/prefresher/",
    "crumbs": [
      "Programming",
      "4. Sampling and simulation"
    ]
  },
  {
    "objectID": "slides/04_calc2.html#last-time",
    "href": "slides/04_calc2.html#last-time",
    "title": "Calculus II",
    "section": "Last time",
    "text": "Last time\nHow to compute a derivative?\n\nPlug in many values into \\(\\frac{rise}{run}\\)\nUse properties of limits\nSolve analytically\nSoftware"
  },
  {
    "objectID": "slides/04_calc2.html#last-time-1",
    "href": "slides/04_calc2.html#last-time-1",
    "title": "Calculus II",
    "section": "Last time",
    "text": "Last time\nHow to compute a derivative?\n\nPlug in many values into \\(\\frac{rise}{run}\\)\nUse properties of limits\nSolve analytically\nSoftware"
  },
  {
    "objectID": "slides/04_calc2.html#last-time-2",
    "href": "slides/04_calc2.html#last-time-2",
    "title": "Calculus II",
    "section": "Last time",
    "text": "Last time\nHow to compute a derivative?\n\nPlug in many values into \\(\\frac{rise}{run}\\)\nUse properties of limits\nSolve analytically\nSoftware\n\nThen integrals!"
  },
  {
    "objectID": "slides/04_calc2.html#but-first",
    "href": "slides/04_calc2.html#but-first",
    "title": "Calculus II",
    "section": "But first!",
    "text": "But first!\nHigher-order derivatives\n\n\n\\(f'(x)\\): First derivative\n\\(f''(x)\\): Second derivative\n\\(f'''(x)\\)?\n\n\n. . .\nIf we were driving a car:\n\n\\(f(x)\\) = distance traveled at time \\(x\\)\n\\(f'(x)\\) = speed at time \\(x\\)\n\\(f''(x)\\) = acceleration at time \\(x\\)\n\n. . .\nTo get \\(f''(x)\\) just take the derivative of the output of \\(f'(x)\\)"
  },
  {
    "objectID": "slides/04_calc2.html#partial-derivative",
    "href": "slides/04_calc2.html#partial-derivative",
    "title": "Calculus II",
    "section": "Partial derivative",
    "text": "Partial derivative\n\nWhat happens when we have more than one variable? \\(f(x,z)\\)\n\n\nPartial derivative\n\\[\n\\frac{\\partial}{\\partial_x}f(x,z) = \\frac{\\partial_y}{\\partial_x} = \\partial_x f\n\\]\n\n\nJust treat other variables as constants and calculate the derivative of the target variable (usually \\(x\\))"
  },
  {
    "objectID": "slides/04_calc2.html#example",
    "href": "slides/04_calc2.html#example",
    "title": "Calculus II",
    "section": "Example",
    "text": "Example\n\\[\n\\begin{aligned}\ny = f(x,z) &= xz \\\\\n\\frac{\\partial_y}{\\partial_x} &= z\n\\end{aligned}\n\\]\n\nLet’s try \\(\\displaystyle\\frac{\\partial (x^2y+xy^2-x)}{\\partial x}\\) and \\(\\displaystyle\\frac{\\partial (x^2y+xy^2-x)}{\\partial y}\\) together"
  },
  {
    "objectID": "slides/04_calc2.html#differentiability-of-functions",
    "href": "slides/04_calc2.html#differentiability-of-functions",
    "title": "Calculus II",
    "section": "Differentiability of functions",
    "text": "Differentiability of functions\n\n\nNot all functions are differentiable\nWe need continuous and reasonably smooth functions\nInformally: Can draw them without lifting the pen\nFormally: A function is continuous at a point \\(a\\) if: \\(\\lim_{x \\to a} f(x)=f(a)\\)\nDifferentiable \\(\\to\\) continuous\nContinuous \\(\\not\\to\\) differentiable"
  },
  {
    "objectID": "slides/04_calc2.html#how-to-compute-a-derivative-3",
    "href": "slides/04_calc2.html#how-to-compute-a-derivative-3",
    "title": "Calculus II",
    "section": "How to compute a derivative?",
    "text": "How to compute a derivative?\n\nPlug in many values into \\(\\frac{rise}{run}\\)\nUse properties of limits\nSolve analytically\nSoftware"
  },
  {
    "objectID": "slides/04_calc2.html#how-to-compute-a-derivative-4",
    "href": "slides/04_calc2.html#how-to-compute-a-derivative-4",
    "title": "Calculus II",
    "section": "How to compute a derivative?",
    "text": "How to compute a derivative?\n\nPlug in many values into \\(\\frac{rise}{run}\\)\nUse properties of limits\nSolve analytically\nSoftware"
  },
  {
    "objectID": "slides/04_calc2.html#using-computers",
    "href": "slides/04_calc2.html#using-computers",
    "title": "Calculus II",
    "section": "Using computers",
    "text": "Using computers\n\n\nSymbolic differentiation: Do the math for you (WolframAlpha or Mathematica)\nNumerical differentiation: Evaluate the function at many values (optim() in R)\nAutomatic differentiation: Break up functions into elementary operations and use chain rule (torch package in R, various packages in Python)"
  },
  {
    "objectID": "slides/04_calc2.html#optimization",
    "href": "slides/04_calc2.html#optimization",
    "title": "Calculus II",
    "section": "Optimization",
    "text": "Optimization\n\n\nFind minimum or maximum values\nValleys are minima\nPeaks are maxima\nBoth are extrema\nExtrama can be local or global"
  },
  {
    "objectID": "slides/04_calc2.html#first-order-condition",
    "href": "slides/04_calc2.html#first-order-condition",
    "title": "Calculus II",
    "section": "First order condition",
    "text": "First order condition\n\n\nMinimum: Derivative is negative before and positive after\nMaximum: Derivative is positive before and negative after\nExtrema are critical points\nFirst order condition helps us find them\n\n\n\n\\[FOC: f'(x)=0\\]"
  },
  {
    "objectID": "slides/04_calc2.html#second-order-condition",
    "href": "slides/04_calc2.html#second-order-condition",
    "title": "Calculus II",
    "section": "Second order condition",
    "text": "Second order condition\n\nFOC finds critical points, but can’t tell if minimum or maximum\n\n\nSecond derivative test\n\n\nStart by identifying \\(f''(x)\\)\nSubstitute in the stationary points \\((x^*)\\) identified from the FOC\n\\(f''(x^*) &gt; 0\\) we have a local minimum\n\\(f''(x^*) &lt; 0\\) we have a local maximum\n\\(f''(x^*) = 0\\) we (may) have an inflection point - need to calculate higher-order derivatives"
  },
  {
    "objectID": "slides/04_calc2.html#more-more-more-more-practice",
    "href": "slides/04_calc2.html#more-more-more-more-practice",
    "title": "Calculus II",
    "section": "More more more more practice",
    "text": "More more more more practice\nObtain FOC and SOC for \\(\\displaystyle y=\\frac{1}{2} x^3 + 3 x^2 - 2\\)"
  },
  {
    "objectID": "slides/04_calc2.html#local-vs.-global-extrema",
    "href": "slides/04_calc2.html#local-vs.-global-extrema",
    "title": "Calculus II",
    "section": "Local vs. global extrema",
    "text": "Local vs. global extrema\nExtreme value theorem:\n\n\nIf a real-valued function is continuous on a closed and bounded (finite) interval, the function must have a global minimum and a global maximum on that interval at least once\nEither at the boundaries or at one of the local extrema\nFind by comparing local min/max to the value of the function at the endpoints\nCould be limits as function approaches \\(-\\infty\\) and \\(+\\infty\\)"
  },
  {
    "objectID": "slides/04_calc2.html#practice-again",
    "href": "slides/04_calc2.html#practice-again",
    "title": "Calculus II",
    "section": "Practice again",
    "text": "Practice again\nIdentify the global extrema of the function \\(\\displaystyle \\frac{x^3}{3} - \\frac{3}{2}x^2 -10x\\) in the interval \\([-6, 6]\\)"
  },
  {
    "objectID": "slides/04_calc2.html#another-one",
    "href": "slides/04_calc2.html#another-one",
    "title": "Calculus II",
    "section": "Another one",
    "text": "Another one\nIdentify the global extrema of the function \\(\\displaystyle \\frac{x^3}{3} - \\frac{3}{2}x^2 -10x\\) in the interval \\([-6, 6]\\)"
  },
  {
    "objectID": "slides/04_calc2.html#last-time-3",
    "href": "slides/04_calc2.html#last-time-3",
    "title": "Calculus II",
    "section": "Last time",
    "text": "Last time\nHow to compute a derivative?\n\nPlug in many values into \\(\\frac{rise}{run}\\)\nUse properties of limits\nSolve analytically\nSoftware\n\nThen integrals!"
  },
  {
    "objectID": "slides/04_calc2.html#how-to-compute-a-derivative-5",
    "href": "slides/04_calc2.html#how-to-compute-a-derivative-5",
    "title": "Calculus II",
    "section": "How to compute a derivative?",
    "text": "How to compute a derivative?\n\nPlug in many values into \\(\\frac{rise}{run}\\)\nUse properties of limits\nSolve analytically\nSoftware"
  },
  {
    "objectID": "slides/04_calc2.html#higher-order-derivatives",
    "href": "slides/04_calc2.html#higher-order-derivatives",
    "title": "Calculus II",
    "section": "Higher-order derivatives",
    "text": "Higher-order derivatives\n\n\n\\(f'(x)\\): First derivative\n\\(f''(x)\\): Second derivative\n\\(f'''(x)\\)?\n\n\n\nIf we were driving a car:\n\n\\(f(x)\\) = distance traveled at time \\(x\\)\n\\(f'(x)\\) = speed at time \\(x\\)\n\\(f''(x)\\) = acceleration at time \\(x\\)\n\n\n\nTo get \\(f''(x)\\) just take the derivative of the output of \\(f'(x)\\)"
  },
  {
    "objectID": "slides/04_calc2.html#today",
    "href": "slides/04_calc2.html#today",
    "title": "Calculus II",
    "section": "Today",
    "text": "Today\n\nWrap up derivatives\nWhat makes derivatives useful?\nIntegrals"
  },
  {
    "objectID": "slides/04_calc2.html#how-to-compute-a-derivative-2",
    "href": "slides/04_calc2.html#how-to-compute-a-derivative-2",
    "title": "Calculus II",
    "section": "How to compute a derivative?",
    "text": "How to compute a derivative?\n\nPlug in many values into \\(\\frac{rise}{run}\\)\nUse properties of limits\nSolve analytically\nSoftware"
  },
  {
    "objectID": "slides/04_calc2.html#practice",
    "href": "slides/04_calc2.html#practice",
    "title": "Calculus II",
    "section": "Practice",
    "text": "Practice\nObtain FOC and SOC for \\(\\displaystyle y=\\frac{1}{2} x^3 + 3 x^2 - 2\\)"
  },
  {
    "objectID": "slides/04_calc2.html#integration",
    "href": "slides/04_calc2.html#integration",
    "title": "Calculus II",
    "section": "Integration",
    "text": "Integration\n\nInverse operation to the derivative\nDerivative: instantaneous change at a given point\nIntegrals: Net effect of change of a function at a range"
  },
  {
    "objectID": "slides/04_calc2.html#area-under-a-curve",
    "href": "slides/04_calc2.html#area-under-a-curve",
    "title": "Calculus II",
    "section": "Area under a curve",
    "text": "Area under a curve\n\nCalculate the area under\n\\[\nf(x) =\n\\begin{cases}\n\\frac{1}{3} & \\text{for } x \\in [0, 3] \\\\\n0 & \\text{otherwise}\n\\end{cases}\n\\]"
  },
  {
    "objectID": "slides/04_calc2.html#area-under-a-curve-1",
    "href": "slides/04_calc2.html#area-under-a-curve-1",
    "title": "Calculus II",
    "section": "Area under a curve",
    "text": "Area under a curve\n\\(y=x^2\\)"
  },
  {
    "objectID": "slides/04_calc2.html#area-under-a-curve-2",
    "href": "slides/04_calc2.html#area-under-a-curve-2",
    "title": "Calculus II",
    "section": "Area under a curve",
    "text": "Area under a curve\n\\(y=x^2\\)"
  },
  {
    "objectID": "slides/04_calc2.html#area-under-a-curve-3",
    "href": "slides/04_calc2.html#area-under-a-curve-3",
    "title": "Calculus II",
    "section": "Area under a curve",
    "text": "Area under a curve\n\\(y=x^2\\)"
  },
  {
    "objectID": "slides/04_calc2.html#a-more-complicated-example",
    "href": "slides/04_calc2.html#a-more-complicated-example",
    "title": "Calculus II",
    "section": "A more complicated example",
    "text": "A more complicated example\n\\(y=x^2\\)"
  },
  {
    "objectID": "slides/04_calc2.html#a-more-complicated-example-1",
    "href": "slides/04_calc2.html#a-more-complicated-example-1",
    "title": "Calculus II",
    "section": "A more complicated example",
    "text": "A more complicated example\n\\(y=x^2\\)"
  },
  {
    "objectID": "slides/04_calc2.html#a-more-complicated-example-2",
    "href": "slides/04_calc2.html#a-more-complicated-example-2",
    "title": "Calculus II",
    "section": "A more complicated example",
    "text": "A more complicated example\n\\(y=x^2\\)"
  },
  {
    "objectID": "slides/04_calc2.html#two-kinds-of-integrals",
    "href": "slides/04_calc2.html#two-kinds-of-integrals",
    "title": "Calculus II",
    "section": "Two kinds of integrals",
    "text": "Two kinds of integrals\n\nDefinite integral\nIndefinite integral"
  },
  {
    "objectID": "slides/04_calc2.html#indefinite-integral",
    "href": "slides/04_calc2.html#indefinite-integral",
    "title": "Calculus II",
    "section": "Indefinite integral",
    "text": "Indefinite integral\n\\[F(x)= \\displaystyle\\int f(x) \\text{ } dx\\]\n\n\n\\(\\int\\) is the anti-derivative with respect to \\(dx\\)\n\\(F(x)\\) is the inverse of \\(f'(x)\\)\n\n\n\n\\[\\displaystyle\\frac{dF(x)}{dx} = f(x)\\]\n\n\n\\[F' = f\\]"
  },
  {
    "objectID": "slides/04_calc2.html#toy-example",
    "href": "slides/04_calc2.html#toy-example",
    "title": "Calculus II",
    "section": "Toy example",
    "text": "Toy example\n\\[f(x) = 1\\]\n\n\\[F'(x) = 1\\]\n\n\n\\[F(x) = x\\]\n\n\n\\[F(x) = x + 10\\]\n\n\n\\[F(x) = x + 100\\]"
  },
  {
    "objectID": "slides/04_calc2.html#toy-example-1",
    "href": "slides/04_calc2.html#toy-example-1",
    "title": "Calculus II",
    "section": "Toy example",
    "text": "Toy example"
  },
  {
    "objectID": "slides/04_calc2.html#generalizing",
    "href": "slides/04_calc2.html#generalizing",
    "title": "Calculus II",
    "section": "Generalizing",
    "text": "Generalizing\n\n\nFor \\(f(x) = F'(x) = 1\\) we can write \\(F(x) = x + C\\)\n\\(C\\) is the constant of integration\nFinding the inverse of a derivative is called anti-differentiation"
  },
  {
    "objectID": "slides/04_calc2.html#definite-integrals",
    "href": "slides/04_calc2.html#definite-integrals",
    "title": "Calculus II",
    "section": "Definite integrals",
    "text": "Definite integrals"
  },
  {
    "objectID": "slides/04_calc2.html#definite-integral",
    "href": "slides/04_calc2.html#definite-integral",
    "title": "Calculus II",
    "section": "Definite integral",
    "text": "Definite integral\nIndefinite integral:\n\\[\\displaystyle\\int f(x)dx\\]\n\nDefinite integral:\n\\[\\displaystyle\\int_{a}^{b} f(x)dx\\]"
  },
  {
    "objectID": "slides/04_calc2.html#calculating-definite-integrals",
    "href": "slides/04_calc2.html#calculating-definite-integrals",
    "title": "Calculus II",
    "section": "Calculating definite integrals",
    "text": "Calculating definite integrals\n\nThe first FUNDAMENTAL THEOREM OF CALCULUS\n\\[\\displaystyle\\int_{a}^{b} f(x) \\text{ } dx = F(b)-F(a) = F(x)\\bigg|_{a}^{b}\\]\n\n\nDetermine \\(F(x)\\)\nSubstitute in \\(F(b)\\) and \\(F(a)\\)\nCalculate difference"
  },
  {
    "objectID": "slides/04_calc2.html#fundamental-theorem-of-calculus",
    "href": "slides/04_calc2.html#fundamental-theorem-of-calculus",
    "title": "Calculus II",
    "section": "FUNDAMENTAL THEOREM OF CALCULUS",
    "text": "FUNDAMENTAL THEOREM OF CALCULUS\n\\[\\displaystyle\\int_{a}^{b} f(x) \\text{ } dx = F(b)-F(a) = F(x)\\bigg|_{a}^{b}\\]\n\n\nDetermine \\(F(x)\\)\nSubstitute in \\(F(b)\\) and \\(F(a)\\)\nCalculate difference"
  },
  {
    "objectID": "slides/04_calc2.html#rules-of-integration",
    "href": "slides/04_calc2.html#rules-of-integration",
    "title": "Calculus II",
    "section": "Rules of integration",
    "text": "Rules of integration\nCoefficient rule: \\(\\displaystyle \\color{gray}\\int c f(x)\\, \\color{gray}{dx} \\color{gray}= c \\color{gray}\\int f(x)\\,\\color{gray}{dx}\\)\n\nSum/difference rule: \\(\\displaystyle\\color{gray}\\int (f(x) \\pm g(x))\\,\\color{gray}{dx} \\color{gray}= \\color{gray}\\int f(x)\\,\\color{gray}{dx} \\pm \\color{gray}\\int g(x)\\,\\color{gray}{dx}\\)\n\n\nConstant rule: \\(\\displaystyle\\color{gray}\\int c\\,\\color{gray}{dx} \\color{gray}= cx \\color{gray}{+ C}\\)\n\n\nPower rule: \\(\\displaystyle\\color{gray}\\int x^n\\,\\color{gray}{dx} \\color{gray}= \\frac{x^{n+1}}{n+1} \\color{gray}{+ C} \\qquad \\forall n \\neq -1\\)\n\n\nReciprocal rule:\\(\\displaystyle\\color{gray}\\int \\frac{1}{x}\\,\\color{gray}{dx} \\color{gray}= \\ln(x) \\color{gray}{+ C}\\)"
  },
  {
    "objectID": "slides/04_calc2.html#rules-of-integration-1",
    "href": "slides/04_calc2.html#rules-of-integration-1",
    "title": "Calculus II",
    "section": "Rules of integration",
    "text": "Rules of integration\nExponent and logarithm rules:\n\\[\n\\begin{aligned}\n\\displaystyle \\color{gray}\\int e^x \\,\\color{gray}{dx} &\\color{gray}= e^x\\color{gray}{+C} \\\\\n\\displaystyle \\color{gray}\\int c^x \\,\\color{gray}{dx} &\\color{gray}= \\frac{c^x}{ln(c)}\\color{gray}{+C}\n\\end{aligned}\n\\]\n\n\\[\n\\begin{aligned}\n\\displaystyle \\color{gray}\\int ln(x) \\,\\color{gray}{dx} &\\color{gray}= x \\cdot ln(x) - x\\color{gray}{+C} \\\\\n\\displaystyle \\color{gray}\\int log_c(x) \\,\\color{gray}{dx} &\\color{gray}= \\frac{x \\cdot log_c(x) - x}{log_c(x)}\\color{gray}{+C}\n\\end{aligned}\n\\]"
  },
  {
    "objectID": "slides/04_calc2.html#integration-by-parts",
    "href": "slides/04_calc2.html#integration-by-parts",
    "title": "Calculus II",
    "section": "Integration by parts",
    "text": "Integration by parts\n\n\\[\n\\displaystyle \\color{gray}\\int f(x)g'(x)\\,\\color{gray}{dx} = f(x)g(x) - \\color{gray}\\int f'(x)g(x)\\,\\color{gray}{dx}\n\\]\n\n\\[\n\\int u dv = uv - \\int vdu\n\\]\n\n\nAnalog to the product rule."
  },
  {
    "objectID": "slides/04_calc2.html#integration-by-substitution",
    "href": "slides/04_calc2.html#integration-by-substitution",
    "title": "Calculus II",
    "section": "Integration by substitution",
    "text": "Integration by substitution\n\n\nHave \\(\\displaystyle \\int f(g(x))g'(x)\\,dx\\)\nSet \\(u=g(x)\\)\nCompute \\(\\int f(u)\\,du\\)\nReplace \\(u\\) for \\(g(x)\\)\n\n\n\n\nAnalog to the chain rule."
  },
  {
    "objectID": "slides/04_calc2.html#dont-worry",
    "href": "slides/04_calc2.html#dont-worry",
    "title": "Calculus II",
    "section": "Don’t worry!",
    "text": "Don’t worry!\nWe are not going to practice hard rules by hand"
  },
  {
    "objectID": "slides/04_calc2.html#practice-1",
    "href": "slides/04_calc2.html#practice-1",
    "title": "Calculus II",
    "section": "Practice",
    "text": "Practice\nSolve the following definite integrals\n\n\\(\\displaystyle\\int_{1}^{7} x^2 \\text{ } dx\\)\n\\(\\displaystyle\\int_{1}^{10} 3x^2 \\text{ } dx\\)\n\\(\\displaystyle\\int_7^7 x\\text{ } dx\\)\n\\(\\displaystyle\\int_{1}^{5} 3x^2 + 2x - 7\\text{ }dx\\)"
  },
  {
    "objectID": "slides/04_calc2.html#example-1",
    "href": "slides/04_calc2.html#example-1",
    "title": "Calculus II",
    "section": "Example",
    "text": "Example\n\\[ \\int x e^x dx\\]\n\n\\[ \\int udv = uv - \\int vdu \\]\n\n\n\\[\n\\color{purple}{u = x}; \\text{ } \\color{green}{du = 1dx}; \\text{ } \\color{yellow}{dv = e^xdx} ;  \\text{ } \\color{blue}{v = e^x}\n\\]\n\n\n\\[\n\\int \\color{purple}x \\color{yellow}{e^xdx}= \\color{purple}x \\color{blue}{e^x} - \\int \\color{blue}{e^x} \\color{green}{(1dx)}\n\\]\n\n\n\\[\n= xe^x - e^x + C\n\\]"
  },
  {
    "objectID": "slides/04_calc2.html#integration-by-parts-1",
    "href": "slides/04_calc2.html#integration-by-parts-1",
    "title": "Calculus II",
    "section": "Integration by parts",
    "text": "Integration by parts\n\n\\[\n\\displaystyle \\color{gray}\\int f(x)g'(x)\\,\\color{gray}{dx} = f(x)g(x) - \\color{gray}\\int f'(x)g(x)\\,\\color{gray}{dx}\n\\]\n\\[\n\\int u dv = \\underbrace{uv - \\int vdu}_\\text{\"ultraviolet voodoo\"}\n\\]\n\nAnalog to the product rule."
  },
  {
    "objectID": "slides/04_calc2.html#integration-by-u-substitution",
    "href": "slides/04_calc2.html#integration-by-u-substitution",
    "title": "Calculus II",
    "section": "Integration by (U-)substitution",
    "text": "Integration by (U-)substitution\n\n\nHave \\(\\displaystyle \\int f(g(x))g'(x)\\,dx\\)\nSet \\(u=g(x)\\)\nCompute \\(\\int f(u)\\,du\\)\nReplace \\(u\\) for \\(g(x)\\)\n\n\n\n\nAnalog to the chain rule."
  },
  {
    "objectID": "slides/04_calc2.html#example-2",
    "href": "slides/04_calc2.html#example-2",
    "title": "Calculus II",
    "section": "Example",
    "text": "Example\n\\[\n\\int 4x (x^2 + 5)^3 dx\n\\]\n\n\\[\n\\color{purple}{u = x2 + 5}\n\\]\n\n\n\\[\n\\text{} \\color{green}{du = 2x dx}\n\\]"
  },
  {
    "objectID": "slides/04_calc2.html#example-3",
    "href": "slides/04_calc2.html#example-3",
    "title": "Calculus II",
    "section": "Example",
    "text": "Example\n\\[\n\\int 4x (x^2 + 5)^3 dx\n\\]\n\\[\n\\color{purple}{u = x2 + 5}\n\\]\n\\[\n\\text{} \\color{green}{du = 2x dx \\Rightarrow \\frac{du}{2x} = \\frac{2xdx}{2x}}  \n\\]"
  },
  {
    "objectID": "slides/04_calc2.html#example-4",
    "href": "slides/04_calc2.html#example-4",
    "title": "Calculus II",
    "section": "Example",
    "text": "Example\n\\[\n\\int 4x (x^2 + 5)^3 dx\n\\]\n\\[\n\\color{purple}{u = x2 + 5}\n\\]\n\\[\n\\text{} \\color{green}{du = 2x dx \\Rightarrow \\frac{du}{2x} = \\frac{2xdx}{2x} \\Rightarrow \\frac{du}{2x} = dx}  \n\\]"
  },
  {
    "objectID": "slides/04_calc2.html#replacing",
    "href": "slides/04_calc2.html#replacing",
    "title": "Calculus II",
    "section": "Replacing",
    "text": "Replacing\n\\[\n\\int 4x \\color{purple}{(x^2 + 5)}^3 \\color{green}{dx}\n\\]\n\n\\[\n\\int 4x \\color{purple}u^3 \\color{green}{\\frac{du}{2x}}\n\\]\n\n\n\\[\n= 2 \\int \\color{purple}{u}^3 \\color{green}{du}\n\\]\n\n\n\\[\n= 2 \\cdot \\frac{\\color{purple}u}{4}^4 + C\n\\]"
  },
  {
    "objectID": "slides/04_calc2.html#bring-back-u",
    "href": "slides/04_calc2.html#bring-back-u",
    "title": "Calculus II",
    "section": "Bring back \\(u\\)",
    "text": "Bring back \\(u\\)\n\\[\n= \\frac{1}{2} \\color{purple}u^4 + C\n\\]\n\n\\[\n\\frac{1}{2} \\color{purple{(x2 + 5)}^4 + C\n\\]"
  },
  {
    "objectID": "slides/04_calc2.html#clean-up-and-bring-back-u",
    "href": "slides/04_calc2.html#clean-up-and-bring-back-u",
    "title": "Calculus II",
    "section": "Clean up and bring back \\(u\\)",
    "text": "Clean up and bring back \\(u\\)\n\\[\n= 2 \\cdot \\frac{\\color{purple}u}{4}^4 + C\n\\]\n\n\\[\n= \\frac{1}{2} \\color{purple}u^4 + C\n\\]\n\n\n\\[\n\\frac{1}{2} \\color{purple}{(x2 + 5)}^4 + C\n\\]"
  }
]