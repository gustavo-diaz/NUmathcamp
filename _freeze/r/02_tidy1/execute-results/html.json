{
  "hash": "e2ecf90eaa4b7092acb4ac5ef4d1b81c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tidyverse I\"\nauthor: \"Aven Peters\"\nformat: html\nembed-resources: true\n---\n\n\n## Tidyverse I: Data Wrangling\n\n### Installing and Loading Packages\n\nR is powerful in part because it is very flexible. Most data analysis tasks can be done several different ways in R, depending on your preferences and the characteristics of your data set. This flexibility comes from the ability to load **packages** with additional functions. Today, we'll be talking about \"tidyverse,\" a suite of packages used for data wrangling and visualization. We can think of tidyverse as a \"mega-package\" that contains several smaller packages, including \"dplyr\" and \"ggplot2.\" Usually, it makes sense to load the entire tidyverse at once so that we don't have to worry about which functions belong to each specific package within tidyverse.\n\nIf you don't have tidyverse installed, we'll have to do that first.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"tidyverse\") # to run this code, remove the # at the beginning\n```\n:::\n\n\nThis line of code only needs to be run once on your device. After you've installed tidyverse, it lives on your machine forever.\n\nOnce a package is installed, we have to tell R that we want to use it in this specific R script/Quarto document. This is called loading the package, and we usually do it with the \"library\" function. Some packages come preloaded in every R session--these are called \"base R.\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n\nNote that we don't need quotation marks around the name of the package in the library function, even though we do need them in install.packages. Minor formatting choices like this matter a lot in R.\n\nWhen we load tidyverse, we get the above output. This tells us the names of all of the packages within tidyverse that we've loaded. It also warns us that two functions in dplyr have the same names as functions in stats, which is part of base R. This is not a problem for us. By default, if two functions in different packages have the same name, the one that was loaded most recently will be used.\n\nNow that we've loaded tidyverse, let's work with some data.\n\n### Load and Examine Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(USJudgeRatings) # load built-in data set\n\nhead(USJudgeRatings) # view the first 6 rows of data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               CONT INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nAARONSON,L.H.   5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1  7.0  8.3  7.8\nALEXANDER,J.M.  6.8  8.9  8.8  8.5  7.8  8.1  8.0  8.0  7.8  7.9  8.5  8.7\nARMENTANO,A.J.  7.2  8.1  7.8  7.8  7.5  7.6  7.5  7.5  7.3  7.4  7.9  7.8\nBERDON,R.I.     6.8  8.8  8.5  8.8  8.3  8.5  8.7  8.7  8.4  8.5  8.8  8.7\nBRACKEN,J.J.    7.3  6.4  4.3  6.5  6.0  6.2  5.7  5.7  5.1  5.3  5.5  4.8\nBURNS,E.B.      6.2  8.8  8.7  8.5  7.9  8.0  8.1  8.0  8.0  8.0  8.6  8.6\n```\n\n\n:::\n\n```{.r .cell-code}\nview(USJudgeRatings) # view the full dataframe in a new window\n\n?USJudgeRatings # view the documentation for this data set\n```\n:::\n\n\nEach row corresponds to one of 43 state judges in Connecticut in 1977. The columns indicate the average rating of each judge by a group of lawyers. Note that the column names are short and are not particularly intuitive. Later, we'll rename the columns to be clearer.\n\nThis data set is an example of **tidy data,** a format that makes data easier to work with. In tidy data, each row corresponds to an observation (a country, a survey respondent, a year, or any other unit of observation). Each column corresponds to a variable that was measured, and each cell is one measurement. Tidy data sets can have all kinds of different variables--strings, Boolean values (TRUE/FALSE), integers, and even missing values. In this case, all of our variables happen to have the type \"double,\" which refers to a rational number.\n\nWhile tidy data are convenient to work with, other ways of organizing data exist. If you find a data set with another organization structure, you will have to do some work to get it into a more usable format.\n\n### Data Wrangling\n\nThe full name of the data set is a bit clunky. Let's create a copy with a simpler name. While we're at it, we can work on renaming the variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\njudges <- USJudgeRatings # create a copy of USJudgeRatings with the name judges\n\njudges_renamed <- judges %>% # load the dataframe judges\n  rename(contacts = CONT) # rename the variable currently called \"CONT\" to \"contacts\"\n```\n:::\n\n\nThe \"rename\" function is an example of a dplyr \"verb.\" Verbs are actions we apply to dataframes.\n\nNotice the symbol %\\>% after the name of the dataframe. This is called a \"pipe,\" and you may also seen it written \\|\\>. Pipes take some time to get used to, but they make R code a lot more readable. Essentially, the object before the pipe (usually a dataframe) is treated as the first argument of the function that comes after it. The following line of code is equivalent to the one shown above:\n\n\n::: {.cell}\n\n```{.r .cell-code}\njudges_renamed <- rename(judges, contacts = CONT)\n```\n:::\n\n\n::: {.callout-tip}\n#### Exercise\n\nRename the rest of the variables to more sensible names. In general, good variable names are in lowercase and do not have spaces or special characters. If you need to use two or more words, separate them with an underscore rather than a space. Variable names should succinctly communicate what the variable measures.\n:::\n\nOther dplyr verbs include the following:\n\n-   arrange: sort dataframe by the values of one or more variables\n\n-   filter: keep only the rows that meet a particular condition (e.g., contacts \\> 7)\n\n-   select: keep only the listed columns\n\n-   mutate: add a variable which is a function of other variables in the dataframe\n\n-   summarise (or summarize--both spellings are equivalent): create a simple summary table\n\nIt's possible to do several verbs at once using pipes. For example, the following code filters out some rows of data and then computes the mean integrity and diligence scores for just those rows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\njudges_renamed %>%\n  filter(contacts > 7) %>% # keep the rows for which contacts > 7 and remove the rest\n  summarise(integrity = mean(INTG), # compute the mean of the integrity score\n            diligence = mean(DILG)) # compute the mean of the diligence score\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  integrity diligence\n1  8.011111  7.766667\n```\n\n\n:::\n:::\n\n\nIf we want a summary of all of the variables in the data set, we can use \"summarise_all.\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\njudges_renamed %>%\n  summarise_all(mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  contacts    INTG     DMNR     DILG    CFMG     DECI     PREP     FAMI\n1 7.437209 8.02093 7.516279 7.693023 7.47907 7.565116 7.467442 7.488372\n      ORAL     WRIT     PHYS     RTEN\n1 7.293023 7.383721 7.934884 7.602326\n```\n\n\n:::\n:::\n\n\n:::{.callout-tip}\n#### Exercise\nLast time, we learned several functions that can be used to summarize data, including mean, median, min, and max. Try summarizing using a function other than mean.\n:::\n\nLet's practice using a few more dplyr verbs:\n\n\n::: {.cell}\n\n```{.r .cell-code}\njudges_revised <- judges_renamed %>%\n  select(contacts, INTG, DMNR, DILG, RTEN) %>% # select five columns\n  mutate(high_integrity = if_else(INTG > 8, 1, 0)) # create a variable called\n  # \"high_integrity\" and give it the value 1 if integrity is above 8 and 0 otherwise\n\njudges_revised %>%\n  group_by(high_integrity) %>% # separate the following summary into two rows based\n  # on whether the integrity score is higher than 8.\n  summarise_all(mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 6\n  high_integrity contacts  INTG  DMNR  DILG  RTEN\n           <dbl>    <dbl> <dbl> <dbl> <dbl> <dbl>\n1              0     7.58  7.36  6.55  7.03  6.73\n2              1     7.32  8.55  8.28  8.22  8.30\n```\n\n\n:::\n:::\n\n\nThe most straightforward way to use \"select\" is to simply list the names of the columns we want to keep. However, for data sets with many variables, this could be cumbersome. Here are some alternatives:\n\n- Select all but PHYS\n\n\n::: {.cell}\n\n```{.r .cell-code}\njudges_nophys <- judges_renamed %>%\n  select(-PHYS) # the minus sign tells R to exclude PHYS and keep everything else\n```\n:::\n\n\n- Select a range of columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\njudges_firsthalf <- judges_renamed %>%\n  select(contacts:DECI) # keep columns in the specified range\n```\n:::\n\n\n- Make a list of column names and keep all the columns in the list\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkeep <- c(\"contacts\", \"INTG\", \"CFMG\", \"WRIT\")\n\njudges_list <- judges_renamed %>%\n  select(all_of(keep))\n```\n:::\n\n\n:::{.callout-tip}\n#### Exercise\nAdd another variable to the data frame using mutate. You might consider adding two existing variables together or making another variable with if_else. For an extra challenge, think about how you might compute a weighted average of one of the variables, with the weights determined by the \"contacts\" variable.\n:::\n\nFinally, let's learn about the arrange function together using the documentation. Our goal is to sort by retention score.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?arrange # pull up documentation\n\njudges_renamed %>%\n  arrange(RTEN) # default is ascending\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                contacts INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nBRACKEN,J.J.         7.3  6.4  4.3  6.5  6.0  6.2  5.7  5.7  5.1  5.3  5.5  4.8\nCOHEN,S.S.           7.0  5.9  4.9  5.1  5.4  5.9  4.8  5.1  4.7  4.9  6.8  5.0\nMIGNONE,A.F.         6.6  7.4  6.2  6.2  5.4  5.7  5.8  5.9  5.2  5.8  4.7  5.2\nSIDOR,W.J.           7.7  6.2  5.1  5.6  5.6  5.9  5.6  5.6  5.3  5.5  6.3  5.3\nLEVISTER,R.L.        9.6  6.9  5.7  6.6  6.9  6.6  6.2  6.0  5.8  5.8  7.2  6.0\nGRILLO,A.E.          7.0  7.5  6.4  6.8  6.5  7.0  6.6  6.8  6.3  6.6  6.2  6.5\nMCGRATH,J.F.         7.6  7.3  6.9  6.8  6.7  6.8  6.4  6.3  6.3  6.3  7.4  6.6\nWALL,R.A.            9.0  7.0  5.9  7.0  7.0  7.2  6.9  6.9  6.5  6.6  7.6  6.6\nHEALEY.A.H.          8.0  7.6  6.6  7.2  6.5  6.5  6.8  6.7  6.4  6.5  6.9  6.7\nTESTO,R.J.           8.3  7.3  7.0  6.8  7.0  7.1  6.7  6.7  6.7  6.7  8.0  7.0\nZARRILLI,K.J.        8.6  7.4  7.0  7.5  7.5  7.7  7.4  7.2  6.9  7.0  7.8  7.1\nDEVITA,H.J.          6.5  8.0  7.6  7.2  7.0  7.1  6.9  7.0  7.0  7.1  6.9  7.2\nMARTIN,L.F.          7.1  8.2  7.7  7.1  6.6  6.6  6.7  6.7  6.8  6.8  7.5  7.3\nHULL,T.C.            7.7  7.7  6.7  7.5  7.4  7.5  7.1  7.3  7.1  7.3  8.1  7.4\nSADEN.G.A.           6.6  7.4  6.9  8.4  8.0  7.9  8.2  8.4  7.7  7.9  8.4  7.5\nHAMILL,E.C.          7.3  8.0  7.4  7.7  7.3  7.3  7.3  7.2  7.1  7.2  8.0  7.6\nMISSAL,H.M.          6.2  8.3  8.1  7.7  7.4  7.3  7.3  7.3  7.2  7.3  7.8  7.6\nDEAN,H.H.            7.0  8.0  7.6  7.4  7.3  7.5  7.1  7.2  7.1  7.2  8.4  7.7\nDRISCOLL,P.J.        6.7  8.6  8.2  6.8  6.9  6.6  7.1  7.3  7.2  7.2  8.1  7.7\nSTAPLETON,J.F.       6.5  8.2  7.7  7.8  7.6  7.7  7.7  7.7  7.5  7.6  8.5  7.7\nAARONSON,L.H.        5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1  7.0  8.3  7.8\nARMENTANO,A.J.       7.2  8.1  7.8  7.8  7.5  7.6  7.5  7.5  7.3  7.4  7.9  7.8\nDANNEHY,J.F.         8.2  7.9  6.7  8.1  7.9  8.0  7.9  8.1  7.7  7.8  8.5  7.9\nSATANIELLO,A.G.      8.4  8.0  7.9  7.9  7.8  7.8  7.6  7.4  7.4  7.4  8.1  7.9\nTIERNEY,W.L.JR.      8.3  8.2  7.8  8.3  8.4  8.3  7.7  7.6  7.5  7.7  8.1  7.9\nHADDEN,W.L.JR.       6.5  8.1  8.0  8.0  7.9  8.0  7.9  7.8  7.8  7.8  8.4  8.0\nLEVINE,I.            8.3  8.2  7.4  7.8  7.7  7.7  7.7  7.8  7.5  7.6  8.0  8.0\nSPONZO,M.J.          6.9  8.3  8.0  8.1  7.9  7.9  7.9  7.7  7.6  7.7  8.1  8.0\nPASKEY,L.            7.5  8.1  7.7  8.2  8.0  8.1  8.2  8.4  8.0  8.1  8.4  8.1\nWRIGHT,D.B.          7.1  8.4  8.4  7.7  7.5  7.7  7.8  8.2  8.0  8.1  8.3  8.1\nO'BRIEN,F.J.         7.1  8.5  8.3  8.0  7.9  7.9  7.8  7.8  7.8  7.7  8.3  8.2\nSPEZIALE,J.A.        8.5  8.3  8.1  8.3  8.4  8.2  8.2  8.1  7.9  8.0  8.0  8.2\nSHEA,D.M.            6.9  8.5  7.8  8.5  8.1  8.2  8.4  8.5  8.1  8.3  8.7  8.3\nBURNS,E.B.           6.2  8.8  8.7  8.5  7.9  8.0  8.1  8.0  8.0  8.0  8.6  8.6\nALEXANDER,J.M.       6.8  8.9  8.8  8.5  7.8  8.1  8.0  8.0  7.8  7.9  8.5  8.7\nBERDON,R.I.          6.8  8.8  8.5  8.8  8.3  8.5  8.7  8.7  8.4  8.5  8.8  8.7\nMULVEY,H.M.          7.5  8.7  8.5  8.6  8.5  8.4  8.5  8.5  8.4  8.4  8.7  8.7\nO'SULLIVAN,T.J.      7.5  9.0  8.9  8.7  8.4  8.5  8.4  8.3  8.3  8.3  8.8  8.7\nDALY,J.J.            7.3  8.9  8.9  8.7  8.6  8.5  8.4  8.4  8.4  8.5  8.8  8.8\nSHEA,J.F.JR.         7.3  8.9  8.8  8.7  8.4  8.5  8.5  8.5  8.4  8.4  8.8  8.8\nCALLAHAN,R.J.       10.6  9.0  8.9  8.7  8.5  8.5  8.5  8.5  8.6  8.4  9.1  9.0\nNARUK,H.J.           7.8  8.9  8.7  8.9  8.7  8.8  8.9  9.0  8.8  8.9  9.0  9.0\nRUBINOW,J.E.         7.1  9.2  9.0  9.0  8.4  8.6  9.1  9.1  8.9  9.0  8.9  9.2\n```\n\n\n:::\n\n```{.r .cell-code}\njudges_renamed %>%\n  arrange(desc(RTEN)) # specify that we want a descending sort\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                contacts INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nRUBINOW,J.E.         7.1  9.2  9.0  9.0  8.4  8.6  9.1  9.1  8.9  9.0  8.9  9.2\nCALLAHAN,R.J.       10.6  9.0  8.9  8.7  8.5  8.5  8.5  8.5  8.6  8.4  9.1  9.0\nNARUK,H.J.           7.8  8.9  8.7  8.9  8.7  8.8  8.9  9.0  8.8  8.9  9.0  9.0\nDALY,J.J.            7.3  8.9  8.9  8.7  8.6  8.5  8.4  8.4  8.4  8.5  8.8  8.8\nSHEA,J.F.JR.         7.3  8.9  8.8  8.7  8.4  8.5  8.5  8.5  8.4  8.4  8.8  8.8\nALEXANDER,J.M.       6.8  8.9  8.8  8.5  7.8  8.1  8.0  8.0  7.8  7.9  8.5  8.7\nBERDON,R.I.          6.8  8.8  8.5  8.8  8.3  8.5  8.7  8.7  8.4  8.5  8.8  8.7\nMULVEY,H.M.          7.5  8.7  8.5  8.6  8.5  8.4  8.5  8.5  8.4  8.4  8.7  8.7\nO'SULLIVAN,T.J.      7.5  9.0  8.9  8.7  8.4  8.5  8.4  8.3  8.3  8.3  8.8  8.7\nBURNS,E.B.           6.2  8.8  8.7  8.5  7.9  8.0  8.1  8.0  8.0  8.0  8.6  8.6\nSHEA,D.M.            6.9  8.5  7.8  8.5  8.1  8.2  8.4  8.5  8.1  8.3  8.7  8.3\nO'BRIEN,F.J.         7.1  8.5  8.3  8.0  7.9  7.9  7.8  7.8  7.8  7.7  8.3  8.2\nSPEZIALE,J.A.        8.5  8.3  8.1  8.3  8.4  8.2  8.2  8.1  7.9  8.0  8.0  8.2\nPASKEY,L.            7.5  8.1  7.7  8.2  8.0  8.1  8.2  8.4  8.0  8.1  8.4  8.1\nWRIGHT,D.B.          7.1  8.4  8.4  7.7  7.5  7.7  7.8  8.2  8.0  8.1  8.3  8.1\nHADDEN,W.L.JR.       6.5  8.1  8.0  8.0  7.9  8.0  7.9  7.8  7.8  7.8  8.4  8.0\nLEVINE,I.            8.3  8.2  7.4  7.8  7.7  7.7  7.7  7.8  7.5  7.6  8.0  8.0\nSPONZO,M.J.          6.9  8.3  8.0  8.1  7.9  7.9  7.9  7.7  7.6  7.7  8.1  8.0\nDANNEHY,J.F.         8.2  7.9  6.7  8.1  7.9  8.0  7.9  8.1  7.7  7.8  8.5  7.9\nSATANIELLO,A.G.      8.4  8.0  7.9  7.9  7.8  7.8  7.6  7.4  7.4  7.4  8.1  7.9\nTIERNEY,W.L.JR.      8.3  8.2  7.8  8.3  8.4  8.3  7.7  7.6  7.5  7.7  8.1  7.9\nAARONSON,L.H.        5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1  7.0  8.3  7.8\nARMENTANO,A.J.       7.2  8.1  7.8  7.8  7.5  7.6  7.5  7.5  7.3  7.4  7.9  7.8\nDEAN,H.H.            7.0  8.0  7.6  7.4  7.3  7.5  7.1  7.2  7.1  7.2  8.4  7.7\nDRISCOLL,P.J.        6.7  8.6  8.2  6.8  6.9  6.6  7.1  7.3  7.2  7.2  8.1  7.7\nSTAPLETON,J.F.       6.5  8.2  7.7  7.8  7.6  7.7  7.7  7.7  7.5  7.6  8.5  7.7\nHAMILL,E.C.          7.3  8.0  7.4  7.7  7.3  7.3  7.3  7.2  7.1  7.2  8.0  7.6\nMISSAL,H.M.          6.2  8.3  8.1  7.7  7.4  7.3  7.3  7.3  7.2  7.3  7.8  7.6\nSADEN.G.A.           6.6  7.4  6.9  8.4  8.0  7.9  8.2  8.4  7.7  7.9  8.4  7.5\nHULL,T.C.            7.7  7.7  6.7  7.5  7.4  7.5  7.1  7.3  7.1  7.3  8.1  7.4\nMARTIN,L.F.          7.1  8.2  7.7  7.1  6.6  6.6  6.7  6.7  6.8  6.8  7.5  7.3\nDEVITA,H.J.          6.5  8.0  7.6  7.2  7.0  7.1  6.9  7.0  7.0  7.1  6.9  7.2\nZARRILLI,K.J.        8.6  7.4  7.0  7.5  7.5  7.7  7.4  7.2  6.9  7.0  7.8  7.1\nTESTO,R.J.           8.3  7.3  7.0  6.8  7.0  7.1  6.7  6.7  6.7  6.7  8.0  7.0\nHEALEY.A.H.          8.0  7.6  6.6  7.2  6.5  6.5  6.8  6.7  6.4  6.5  6.9  6.7\nMCGRATH,J.F.         7.6  7.3  6.9  6.8  6.7  6.8  6.4  6.3  6.3  6.3  7.4  6.6\nWALL,R.A.            9.0  7.0  5.9  7.0  7.0  7.2  6.9  6.9  6.5  6.6  7.6  6.6\nGRILLO,A.E.          7.0  7.5  6.4  6.8  6.5  7.0  6.6  6.8  6.3  6.6  6.2  6.5\nLEVISTER,R.L.        9.6  6.9  5.7  6.6  6.9  6.6  6.2  6.0  5.8  5.8  7.2  6.0\nSIDOR,W.J.           7.7  6.2  5.1  5.6  5.6  5.9  5.6  5.6  5.3  5.5  6.3  5.3\nMIGNONE,A.F.         6.6  7.4  6.2  6.2  5.4  5.7  5.8  5.9  5.2  5.8  4.7  5.2\nCOHEN,S.S.           7.0  5.9  4.9  5.1  5.4  5.9  4.8  5.1  4.7  4.9  6.8  5.0\nBRACKEN,J.J.         7.3  6.4  4.3  6.5  6.0  6.2  5.7  5.7  5.1  5.3  5.5  4.8\n```\n\n\n:::\n\n```{.r .cell-code}\njudges_renamed %>%\n  arrange(desc(RTEN), # sort by retention score, then by number of contacts\n          desc(contacts))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                contacts INTG DMNR DILG CFMG DECI PREP FAMI ORAL WRIT PHYS RTEN\nRUBINOW,J.E.         7.1  9.2  9.0  9.0  8.4  8.6  9.1  9.1  8.9  9.0  8.9  9.2\nCALLAHAN,R.J.       10.6  9.0  8.9  8.7  8.5  8.5  8.5  8.5  8.6  8.4  9.1  9.0\nNARUK,H.J.           7.8  8.9  8.7  8.9  8.7  8.8  8.9  9.0  8.8  8.9  9.0  9.0\nDALY,J.J.            7.3  8.9  8.9  8.7  8.6  8.5  8.4  8.4  8.4  8.5  8.8  8.8\nSHEA,J.F.JR.         7.3  8.9  8.8  8.7  8.4  8.5  8.5  8.5  8.4  8.4  8.8  8.8\nMULVEY,H.M.          7.5  8.7  8.5  8.6  8.5  8.4  8.5  8.5  8.4  8.4  8.7  8.7\nO'SULLIVAN,T.J.      7.5  9.0  8.9  8.7  8.4  8.5  8.4  8.3  8.3  8.3  8.8  8.7\nALEXANDER,J.M.       6.8  8.9  8.8  8.5  7.8  8.1  8.0  8.0  7.8  7.9  8.5  8.7\nBERDON,R.I.          6.8  8.8  8.5  8.8  8.3  8.5  8.7  8.7  8.4  8.5  8.8  8.7\nBURNS,E.B.           6.2  8.8  8.7  8.5  7.9  8.0  8.1  8.0  8.0  8.0  8.6  8.6\nSHEA,D.M.            6.9  8.5  7.8  8.5  8.1  8.2  8.4  8.5  8.1  8.3  8.7  8.3\nSPEZIALE,J.A.        8.5  8.3  8.1  8.3  8.4  8.2  8.2  8.1  7.9  8.0  8.0  8.2\nO'BRIEN,F.J.         7.1  8.5  8.3  8.0  7.9  7.9  7.8  7.8  7.8  7.7  8.3  8.2\nPASKEY,L.            7.5  8.1  7.7  8.2  8.0  8.1  8.2  8.4  8.0  8.1  8.4  8.1\nWRIGHT,D.B.          7.1  8.4  8.4  7.7  7.5  7.7  7.8  8.2  8.0  8.1  8.3  8.1\nLEVINE,I.            8.3  8.2  7.4  7.8  7.7  7.7  7.7  7.8  7.5  7.6  8.0  8.0\nSPONZO,M.J.          6.9  8.3  8.0  8.1  7.9  7.9  7.9  7.7  7.6  7.7  8.1  8.0\nHADDEN,W.L.JR.       6.5  8.1  8.0  8.0  7.9  8.0  7.9  7.8  7.8  7.8  8.4  8.0\nSATANIELLO,A.G.      8.4  8.0  7.9  7.9  7.8  7.8  7.6  7.4  7.4  7.4  8.1  7.9\nTIERNEY,W.L.JR.      8.3  8.2  7.8  8.3  8.4  8.3  7.7  7.6  7.5  7.7  8.1  7.9\nDANNEHY,J.F.         8.2  7.9  6.7  8.1  7.9  8.0  7.9  8.1  7.7  7.8  8.5  7.9\nARMENTANO,A.J.       7.2  8.1  7.8  7.8  7.5  7.6  7.5  7.5  7.3  7.4  7.9  7.8\nAARONSON,L.H.        5.7  7.9  7.7  7.3  7.1  7.4  7.1  7.1  7.1  7.0  8.3  7.8\nDEAN,H.H.            7.0  8.0  7.6  7.4  7.3  7.5  7.1  7.2  7.1  7.2  8.4  7.7\nDRISCOLL,P.J.        6.7  8.6  8.2  6.8  6.9  6.6  7.1  7.3  7.2  7.2  8.1  7.7\nSTAPLETON,J.F.       6.5  8.2  7.7  7.8  7.6  7.7  7.7  7.7  7.5  7.6  8.5  7.7\nHAMILL,E.C.          7.3  8.0  7.4  7.7  7.3  7.3  7.3  7.2  7.1  7.2  8.0  7.6\nMISSAL,H.M.          6.2  8.3  8.1  7.7  7.4  7.3  7.3  7.3  7.2  7.3  7.8  7.6\nSADEN.G.A.           6.6  7.4  6.9  8.4  8.0  7.9  8.2  8.4  7.7  7.9  8.4  7.5\nHULL,T.C.            7.7  7.7  6.7  7.5  7.4  7.5  7.1  7.3  7.1  7.3  8.1  7.4\nMARTIN,L.F.          7.1  8.2  7.7  7.1  6.6  6.6  6.7  6.7  6.8  6.8  7.5  7.3\nDEVITA,H.J.          6.5  8.0  7.6  7.2  7.0  7.1  6.9  7.0  7.0  7.1  6.9  7.2\nZARRILLI,K.J.        8.6  7.4  7.0  7.5  7.5  7.7  7.4  7.2  6.9  7.0  7.8  7.1\nTESTO,R.J.           8.3  7.3  7.0  6.8  7.0  7.1  6.7  6.7  6.7  6.7  8.0  7.0\nHEALEY.A.H.          8.0  7.6  6.6  7.2  6.5  6.5  6.8  6.7  6.4  6.5  6.9  6.7\nWALL,R.A.            9.0  7.0  5.9  7.0  7.0  7.2  6.9  6.9  6.5  6.6  7.6  6.6\nMCGRATH,J.F.         7.6  7.3  6.9  6.8  6.7  6.8  6.4  6.3  6.3  6.3  7.4  6.6\nGRILLO,A.E.          7.0  7.5  6.4  6.8  6.5  7.0  6.6  6.8  6.3  6.6  6.2  6.5\nLEVISTER,R.L.        9.6  6.9  5.7  6.6  6.9  6.6  6.2  6.0  5.8  5.8  7.2  6.0\nSIDOR,W.J.           7.7  6.2  5.1  5.6  5.6  5.9  5.6  5.6  5.3  5.5  6.3  5.3\nMIGNONE,A.F.         6.6  7.4  6.2  6.2  5.4  5.7  5.8  5.9  5.2  5.8  4.7  5.2\nCOHEN,S.S.           7.0  5.9  4.9  5.1  5.4  5.9  4.8  5.1  4.7  4.9  6.8  5.0\nBRACKEN,J.J.         7.3  6.4  4.3  6.5  6.0  6.2  5.7  5.7  5.1  5.3  5.5  4.8\n```\n\n\n:::\n:::\n\nWhile there are many other dplyr verbs, these will get you pretty far. For a more advanced reference, see [this dplyr cheatsheet](https://www.rstudio.com/wp-content/uploads/2015/02/data-wrangling-cheatsheet.pdf). Now let's pivot to some basic data visualization.\n\n## Data Visualization\n\nLast time, we learned how to create a simple histogram with the hist function in base R. As a general rule, data visualization is more difficult in tidyverse compared to base R, but it's also much prettier and more customizable. We'll return to data visualization tomorrow, so don't worry if it's not perfectly clear at the end of today.\n\nIn tidyverse (and specifically, with the package ggplot2), all plots are organized with multiple \"layers.\" You can think of each layer as adding detail to the one before it. Our first layer is always something called the *aesthetic layer*. This tells R which variables are represented by each axis (and by other things like color or dot size).\n\n\n::: {.cell}\n\n```{.r .cell-code}\njudges_renamed %>% # load the dataframe and pipe it, as usual\n  ggplot(aes(x = INTG)) # since this is a histogram, we need to specify the variable on the x-axis but not the y-axis (which will be the number of times it occurs).\n```\n\n::: {.cell-output-display}\n![](02_tidy1_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nWith just an aesthetic layer, we have the background and x-axis of our plot, but no data. That's because we haven't told R what kind of plot we want yet. Let's do that now.\n\n\n::: {.cell}\n\n```{.r .cell-code}\njudges_renamed %>%\n  ggplot(aes(x = INTG)) + # to add a layer, we use a plus sign\n  geom_histogram() # add the default histogram of our x variable\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](02_tidy1_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nThis is a bit better, but the default settings aren't well-suited to our data set. In particular, the bins are too thin, making it hard to see the general shape of the distribution. We can fix this by setting the number of bins or the width of each bin. We'll also change the color.\n\n\n::: {.cell}\n\n```{.r .cell-code}\njudges_renamed %>%\n  ggplot(aes(x = INTG)) + \n  geom_histogram(binwidth = 0.5, color = \"seagreen\", fill = \"seagreen\", alpha = 0.5) \n```\n\n::: {.cell-output-display}\n![](02_tidy1_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nThis looks a lot better. The bins are an appropriate width for the number and range of observations in our data set, and the colors are pleasant. But it would be nice to label the x-axis more clearly and add a title.\n\n\n::: {.cell}\n\n```{.r .cell-code}\njudges_renamed %>%\n  ggplot(aes(x = INTG)) + \n  geom_histogram(binwidth = 0.5, color = \"seagreen\", fill = \"seagreen\", alpha = 0.5) +\n  labs(x = \"Integrity score\", title = \"Histogram of Judges' Integrity Scores (Connecticut, 1977)\") # add axis label and title\n```\n\n::: {.cell-output-display}\n![](02_tidy1_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nThis looks pretty good. But we can customize the formatting even more with a theme layer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\njudges_renamed %>%\n  ggplot(aes(x = INTG)) + \n  geom_histogram(binwidth = 0.5, color = \"seagreen\", fill = \"seagreen\", alpha = 0.5) +\n  labs(x = \"Integrity score\", title = \"Histogram of Judges' Integrity Scores (Connecticut, 1977)\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](02_tidy1_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n:::{.callout-tip}\n### Exercise\nCreate a histogram for a different variable in the data set. Experiment with different\nbin widths. Using [this guide](https://bookdown.org/hneth/ds4psy/D-3-apx-colors-basics.html) to the built-in colors in R, change the color of the bars.\n:::\n",
    "supporting": [
      "02_tidy1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}